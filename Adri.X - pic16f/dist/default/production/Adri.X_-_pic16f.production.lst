

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr 20 11:21:37 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 1.45
    45                           ; Generated 16/11/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F628A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  008C                     	;# 
   106  008E                     	;# 
   107  0092                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009F                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  008C                     	;# 
   143  008E                     	;# 
   144  0092                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009F                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  008C                     	;# 
   180  008E                     	;# 
   181  0092                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009F                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0015                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001F                     	;# 
   213  0081                     	;# 
   214  0085                     	;# 
   215  0086                     	;# 
   216  008C                     	;# 
   217  008E                     	;# 
   218  0092                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009F                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  008C                     	;# 
   254  008E                     	;# 
   255  0092                     	;# 
   256  0098                     	;# 
   257  0099                     	;# 
   258  009A                     	;# 
   259  009B                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009F                     	;# 
   263                           
   264                           	psect	idataBANK0
   265  0000'                    __pidataBANK0:	
   266                           
   267                           ;initializer for _add_passo
   268  0000' 3418               	retlw	24
   269                           
   270                           ;initializer for _add_u_minuto
   271  0001' 340E               	retlw	14
   272                           
   273                           ;initializer for _add_d_minuto
   274  0002' 3409               	retlw	9
   275                           
   276                           ;initializer for _add_u_hora
   277  0003' 3404               	retlw	4
   278                           
   279                           	psect	nvBANK0
   280  0000'                    __pnvBANK0:	
   281  0000'                    _Hora:	
   282  0000'                    	ds	1
   283  0001'                    _Min:	
   284  0001'                    	ds	1
   285  0006                     _PORTBbits	set	6
   286  0018                     _RCSTA	set	24
   287  0005                     _PORTA	set	5
   288  001F                     _CMCON	set	31
   289  001A                     _RCREG	set	26
   290  0001                     _TMR0	set	1
   291  0019                     _TXREG	set	25
   292  0067                     _EEIF	set	103
   293  005E                     _PEIE	set	94
   294  005C                     _INTE	set	92
   295  005D                     _T0IE	set	93
   296  005A                     _T0IF	set	90
   297  005F                     _GIE	set	95
   298  0065                     _RCIF	set	101
   299  0029                     _RA1	set	41
   300  0030                     _RB0	set	48
   301  005A                     _TMR0IF	set	90
   302  0059                     _INTF	set	89
   303  0064                     _TXIF	set	100
   304  009D                     _EECON2	set	157
   305  009A                     _EEDATA	set	154
   306  009B                     _EEADR	set	155
   307  0099                     _SPBRG	set	153
   308  0098                     _TXSTA	set	152
   309  0081                     _OPTION_REG	set	129
   310  04E0                     _RD	set	1248
   311  04E1                     _WR	set	1249
   312  04E2                     _WREN	set	1250
   313  0465                     _RCIE	set	1125
   314  0432                     _TRISB2	set	1074
   315  040E                     _INTEDG	set	1038
   316  0430                     _TRISB0	set	1072
   317  0437                     _TRISB7	set	1079
   318  0429                     _TRISA1	set	1065
   319                           
   320                           ; #config settings
   321  0000                     
   322                           	psect	cinit
   323  0000'                    start_initialization:	
   324  0000'                    __initialization:	
   325                           
   326                           ; Initialize objects allocated to BANK0
   327  0000' 2000'              	fcall	__pidataBANK0	;fetch initializer
   328  0001' 0080'              	movwf	__pdataBANK0& (0+127)
   329  0002' 2000'              	fcall	__pidataBANK0+1	;fetch initializer
   330  0003' 0080'              	movwf	(__pdataBANK0+1)& (0+127)
   331  0004' 2000'              	fcall	__pidataBANK0+2	;fetch initializer
   332  0005' 0080'              	movwf	(__pdataBANK0+2)& (0+127)
   333  0006' 2000'              	fcall	__pidataBANK0+3	;fetch initializer
   334  0007' 0080'              	movwf	(__pdataBANK0+3)& (0+127)
   335                           
   336                           ; Clear objects allocated to BANK1
   337  0008' 1383               	bcf	3,7	;select IRP bank0
   338  0009' 3000'              	movlw	low __pbssBANK1
   339  000A' 0084               	movwf	4
   340  000B' 3000'              	movlw	low (__pbssBANK1+20)
   341  000C' 2000'              	fcall	clear_ram0
   342                           
   343                           ; Clear objects allocated to BANK0
   344  000D' 3000'              	movlw	low __pbssBANK0
   345  000E' 0084               	movwf	4
   346  000F' 3000'              	movlw	low (__pbssBANK0+18)
   347  0010' 2000'              	fcall	clear_ram0
   348  0011'                    end_of_initialization:	
   349                           ;End of C runtime variable initialization code
   350                           
   351  0011'                    __end_of__initialization:	
   352  0011' 0183               	clrf	3
   353  0012' 2800'              	ljmp	_main	;jump to C main() function
   354                           
   355                           	psect	bssBANK0
   356  0000'                    __pbssBANK0:	
   357  0000'                    _string:	
   358  0000'                    	ds	5
   359  0005'                    _pendencia_remedio:	
   360  0005'                    	ds	4
   361  0009'                    _add_d_hora:	
   362  0009'                    	ds	1
   363  000A'                    _seg:	
   364  000A'                    	ds	1
   365  000B'                    _botao:	
   366  000B'                    	ds	1
   367  000C'                    _led:	
   368  000C'                    	ds	1
   369  000D'                    _dado:	
   370  000D'                    	ds	1
   371  000E'                    _flag:	
   372  000E'                    	ds	1
   373  000F'                    _libera:	
   374  000F'                    	ds	1
   375  0010'                    _in:	
   376  0010'                    	ds	1
   377  0011'                    _i:	
   378  0011'                    	ds	1
   379                           
   380                           	psect	dataBANK0
   381  0000'                    __pdataBANK0:	
   382  0000'                    _add_passo:	
   383  0000'                    	ds	1
   384  0001'                    _add_u_minuto:	
   385  0001'                    	ds	1
   386  0002'                    _add_d_minuto:	
   387  0002'                    	ds	1
   388  0003'                    _add_u_hora:	
   389  0003'                    	ds	1
   390                           
   391                           	psect	bssBANK1
   392  0000'                    __pbssBANK1:	
   393  0000'                    _remedio:	
   394  0000'                    	ds	20
   395                           
   396                           	psect	clrtext
   397  0000'                    clear_ram0:	
   398                           ;	Called with FSR containing the base address, and
   399                           ;	W with the last address+1
   400                           
   401  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   402  0001'                    clrloop0:	
   403  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   404  0002' 0A84               	incf	4,f	;increment pointer
   405  0003' 0604               	xorwf	4,w	;XOR with final address
   406  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   407  0005' 3400               	retlw	0	;all done for this memory range, return
   408  0006' 0604               	xorwf	4,w	;XOR again to restore value
   409  0007' 2801'              	goto	clrloop0	;do the next byte
   410                           
   411                           	psect	cstackBANK1
   412  0000'                    __pcstackBANK1:	
   413  0000'                    ??_atualiza_remedio:	
   414                           
   415                           ; 1 bytes @ 0x0
   416  0000'                    	ds	9
   417                           
   418                           	psect	cstackCOMMON
   419  0000'                    __pcstackCOMMON:	
   420  0000'                    ?_configura_pic:	
   421  0000'                    ?_configura_uart:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0000'                    ?_atualiza_relogio:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0000'                    ?_atualiza_variaveis:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0000'                    ?_controle_servo:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0000'                    ?_aciona:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0000'                    ?_envia_dados_da_memoria:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0000'                    ?_atualiza_relogio_blue:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0000'                    ?_incrementa_min:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0000'                    ??_incrementa_min:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0000'                    ?_cadastra_relogio:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0000'                    ?_verifica:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0000'                    ?_atualiza_remedio:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0000'                    ?_main:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0000'                    ?_enviaDados:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0000'                    ??_enviaDados:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0000'                    ?_envia_teste:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0000'                    ?_comunica:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0000'                    ?_serial:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0000'                    ?i1_le_eeprom:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0000'                    ?i1___awdiv:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0000'                    ?i1___awmod:	
   482                           ; 2 bytes @ 0x0
   483                           
   484  0000'                    enviaDados@dados:	
   485                           ; 2 bytes @ 0x0
   486                           
   487  0000'                    i1le_eeprom@address:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0000'                    i1___awdiv@divisor:	
   491                           ; 2 bytes @ 0x0
   492                           
   493  0000'                    i1___awmod@divisor:	
   494                           ; 2 bytes @ 0x0
   495                           
   496                           
   497                           ; 2 bytes @ 0x0
   498  0000'                    	ds	2
   499  0002'                    ??i1_le_eeprom:	
   500  0002'                    ?i1___bmul:	
   501                           ; 1 bytes @ 0x2
   502                           
   503  0002'                    i1___bmul@multiplicand:	
   504                           ; 1 bytes @ 0x2
   505                           
   506  0002'                    i1___awdiv@dividend:	
   507                           ; 1 bytes @ 0x2
   508                           
   509  0002'                    i1___awmod@dividend:	
   510                           ; 2 bytes @ 0x2
   511                           
   512                           
   513                           ; 2 bytes @ 0x2
   514  0002'                    	ds	1
   515  0003'                    ??i1___bmul:	
   516                           
   517                           ; 1 bytes @ 0x3
   518  0003'                    	ds	1
   519  0004'                    ??i1___awdiv:	
   520  0004'                    ??i1___awmod:	
   521                           ; 1 bytes @ 0x4
   522                           
   523  0004'                    i1___bmul@product:	
   524                           ; 1 bytes @ 0x4
   525                           
   526                           
   527                           ; 1 bytes @ 0x4
   528  0004'                    	ds	1
   529  0005'                    i1___bmul@multiplier:	
   530  0005'                    i1___awdiv@counter:	
   531                           ; 1 bytes @ 0x5
   532                           
   533  0005'                    i1___awmod@counter:	
   534                           ; 1 bytes @ 0x5
   535                           
   536                           
   537                           ; 1 bytes @ 0x5
   538  0005'                    	ds	1
   539  0006'                    ??_envia_dados_da_memoria:	
   540  0006'                    i1___awdiv@sign:	
   541                           ; 1 bytes @ 0x6
   542                           
   543  0006'                    i1___awmod@sign:	
   544                           ; 1 bytes @ 0x6
   545                           
   546                           
   547                           ; 1 bytes @ 0x6
   548  0006'                    	ds	1
   549  0007'                    envia_dados_da_memoria@indice:	
   550  0007'                    i1___awdiv@quotient:	
   551                           ; 1 bytes @ 0x7
   552                           
   553                           
   554                           ; 2 bytes @ 0x7
   555  0007'                    	ds	2
   556  0009'                    ??_verifica:	
   557  0009'                    ??_envia_teste:	
   558                           ; 1 bytes @ 0x9
   559                           
   560  0009'                    ?i1_grava_eeprom:	
   561                           ; 1 bytes @ 0x9
   562                           
   563  0009'                    i1grava_eeprom@address:	
   564                           ; 1 bytes @ 0x9
   565                           
   566                           
   567                           ; 2 bytes @ 0x9
   568  0009'                    	ds	2
   569  000B'                    i1grava_eeprom@data:	
   570                           
   571                           ; 1 bytes @ 0xB
   572  000B'                    	ds	1
   573  000C'                    ??i1_grava_eeprom:	
   574                           
   575                           ; 1 bytes @ 0xC
   576  000C'                    	ds	2
   577                           
   578                           	psect	cstackBANK0
   579  0000'                    __pcstackBANK0:	
   580  0000'                    ??_atualiza_relogio_blue:	
   581  0000'                    ??_cadastra_relogio:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0000'                    verifica@count:	
   585                           ; 1 bytes @ 0x0
   586                           
   587                           
   588                           ; 1 bytes @ 0x0
   589  0000'                    	ds	3
   590  0003'                    atualiza_relogio_blue@i:	
   591                           
   592                           ; 1 bytes @ 0x3
   593  0003'                    	ds	1
   594  0004'                    ??_comunica:	
   595                           
   596                           ; 1 bytes @ 0x4
   597  0004'                    	ds	4
   598  0008'                    _comunica$760:	
   599                           
   600                           ; 1 bytes @ 0x8
   601  0008'                    	ds	1
   602  0009'                    ??_serial:	
   603                           
   604                           ; 1 bytes @ 0x9
   605  0009'                    	ds	5
   606  000E'                    ??_configura_pic:	
   607  000E'                    ??_configura_uart:	
   608                           ; 1 bytes @ 0xE
   609                           
   610  000E'                    ??_controle_servo:	
   611                           ; 1 bytes @ 0xE
   612                           
   613  000E'                    ?_le_eeprom:	
   614                           ; 1 bytes @ 0xE
   615                           
   616  000E'                    le_eeprom@address:	
   617                           ; 1 bytes @ 0xE
   618                           
   619                           
   620                           ; 2 bytes @ 0xE
   621  000E'                    	ds	2
   622  0010'                    ??_le_eeprom:	
   623  0010'                    ?___bmul:	
   624                           ; 1 bytes @ 0x10
   625                           
   626  0010'                    controle_servo@numero_do_remedio:	
   627                           ; 1 bytes @ 0x10
   628                           
   629  0010'                    ___bmul@multiplicand:	
   630                           ; 1 bytes @ 0x10
   631                           
   632                           
   633                           ; 1 bytes @ 0x10
   634  0010'                    	ds	1
   635  0011'                    ??___bmul:	
   636                           
   637                           ; 1 bytes @ 0x11
   638  0011'                    	ds	1
   639  0012'                    ___bmul@product:	
   640                           
   641                           ; 1 bytes @ 0x12
   642  0012'                    	ds	1
   643  0013'                    ___bmul@multiplier:	
   644                           
   645                           ; 1 bytes @ 0x13
   646  0013'                    	ds	1
   647  0014'                    ??_atualiza_relogio:	
   648  0014'                    ??_atualiza_variaveis:	
   649                           ; 1 bytes @ 0x14
   650                           
   651  0014'                    ?___awdiv:	
   652                           ; 1 bytes @ 0x14
   653                           
   654  0014'                    ?___awmod:	
   655                           ; 2 bytes @ 0x14
   656                           
   657  0014'                    ___awdiv@divisor:	
   658                           ; 2 bytes @ 0x14
   659                           
   660  0014'                    ___awmod@divisor:	
   661                           ; 2 bytes @ 0x14
   662                           
   663                           
   664                           ; 2 bytes @ 0x14
   665  0014'                    	ds	2
   666  0016'                    atualiza_variaveis@count:	
   667  0016'                    ___awdiv@dividend:	
   668                           ; 1 bytes @ 0x16
   669                           
   670  0016'                    ___awmod@dividend:	
   671                           ; 2 bytes @ 0x16
   672                           
   673                           
   674                           ; 2 bytes @ 0x16
   675  0016'                    	ds	2
   676  0018'                    ??___awdiv:	
   677  0018'                    ??___awmod:	
   678                           ; 1 bytes @ 0x18
   679                           
   680                           
   681                           ; 1 bytes @ 0x18
   682  0018'                    	ds	1
   683  0019'                    ___awdiv@counter:	
   684  0019'                    ___awmod@counter:	
   685                           ; 1 bytes @ 0x19
   686                           
   687                           
   688                           ; 1 bytes @ 0x19
   689  0019'                    	ds	1
   690  001A'                    ___awdiv@sign:	
   691  001A'                    ___awmod@sign:	
   692                           ; 1 bytes @ 0x1A
   693                           
   694                           
   695                           ; 1 bytes @ 0x1A
   696  001A'                    	ds	1
   697  001B'                    ___awdiv@quotient:	
   698                           
   699                           ; 2 bytes @ 0x1B
   700  001B'                    	ds	2
   701  001D'                    ?_grava_eeprom:	
   702  001D'                    grava_eeprom@address:	
   703                           ; 1 bytes @ 0x1D
   704                           
   705                           
   706                           ; 2 bytes @ 0x1D
   707  001D'                    	ds	2
   708  001F'                    grava_eeprom@data:	
   709                           
   710                           ; 1 bytes @ 0x1F
   711  001F'                    	ds	1
   712  0020'                    ??_grava_eeprom:	
   713                           
   714                           ; 1 bytes @ 0x20
   715  0020'                    	ds	2
   716  0022'                    _atualiza_remedio$761:	
   717                           
   718                           ; 1 bytes @ 0x22
   719  0022'                    	ds	1
   720  0023'                    atualiza_remedio@dados:	
   721                           
   722                           ; 1 bytes @ 0x23
   723  0023'                    	ds	1
   724  0024'                    atualiza_remedio@count:	
   725                           
   726                           ; 1 bytes @ 0x24
   727  0024'                    	ds	1
   728  0025'                    ??_aciona:	
   729                           
   730                           ; 1 bytes @ 0x25
   731  0025'                    	ds	1
   732  0026'                    ??_main:	
   733                           
   734                           	psect	maintext
   735  0000'                    __pmaintext:	
   736                           ; 1 bytes @ 0x26
   737 ;;
   738 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   739 ;;
   740 ;; *************** function _main *****************
   741 ;; Defined at:
   742 ;;		line 4 in file "main.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : B00/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   756 ;;      Params:         0       0       0       0
   757 ;;      Locals:         0       0       0       0
   758 ;;      Temps:          0       0       0       0
   759 ;;      Totals:         0       0       0       0
   760 ;;Total ram usage:        0 bytes
   761 ;; Hardware stack levels required when called:    7
   762 ;; This function calls:
   763 ;;		_aciona
   764 ;;		_atualiza_relogio
   765 ;;		_atualiza_variaveis
   766 ;;		_configura_pic
   767 ;;		_configura_uart
   768 ;;		_controle_servo
   769 ;; This function is called by:
   770 ;;		Startup code after reset
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           
   775                           ;psect for function _main
   776  0000'                    _main:	
   777                           
   778                           ;main.c: 6: configura_pic();
   779                           
   780                           ;incstack = 0
   781                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   782  0000' 2000'              	fcall	_configura_pic
   783                           
   784                           ;main.c: 7: configura_uart();
   785  0001' 2000'              	fcall	_configura_uart
   786                           
   787                           ;main.c: 8: atualiza_relogio();
   788  0002' 2000'              	fcall	_atualiza_relogio
   789                           
   790                           ;main.c: 9: atualiza_variaveis();
   791  0003' 2000'              	fcall	_atualiza_variaveis
   792  0004'                    l2030:	
   793                           ;main.c: 10: while(1)
   794                           
   795                           
   796                           ;main.c: 11: {
   797                           ;main.c: 12: controle_servo(0);
   798  0004' 3000               	movlw	0
   799  0005' 2000'              	fcall	_controle_servo
   800                           
   801                           ;main.c: 13: if(libera == 1)
   802  0006' 1283               	bcf	3,5	;RP0=0, select bank0
   803  0007' 1303               	bcf	3,6	;RP1=0, select bank0
   804  0008' 030F'              	decf	_libera,w
   805  0009' 1D03               	btfss	3,2
   806  000A' 2804'              	goto	l2030
   807                           
   808                           ;main.c: 14: {
   809                           ;main.c: 15: aciona();
   810  000B' 2000'              	fcall	_aciona
   811  000C' 2804'              	goto	l2030
   812  000D'                    __end_of_main:	
   813                           
   814                           	psect	text1
   815  0000'                    __ptext1:	
   816 ;; *************** function _configura_uart *****************
   817 ;; Defined at:
   818 ;;		line 25 in file "configuration.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   832 ;;      Params:         0       0       0       0
   833 ;;      Locals:         0       0       0       0
   834 ;;      Temps:          0       0       0       0
   835 ;;      Totals:         0       0       0       0
   836 ;;Total ram usage:        0 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; Hardware stack levels required when called:    4
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           
   847                           ;psect for function _configura_uart
   848  0000'                    _configura_uart:	
   849                           
   850                           ;configuration.c: 27: TRISB2 = 0;
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _configura_uart: [wreg]
   854  0000' 1683               	bsf	3,5	;RP0=1, select bank1
   855  0001' 1303               	bcf	3,6	;RP1=0, select bank1
   856  0002' 1106               	bcf	6,2	;volatile
   857                           
   858                           ;configuration.c: 28: TRISB2 = 1;
   859  0003' 1506               	bsf	6,2	;volatile
   860                           
   861                           ;configuration.c: 29: TXSTA = 0x20;
   862  0004' 3020               	movlw	32
   863  0005' 0098               	movwf	24	;volatile
   864                           
   865                           ;configuration.c: 30: RCSTA = 0x90;
   866  0006' 3090               	movlw	144
   867  0007' 1283               	bcf	3,5	;RP0=0, select bank0
   868  0008' 1303               	bcf	3,6	;RP1=0, select bank0
   869  0009' 0098               	movwf	24	;volatile
   870                           
   871                           ;configuration.c: 31: SPBRG = 0x4D;
   872  000A' 304D               	movlw	77
   873  000B' 1683               	bsf	3,5	;RP0=1, select bank1
   874  000C' 1303               	bcf	3,6	;RP1=0, select bank1
   875  000D' 0099               	movwf	25	;volatile
   876                           
   877                           ;configuration.c: 32: RCIE = 1;
   878  000E' 168C               	bsf	12,5	;volatile
   879                           
   880                           ;configuration.c: 33: PEIE = 1;
   881  000F' 170B               	bsf	11,6	;volatile
   882                           
   883                           ;configuration.c: 34: RCIF = 0;
   884  0010' 1283               	bcf	3,5	;RP0=0, select bank0
   885  0011' 1303               	bcf	3,6	;RP1=0, select bank0
   886  0012' 128C               	bcf	12,5	;volatile
   887  0013' 0008               	return
   888  0014'                    __end_of_configura_uart:	
   889                           
   890                           	psect	text2
   891  0000'                    __ptext2:	
   892 ;; *************** function _configura_pic *****************
   893 ;; Defined at:
   894 ;;		line 3 in file "configuration.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, status,2
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   908 ;;      Params:         0       0       0       0
   909 ;;      Locals:         0       0       0       0
   910 ;;      Temps:          0       0       0       0
   911 ;;      Totals:         0       0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    4
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _configura_pic
   924  0000'                    _configura_pic:	
   925                           
   926                           ;configuration.c: 6: CMCON = 0xff;
   927                           
   928                           ;incstack = 0
   929                           ; Regs used in _configura_pic: [wreg+status,2]
   930  0000' 30FF               	movlw	255
   931  0001' 1283               	bcf	3,5	;RP0=0, select bank0
   932  0002' 1303               	bcf	3,6	;RP1=0, select bank0
   933  0003' 009F               	movwf	31	;volatile
   934                           
   935                           ;configuration.c: 7: TRISA1 = 0;
   936  0004' 1683               	bsf	3,5	;RP0=1, select bank1
   937  0005' 1303               	bcf	3,6	;RP1=0, select bank1
   938  0006' 1085               	bcf	5,1	;volatile
   939                           
   940                           ;configuration.c: 8: TRISB7 = 0;
   941  0007' 1386               	bcf	6,7	;volatile
   942                           
   943                           ;configuration.c: 9: PORTA = 0x00;
   944  0008' 1283               	bcf	3,5	;RP0=0, select bank0
   945  0009' 1303               	bcf	3,6	;RP1=0, select bank0
   946  000A' 0185               	clrf	5	;volatile
   947                           
   948                           ;configuration.c: 12: GIE = 1;
   949  000B' 178B               	bsf	11,7	;volatile
   950                           
   951                           ;configuration.c: 13: OPTION_REG = 0x01;
   952  000C' 3001               	movlw	1
   953  000D' 1683               	bsf	3,5	;RP0=1, select bank1
   954  000E' 1303               	bcf	3,6	;RP1=0, select bank1
   955  000F' 0081               	movwf	1	;volatile
   956                           
   957                           ;configuration.c: 14: TMR0 = 6;
   958  0010' 3006               	movlw	6
   959  0011' 1283               	bcf	3,5	;RP0=0, select bank0
   960  0012' 1303               	bcf	3,6	;RP1=0, select bank0
   961  0013' 0081               	movwf	1	;volatile
   962                           
   963                           ;configuration.c: 15: T0IF = 0;
   964  0014' 110B               	bcf	11,2	;volatile
   965                           
   966                           ;configuration.c: 16: T0IE = 1;
   967  0015' 168B               	bsf	11,5	;volatile
   968                           
   969                           ;configuration.c: 19: TRISB0 = 1;
   970  0016' 1683               	bsf	3,5	;RP0=1, select bank1
   971  0017' 1303               	bcf	3,6	;RP1=0, select bank1
   972  0018' 1406               	bsf	6,0	;volatile
   973                           
   974                           ;configuration.c: 20: INTE = 1;
   975  0019' 160B               	bsf	11,4	;volatile
   976                           
   977                           ;configuration.c: 21: INTEDG = 0;
   978  001A' 1301               	bcf	1,6	;volatile
   979  001B' 0008               	return
   980  001C'                    __end_of_configura_pic:	
   981                           
   982                           	psect	text3
   983  0000'                    __ptext3:	
   984 ;; *************** function _atualiza_variaveis *****************
   985 ;; Defined at:
   986 ;;		line 33 in file "logicSystem.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  count           1   22[BANK0 ] unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1000 ;;      Params:         0       0       0       0
  1001 ;;      Locals:         0       1       0       0
  1002 ;;      Temps:          0       2       0       0
  1003 ;;      Totals:         0       3       0       0
  1004 ;;Total ram usage:        3 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    5
  1007 ;; This function calls:
  1008 ;;		___bmul
  1009 ;;		_le_eeprom
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _atualiza_variaveis
  1017  0000'                    _atualiza_variaveis:	
  1018                           
  1019                           ;logicSystem.c: 35: char count;
  1020                           ;logicSystem.c: 36: for(count = 0; count < 4; count++)
  1021                           
  1022                           ;incstack = 0
  1023                           ; Regs used in _atualiza_variaveis: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1024  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1025  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1026  0002' 0196'              	clrf	atualiza_variaveis@count
  1027  0003'                    L1:	
  1028  0003' 3004               	movlw	4
  1029  0004' 0216'              	subwf	atualiza_variaveis@count,w
  1030  0005' 1803               	btfsc	3,0
  1031  0006' 0008               	return
  1032                           
  1033                           ;logicSystem.c: 37: {
  1034                           ;logicSystem.c: 38: remedio[count].d_hora = le_eeprom(add_d_hora + count);
  1035  0007' 0809'              	movf	_add_d_hora,w
  1036  0008' 0716'              	addwf	atualiza_variaveis@count,w
  1037  0009' 008E'              	movwf	le_eeprom@address
  1038  000A' 018F'              	clrf	le_eeprom@address+1
  1039  000B' 0D8F'              	rlf	le_eeprom@address+1,f
  1040  000C' 2000'              	fcall	_le_eeprom
  1041  000D' 1283               	bcf	3,5	;RP0=0, select bank0
  1042  000E' 1303               	bcf	3,6	;RP1=0, select bank0
  1043  000F' 0094'              	movwf	??_atualiza_variaveis
  1044  0010' 3005               	movlw	5
  1045  0011' 0095'              	movwf	??_atualiza_variaveis+1
  1046  0012' 0815'              	movf	??_atualiza_variaveis+1,w
  1047  0013' 0090'              	movwf	___bmul@multiplicand
  1048  0014' 0816'              	movf	atualiza_variaveis@count,w
  1049  0015' 2000'              	fcall	___bmul
  1050  0016' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  1051  0017' 0084               	movwf	4
  1052  0018' 1283               	bcf	3,5	;RP0=0, select bank0
  1053  0019' 1303               	bcf	3,6	;RP1=0, select bank0
  1054  001A' 0814'              	movf	??_atualiza_variaveis,w
  1055  001B' 1383               	bcf	3,7	;select IRP bank1
  1056  001C' 0080               	movwf	0
  1057                           
  1058                           ;logicSystem.c: 39: remedio[count].u_hora = le_eeprom(add_u_hora + count);
  1059  001D' 0803'              	movf	_add_u_hora,w
  1060  001E' 0716'              	addwf	atualiza_variaveis@count,w
  1061  001F' 008E'              	movwf	le_eeprom@address
  1062  0020' 018F'              	clrf	le_eeprom@address+1
  1063  0021' 0D8F'              	rlf	le_eeprom@address+1,f
  1064  0022' 2000'              	fcall	_le_eeprom
  1065  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  1066  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  1067  0025' 0094'              	movwf	??_atualiza_variaveis
  1068  0026' 3005               	movlw	5
  1069  0027' 0095'              	movwf	??_atualiza_variaveis+1
  1070  0028' 0815'              	movf	??_atualiza_variaveis+1,w
  1071  0029' 0090'              	movwf	___bmul@multiplicand
  1072  002A' 0816'              	movf	atualiza_variaveis@count,w
  1073  002B' 2000'              	fcall	___bmul
  1074  002C' 3E01               	addlw	1
  1075  002D' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  1076  002E' 0084               	movwf	4
  1077  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  1078  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  1079  0031' 0814'              	movf	??_atualiza_variaveis,w
  1080  0032' 1383               	bcf	3,7	;select IRP bank1
  1081  0033' 0080               	movwf	0
  1082                           
  1083                           ;logicSystem.c: 40: remedio[count].d_minuto = le_eeprom(add_d_minuto + count);
  1084  0034' 0802'              	movf	_add_d_minuto,w
  1085  0035' 0716'              	addwf	atualiza_variaveis@count,w
  1086  0036' 008E'              	movwf	le_eeprom@address
  1087  0037' 018F'              	clrf	le_eeprom@address+1
  1088  0038' 0D8F'              	rlf	le_eeprom@address+1,f
  1089  0039' 2000'              	fcall	_le_eeprom
  1090  003A' 1283               	bcf	3,5	;RP0=0, select bank0
  1091  003B' 1303               	bcf	3,6	;RP1=0, select bank0
  1092  003C' 0094'              	movwf	??_atualiza_variaveis
  1093  003D' 3005               	movlw	5
  1094  003E' 0095'              	movwf	??_atualiza_variaveis+1
  1095  003F' 0815'              	movf	??_atualiza_variaveis+1,w
  1096  0040' 0090'              	movwf	___bmul@multiplicand
  1097  0041' 0816'              	movf	atualiza_variaveis@count,w
  1098  0042' 2000'              	fcall	___bmul
  1099  0043' 3E02               	addlw	2
  1100  0044' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  1101  0045' 0084               	movwf	4
  1102  0046' 1283               	bcf	3,5	;RP0=0, select bank0
  1103  0047' 1303               	bcf	3,6	;RP1=0, select bank0
  1104  0048' 0814'              	movf	??_atualiza_variaveis,w
  1105  0049' 1383               	bcf	3,7	;select IRP bank1
  1106  004A' 0080               	movwf	0
  1107                           
  1108                           ;logicSystem.c: 41: remedio[count].u_minuto = le_eeprom(add_u_minuto + count);
  1109  004B' 0801'              	movf	_add_u_minuto,w
  1110  004C' 0716'              	addwf	atualiza_variaveis@count,w
  1111  004D' 008E'              	movwf	le_eeprom@address
  1112  004E' 018F'              	clrf	le_eeprom@address+1
  1113  004F' 0D8F'              	rlf	le_eeprom@address+1,f
  1114  0050' 2000'              	fcall	_le_eeprom
  1115  0051' 1283               	bcf	3,5	;RP0=0, select bank0
  1116  0052' 1303               	bcf	3,6	;RP1=0, select bank0
  1117  0053' 0094'              	movwf	??_atualiza_variaveis
  1118  0054' 3005               	movlw	5
  1119  0055' 0095'              	movwf	??_atualiza_variaveis+1
  1120  0056' 0815'              	movf	??_atualiza_variaveis+1,w
  1121  0057' 0090'              	movwf	___bmul@multiplicand
  1122  0058' 0816'              	movf	atualiza_variaveis@count,w
  1123  0059' 2000'              	fcall	___bmul
  1124  005A' 3E03               	addlw	3
  1125  005B' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  1126  005C' 0084               	movwf	4
  1127  005D' 1283               	bcf	3,5	;RP0=0, select bank0
  1128  005E' 1303               	bcf	3,6	;RP1=0, select bank0
  1129  005F' 0814'              	movf	??_atualiza_variaveis,w
  1130  0060' 1383               	bcf	3,7	;select IRP bank1
  1131  0061' 0080               	movwf	0
  1132                           
  1133                           ;logicSystem.c: 42: remedio[count].passo = le_eeprom(add_passo + count);
  1134  0062' 0800'              	movf	_add_passo,w
  1135  0063' 0716'              	addwf	atualiza_variaveis@count,w
  1136  0064' 008E'              	movwf	le_eeprom@address
  1137  0065' 018F'              	clrf	le_eeprom@address+1
  1138  0066' 0D8F'              	rlf	le_eeprom@address+1,f
  1139  0067' 2000'              	fcall	_le_eeprom
  1140  0068' 1283               	bcf	3,5	;RP0=0, select bank0
  1141  0069' 1303               	bcf	3,6	;RP1=0, select bank0
  1142  006A' 0094'              	movwf	??_atualiza_variaveis
  1143  006B' 3005               	movlw	5
  1144  006C' 0095'              	movwf	??_atualiza_variaveis+1
  1145  006D' 0815'              	movf	??_atualiza_variaveis+1,w
  1146  006E' 0090'              	movwf	___bmul@multiplicand
  1147  006F' 0816'              	movf	atualiza_variaveis@count,w
  1148  0070' 2000'              	fcall	___bmul
  1149  0071' 3E04               	addlw	4
  1150  0072' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  1151  0073' 0084               	movwf	4
  1152  0074' 1283               	bcf	3,5	;RP0=0, select bank0
  1153  0075' 1303               	bcf	3,6	;RP1=0, select bank0
  1154  0076' 0814'              	movf	??_atualiza_variaveis,w
  1155  0077' 1383               	bcf	3,7	;select IRP bank1
  1156  0078' 0080               	movwf	0
  1157  0079' 3001               	movlw	1
  1158  007A' 0094'              	movwf	??_atualiza_variaveis
  1159  007B' 0814'              	movf	??_atualiza_variaveis,w
  1160  007C' 0796'              	addwf	atualiza_variaveis@count,f
  1161  007D' 2803'              	goto	L1
  1162  007E'                    __end_of_atualiza_variaveis:	
  1163                           
  1164                           	psect	text4
  1165  0000'                    __ptext4:	
  1166 ;; *************** function _atualiza_relogio *****************
  1167 ;; Defined at:
  1168 ;;		line 101 in file "logicSystem.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, pclath, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1182 ;;      Params:         0       0       0       0
  1183 ;;      Locals:         0       0       0       0
  1184 ;;      Temps:          0       2       0       0
  1185 ;;      Totals:         0       2       0       0
  1186 ;;Total ram usage:        2 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    5
  1189 ;; This function calls:
  1190 ;;		___bmul
  1191 ;;		_le_eeprom
  1192 ;; This function is called by:
  1193 ;;		_main
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           
  1198                           ;psect for function _atualiza_relogio
  1199  0000'                    _atualiza_relogio:	
  1200                           
  1201                           ;logicSystem.c: 103: Hora = le_eeprom(add_d_hora + 20) * 10;
  1202                           
  1203                           ;incstack = 0
  1204                           ; Regs used in _atualiza_relogio: [wreg+status,2+status,0+pclath+cstack]
  1205  0000' 300A               	movlw	10
  1206  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  1207  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  1208  0003' 0094'              	movwf	??_atualiza_relogio
  1209  0004' 0814'              	movf	??_atualiza_relogio,w
  1210  0005' 0090'              	movwf	___bmul@multiplicand
  1211  0006' 0809'              	movf	_add_d_hora,w
  1212  0007' 3E14               	addlw	20
  1213  0008' 008E'              	movwf	le_eeprom@address
  1214  0009' 3000               	movlw	0
  1215  000A' 1803               	skipnc
  1216  000B' 3001               	movlw	1
  1217  000C' 008F'              	movwf	le_eeprom@address+1
  1218  000D' 2000'              	fcall	_le_eeprom
  1219  000E' 2000'              	fcall	___bmul
  1220  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  1221  0010' 1303               	bcf	3,6	;RP1=0, select bank0
  1222  0011' 0095'              	movwf	??_atualiza_relogio+1
  1223  0012' 0815'              	movf	??_atualiza_relogio+1,w
  1224  0013' 0080'              	movwf	_Hora
  1225                           
  1226                           ;logicSystem.c: 104: Hora += le_eeprom(add_d_hora + 21);
  1227  0014' 0809'              	movf	_add_d_hora,w
  1228  0015' 3E15               	addlw	21
  1229  0016' 008E'              	movwf	le_eeprom@address
  1230  0017' 3000               	movlw	0
  1231  0018' 1803               	skipnc
  1232  0019' 3001               	movlw	1
  1233  001A' 008F'              	movwf	le_eeprom@address+1
  1234  001B' 2000'              	fcall	_le_eeprom
  1235  001C' 1283               	bcf	3,5	;RP0=0, select bank0
  1236  001D' 1303               	bcf	3,6	;RP1=0, select bank0
  1237  001E' 0094'              	movwf	??_atualiza_relogio
  1238  001F' 0814'              	movf	??_atualiza_relogio,w
  1239  0020' 0780'              	addwf	_Hora,f
  1240                           
  1241                           ;logicSystem.c: 105: Min = le_eeprom(add_d_hora + 22) * 10;
  1242  0021' 300A               	movlw	10
  1243  0022' 0094'              	movwf	??_atualiza_relogio
  1244  0023' 0814'              	movf	??_atualiza_relogio,w
  1245  0024' 0090'              	movwf	___bmul@multiplicand
  1246  0025' 0809'              	movf	_add_d_hora,w
  1247  0026' 3E16               	addlw	22
  1248  0027' 008E'              	movwf	le_eeprom@address
  1249  0028' 3000               	movlw	0
  1250  0029' 1803               	skipnc
  1251  002A' 3001               	movlw	1
  1252  002B' 008F'              	movwf	le_eeprom@address+1
  1253  002C' 2000'              	fcall	_le_eeprom
  1254  002D' 2000'              	fcall	___bmul
  1255  002E' 1283               	bcf	3,5	;RP0=0, select bank0
  1256  002F' 1303               	bcf	3,6	;RP1=0, select bank0
  1257  0030' 0095'              	movwf	??_atualiza_relogio+1
  1258  0031' 0815'              	movf	??_atualiza_relogio+1,w
  1259  0032' 0081'              	movwf	_Min
  1260                           
  1261                           ;logicSystem.c: 106: Min += le_eeprom(add_d_hora + 23);
  1262  0033' 0809'              	movf	_add_d_hora,w
  1263  0034' 3E17               	addlw	23
  1264  0035' 008E'              	movwf	le_eeprom@address
  1265  0036' 3000               	movlw	0
  1266  0037' 1803               	skipnc
  1267  0038' 3001               	movlw	1
  1268  0039' 008F'              	movwf	le_eeprom@address+1
  1269  003A' 2000'              	fcall	_le_eeprom
  1270  003B' 1283               	bcf	3,5	;RP0=0, select bank0
  1271  003C' 1303               	bcf	3,6	;RP1=0, select bank0
  1272  003D' 0094'              	movwf	??_atualiza_relogio
  1273  003E' 0814'              	movf	??_atualiza_relogio,w
  1274  003F' 0781'              	addwf	_Min,f
  1275  0040' 0008               	return
  1276  0041'                    __end_of_atualiza_relogio:	
  1277                           
  1278                           	psect	text5
  1279  0000'                    __ptext5:	
  1280 ;; *************** function _le_eeprom *****************
  1281 ;; Defined at:
  1282 ;;		line 20 in file "memory.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  address         2   14[BANK0 ] int 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      unsigned char 
  1289 ;; Registers used:
  1290 ;;		wreg
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1296 ;;      Params:         0       2       0       0
  1297 ;;      Locals:         0       0       0       0
  1298 ;;      Temps:          0       0       0       0
  1299 ;;      Totals:         0       2       0       0
  1300 ;;Total ram usage:        2 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    4
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_atualiza_variaveis
  1307 ;;		_atualiza_relogio
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           
  1312                           ;psect for function _le_eeprom
  1313  0000'                    _le_eeprom:	
  1314                           
  1315                           ;memory.c: 22: EEADR = address;
  1316                           
  1317                           ;incstack = 0
  1318                           ; Regs used in _le_eeprom: [wreg]
  1319  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1320  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1321  0002' 080E'              	movf	le_eeprom@address,w
  1322  0003' 1683               	bsf	3,5	;RP0=1, select bank1
  1323  0004' 1303               	bcf	3,6	;RP1=0, select bank1
  1324  0005' 009B               	movwf	27	;volatile
  1325                           
  1326                           ;memory.c: 23: WREN = 0;
  1327  0006' 111C               	bcf	28,2	;volsfr
  1328                           
  1329                           ;memory.c: 24: RD = 1;
  1330  0007' 141C               	bsf	28,0	;volsfr
  1331                           
  1332                           ;memory.c: 25: return(EEDATA);
  1333  0008' 081A               	movf	26,w	;volatile
  1334  0009' 0008               	return
  1335  000A'                    __end_of_le_eeprom:	
  1336                           
  1337                           	psect	text6
  1338  0000'                    __ptext6:	
  1339 ;; *************** function _aciona *****************
  1340 ;; Defined at:
  1341 ;;		line 15 in file "logicSystem.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1355 ;;      Params:         0       0       0       0
  1356 ;;      Locals:         0       0       0       0
  1357 ;;      Temps:          0       1       0       0
  1358 ;;      Totals:         0       1       0       0
  1359 ;;Total ram usage:        1 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    6
  1362 ;; This function calls:
  1363 ;;		_atualiza_remedio
  1364 ;;		_controle_servo
  1365 ;; This function is called by:
  1366 ;;		_main
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           
  1371                           ;psect for function _aciona
  1372  0000'                    _aciona:	
  1373                           
  1374                           ;logicSystem.c: 17: for(in = 0; in < 4; in++)
  1375                           
  1376                           ;incstack = 0
  1377                           ; Regs used in _aciona: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1378  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1379  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1380  0002' 0190'              	clrf	_in
  1381  0003' 3004               	movlw	4
  1382  0004' 0210'              	subwf	_in,w
  1383  0005' 1803               	btfsc	3,0
  1384  0006' 2827'              	goto	l2022
  1385  0007'                    l2010:	
  1386                           
  1387                           ;logicSystem.c: 18: {
  1388                           ;logicSystem.c: 19: if(pendencia_remedio[in] == 1)
  1389  0007' 0810'              	movf	_in,w
  1390  0008' 3E00'              	addlw	(low (_pendencia_remedio| 0))& (0+255)
  1391  0009' 0084               	movwf	4
  1392  000A' 1383               	bcf	3,7	;select IRP bank0
  1393  000B' 0300               	decf	0,w
  1394  000C' 1D03               	btfss	3,2
  1395  000D' 281F'              	goto	l2018
  1396                           
  1397                           ;logicSystem.c: 20: {
  1398                           ;logicSystem.c: 21: atualiza_remedio(in);
  1399  000E' 0810'              	movf	_in,w
  1400  000F' 2000'              	fcall	_atualiza_remedio
  1401  0010'                    l2016:	
  1402                           ;logicSystem.c: 22: while(pendencia_remedio[in] == 1)
  1403                           
  1404  0010' 1283               	bcf	3,5	;RP0=0, select bank0
  1405  0011' 1303               	bcf	3,6	;RP1=0, select bank0
  1406  0012' 0810'              	movf	_in,w
  1407  0013' 3E00'              	addlw	(low (_pendencia_remedio| 0))& (0+255)
  1408  0014' 0084               	movwf	4
  1409  0015' 1383               	bcf	3,7	;select IRP bank0
  1410  0016' 0300               	decf	0,w
  1411  0017' 1D03               	btfss	3,2
  1412  0018' 281F'              	goto	l2018
  1413                           
  1414                           ;logicSystem.c: 23: {
  1415                           ;logicSystem.c: 24: controle_servo(in+1);
  1416  0019' 1283               	bcf	3,5	;RP0=0, select bank0
  1417  001A' 1303               	bcf	3,6	;RP1=0, select bank0
  1418  001B' 0810'              	movf	_in,w
  1419  001C' 3E01               	addlw	1
  1420  001D' 2000'              	fcall	_controle_servo
  1421  001E' 2810'              	goto	l2016
  1422  001F'                    l2018:	
  1423  001F' 3001               	movlw	1
  1424  0020' 00A5'              	movwf	??_aciona
  1425  0021' 0825'              	movf	??_aciona,w
  1426  0022' 0790'              	addwf	_in,f
  1427  0023' 3004               	movlw	4
  1428  0024' 0210'              	subwf	_in,w
  1429  0025' 1C03               	skipc
  1430  0026' 2807'              	goto	l2010
  1431  0027'                    l2022:	
  1432                           
  1433                           ;logicSystem.c: 25: }
  1434                           ;logicSystem.c: 26: }
  1435                           ;logicSystem.c: 27: }
  1436                           ;logicSystem.c: 28: libera = 0;
  1437  0027' 018F'              	clrf	_libera
  1438                           
  1439                           ;logicSystem.c: 29: led = 0;
  1440  0028' 018C'              	clrf	_led
  1441                           
  1442                           ;logicSystem.c: 30: RA1 = 0;
  1443  0029' 1085               	bcf	5,1	;volatile
  1444  002A' 0008               	return
  1445  002B'                    __end_of_aciona:	
  1446                           
  1447                           	psect	text7
  1448  0000'                    __ptext7:	
  1449 ;; *************** function _controle_servo *****************
  1450 ;; Defined at:
  1451 ;;		line 62 in file "logicSystem.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  numero_do_re    1    wreg     unsigned char 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  numero_do_re    1   16[BANK0 ] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1465 ;;      Params:         0       0       0       0
  1466 ;;      Locals:         0       1       0       0
  1467 ;;      Temps:          0       2       0       0
  1468 ;;      Totals:         0       3       0       0
  1469 ;;Total ram usage:        3 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    4
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;;		_aciona
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function _controle_servo
  1482  0000'                    _controle_servo:	
  1483                           
  1484                           ;incstack = 0
  1485                           ; Regs used in _controle_servo: [wreg+status,2+status,0]
  1486                           ;controle_servo@numero_do_remedio stored from wreg
  1487  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1488  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1489  0002' 0090'              	movwf	controle_servo@numero_do_remedio
  1490                           
  1491                           ;logicSystem.c: 64: if(numero_do_remedio == 0)
  1492  0003' 0810'              	movf	controle_servo@numero_do_remedio,w
  1493  0004' 1D03               	btfss	3,2
  1494  0005' 281C'              	goto	l1584
  1495                           
  1496                           ;logicSystem.c: 65: {
  1497                           ;logicSystem.c: 66: PORTBbits.RB7 = 1;
  1498  0006' 1786               	bsf	6,7	;volatile
  1499                           
  1500                           ;logicSystem.c: 67: _delay((unsigned long)((0.5)*(4000000/4000.0)));
  1501  0007' 30A6               	movlw	166
  1502  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  1503  0009' 1303               	bcf	3,6	;RP1=0, select bank0
  1504  000A' 008E'              	movwf	??_controle_servo
  1505  000B'                    u1687:	
  1506  000B' 0B8E'              	decfsz	??_controle_servo,f
  1507  000C' 280B'              	goto	u1687
  1508                           
  1509                           ;logicSystem.c: 68: PORTBbits.RB7 = 0;
  1510  000D' 1283               	bcf	3,5	;RP0=0, select bank0
  1511  000E' 1303               	bcf	3,6	;RP1=0, select bank0
  1512  000F' 1386               	bcf	6,7	;volatile
  1513                           
  1514                           ;logicSystem.c: 69: _delay((unsigned long)((19.5)*(4000000/4000.0)));
  1515  0010' 301A               	movlw	26
  1516  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  1517  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  1518  0013' 008F'              	movwf	??_controle_servo+1
  1519  0014' 3051               	movlw	81
  1520  0015' 008E'              	movwf	??_controle_servo
  1521  0016'                    u1697:	
  1522  0016' 0B8E'              	decfsz	??_controle_servo,f
  1523  0017' 2816'              	goto	u1697
  1524  0018' 0B8F'              	decfsz	??_controle_servo+1,f
  1525  0019' 2816'              	goto	u1697
  1526  001A' 0000               	nop
  1527                           
  1528                           ;logicSystem.c: 70: }
  1529  001B' 0008               	return
  1530  001C'                    l1584:	
  1531                           
  1532                           ;logicSystem.c: 71: else if(numero_do_remedio == 1)
  1533  001C' 1283               	bcf	3,5	;RP0=0, select bank0
  1534  001D' 1303               	bcf	3,6	;RP1=0, select bank0
  1535  001E' 0310'              	decf	controle_servo@numero_do_remedio,w
  1536  001F' 1D03               	btfss	3,2
  1537  0020' 283A'              	goto	l1592
  1538                           
  1539                           ;logicSystem.c: 72: {
  1540                           ;logicSystem.c: 73: PORTBbits.RB7 = 1;
  1541  0021' 1786               	bsf	6,7	;volatile
  1542                           
  1543                           ;logicSystem.c: 74: _delay((unsigned long)((0.9)*(4000000/4000.0)));
  1544  0022' 30B3               	movlw	179
  1545  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  1546  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  1547  0025' 008E'              	movwf	??_controle_servo
  1548  0026'                    u1707:	
  1549  0026' 2827'              	nop2
  1550  0027' 0B8E'              	decfsz	??_controle_servo,f
  1551  0028' 2826'              	goto	u1707
  1552  0029' 282A'              	nop2
  1553  002A' 0000               	nop
  1554                           
  1555                           ;logicSystem.c: 75: PORTBbits.RB7 = 0;
  1556  002B' 1283               	bcf	3,5	;RP0=0, select bank0
  1557  002C' 1303               	bcf	3,6	;RP1=0, select bank0
  1558  002D' 1386               	bcf	6,7	;volatile
  1559                           
  1560                           ;logicSystem.c: 76: _delay((unsigned long)((19.1)*(4000000/4000.0)));
  1561  002E' 3019               	movlw	25
  1562  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  1563  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  1564  0031' 008F'              	movwf	??_controle_servo+1
  1565  0032' 30CC               	movlw	204
  1566  0033' 008E'              	movwf	??_controle_servo
  1567  0034'                    u1717:	
  1568  0034' 0B8E'              	decfsz	??_controle_servo,f
  1569  0035' 2834'              	goto	u1717
  1570  0036' 0B8F'              	decfsz	??_controle_servo+1,f
  1571  0037' 2834'              	goto	u1717
  1572  0038' 2839'              	nop2
  1573                           
  1574                           ;logicSystem.c: 77: }
  1575  0039' 0008               	return
  1576  003A'                    l1592:	
  1577                           
  1578                           ;logicSystem.c: 78: else if(numero_do_remedio == 2)
  1579  003A' 3002               	movlw	2
  1580  003B' 1283               	bcf	3,5	;RP0=0, select bank0
  1581  003C' 1303               	bcf	3,6	;RP1=0, select bank0
  1582  003D' 0610'              	xorwf	controle_servo@numero_do_remedio,w
  1583  003E' 1D03               	btfss	3,2
  1584  003F' 285A'              	goto	l1600
  1585                           
  1586                           ;logicSystem.c: 79: {
  1587                           ;logicSystem.c: 80: PORTBbits.RB7 = 1;
  1588  0040' 1786               	bsf	6,7	;volatile
  1589                           
  1590                           ;logicSystem.c: 81: _delay((unsigned long)((1.4)*(4000000/4000.0)));
  1591  0041' 30C7               	movlw	199
  1592  0042' 1283               	bcf	3,5	;RP0=0, select bank0
  1593  0043' 1303               	bcf	3,6	;RP1=0, select bank0
  1594  0044' 008E'              	movwf	??_controle_servo
  1595  0045'                    u1727:	
  1596  0045' 2846'              	nop2
  1597  0046' 2847'              	nop2
  1598  0047' 0B8E'              	decfsz	??_controle_servo,f
  1599  0048' 2845'              	goto	u1727
  1600  0049' 284A'              	nop2
  1601  004A' 284B'              	nop2
  1602  004B' 0000               	nop
  1603                           
  1604                           ;logicSystem.c: 82: PORTBbits.RB7 = 0;
  1605  004C' 1283               	bcf	3,5	;RP0=0, select bank0
  1606  004D' 1303               	bcf	3,6	;RP1=0, select bank0
  1607  004E' 1386               	bcf	6,7	;volatile
  1608                           
  1609                           ;logicSystem.c: 83: _delay((unsigned long)((18.6)*(4000000/4000.0)));
  1610  004F' 3019               	movlw	25
  1611  0050' 1283               	bcf	3,5	;RP0=0, select bank0
  1612  0051' 1303               	bcf	3,6	;RP1=0, select bank0
  1613  0052' 008F'              	movwf	??_controle_servo+1
  1614  0053' 3026               	movlw	38
  1615  0054' 008E'              	movwf	??_controle_servo
  1616  0055'                    u1737:	
  1617  0055' 0B8E'              	decfsz	??_controle_servo,f
  1618  0056' 2855'              	goto	u1737
  1619  0057' 0B8F'              	decfsz	??_controle_servo+1,f
  1620  0058' 2855'              	goto	u1737
  1621                           
  1622                           ;logicSystem.c: 84: }
  1623  0059' 0008               	return
  1624  005A'                    l1600:	
  1625                           
  1626                           ;logicSystem.c: 85: else if(numero_do_remedio == 3)
  1627  005A' 3003               	movlw	3
  1628  005B' 1283               	bcf	3,5	;RP0=0, select bank0
  1629  005C' 1303               	bcf	3,6	;RP1=0, select bank0
  1630  005D' 0610'              	xorwf	controle_servo@numero_do_remedio,w
  1631  005E' 1D03               	btfss	3,2
  1632  005F' 287B'              	goto	l1608
  1633                           
  1634                           ;logicSystem.c: 86: {
  1635                           ;logicSystem.c: 87: PORTBbits.RB7 = 1;
  1636  0060' 1786               	bsf	6,7	;volatile
  1637                           
  1638                           ;logicSystem.c: 88: _delay((unsigned long)((2)*(4000000/4000.0)));
  1639  0061' 3003               	movlw	3
  1640  0062' 1283               	bcf	3,5	;RP0=0, select bank0
  1641  0063' 1303               	bcf	3,6	;RP1=0, select bank0
  1642  0064' 008F'              	movwf	??_controle_servo+1
  1643  0065' 3097               	movlw	151
  1644  0066' 008E'              	movwf	??_controle_servo
  1645  0067'                    u1747:	
  1646  0067' 0B8E'              	decfsz	??_controle_servo,f
  1647  0068' 2867'              	goto	u1747
  1648  0069' 0B8F'              	decfsz	??_controle_servo+1,f
  1649  006A' 2867'              	goto	u1747
  1650  006B' 0000               	nop
  1651                           
  1652                           ;logicSystem.c: 89: PORTBbits.RB7 = 0;
  1653  006C' 1283               	bcf	3,5	;RP0=0, select bank0
  1654  006D' 1303               	bcf	3,6	;RP1=0, select bank0
  1655  006E' 1386               	bcf	6,7	;volatile
  1656                           
  1657                           ;logicSystem.c: 90: _delay((unsigned long)((18)*(4000000/4000.0)));
  1658  006F' 3018               	movlw	24
  1659  0070' 1283               	bcf	3,5	;RP0=0, select bank0
  1660  0071' 1303               	bcf	3,6	;RP1=0, select bank0
  1661  0072' 008F'              	movwf	??_controle_servo+1
  1662  0073' 305E               	movlw	94
  1663  0074' 008E'              	movwf	??_controle_servo
  1664  0075'                    u1757:	
  1665  0075' 0B8E'              	decfsz	??_controle_servo,f
  1666  0076' 2875'              	goto	u1757
  1667  0077' 0B8F'              	decfsz	??_controle_servo+1,f
  1668  0078' 2875'              	goto	u1757
  1669  0079' 287A'              	nop2
  1670                           
  1671                           ;logicSystem.c: 91: }
  1672  007A' 0008               	return
  1673  007B'                    l1608:	
  1674                           
  1675                           ;logicSystem.c: 92: else if(numero_do_remedio == 4)
  1676  007B' 3004               	movlw	4
  1677  007C' 1283               	bcf	3,5	;RP0=0, select bank0
  1678  007D' 1303               	bcf	3,6	;RP1=0, select bank0
  1679  007E' 0610'              	xorwf	controle_servo@numero_do_remedio,w
  1680  007F' 1D03               	btfss	3,2
  1681  0080' 0008               	return
  1682                           
  1683                           ;logicSystem.c: 93: {
  1684                           ;logicSystem.c: 94: PORTBbits.RB7 = 1;
  1685  0081' 1786               	bsf	6,7	;volatile
  1686                           
  1687                           ;logicSystem.c: 95: _delay((unsigned long)((2.4)*(4000000/4000.0)));
  1688  0082' 3004               	movlw	4
  1689  0083' 1283               	bcf	3,5	;RP0=0, select bank0
  1690  0084' 1303               	bcf	3,6	;RP1=0, select bank0
  1691  0085' 008F'              	movwf	??_controle_servo+1
  1692  0086' 301C               	movlw	28
  1693  0087' 008E'              	movwf	??_controle_servo
  1694  0088'                    u1767:	
  1695  0088' 0B8E'              	decfsz	??_controle_servo,f
  1696  0089' 2888'              	goto	u1767
  1697  008A' 0B8F'              	decfsz	??_controle_servo+1,f
  1698  008B' 2888'              	goto	u1767
  1699                           
  1700                           ;logicSystem.c: 96: PORTBbits.RB7 = 0;
  1701  008C' 1283               	bcf	3,5	;RP0=0, select bank0
  1702  008D' 1303               	bcf	3,6	;RP1=0, select bank0
  1703  008E' 1386               	bcf	6,7	;volatile
  1704                           
  1705                           ;logicSystem.c: 97: _delay((unsigned long)((17.6)*(4000000/4000.0)));
  1706  008F' 3017               	movlw	23
  1707  0090' 1283               	bcf	3,5	;RP0=0, select bank0
  1708  0091' 1303               	bcf	3,6	;RP1=0, select bank0
  1709  0092' 008F'              	movwf	??_controle_servo+1
  1710  0093' 30DA               	movlw	218
  1711  0094' 008E'              	movwf	??_controle_servo
  1712  0095'                    u1777:	
  1713  0095' 0B8E'              	decfsz	??_controle_servo,f
  1714  0096' 2895'              	goto	u1777
  1715  0097' 0B8F'              	decfsz	??_controle_servo+1,f
  1716  0098' 2895'              	goto	u1777
  1717  0099' 0008               	return
  1718  009A'                    __end_of_controle_servo:	
  1719                           
  1720                           	psect	text8
  1721  0000'                    __ptext8:	
  1722 ;; *************** function _atualiza_remedio *****************
  1723 ;; Defined at:
  1724 ;;		line 129 in file "logicSystem.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  count           1    wreg     unsigned char 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  count           1   36[BANK0 ] unsigned char 
  1729 ;;  dados           1   35[BANK0 ] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1739 ;;      Params:         0       0       0       0
  1740 ;;      Locals:         0       3       0       0
  1741 ;;      Temps:          0       0       9       0
  1742 ;;      Totals:         0       3       9       0
  1743 ;;Total ram usage:       12 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    5
  1746 ;; This function calls:
  1747 ;;		___awdiv
  1748 ;;		___awmod
  1749 ;;		___bmul
  1750 ;;		_grava_eeprom
  1751 ;; This function is called by:
  1752 ;;		_aciona
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _atualiza_remedio
  1758  0000'                    _atualiza_remedio:	
  1759                           
  1760                           ;incstack = 0
  1761                           ; Regs used in _atualiza_remedio: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1762                           ;atualiza_remedio@count stored from wreg
  1763  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1764  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1765  0002' 00A4'              	movwf	atualiza_remedio@count
  1766                           
  1767                           ;logicSystem.c: 131: char dados;
  1768                           ;logicSystem.c: 132: remedio[count].d_hora = (Hora/10 + (remedio[count].passo)/10);
  1769  0003' 300A               	movlw	10
  1770  0004' 0094'              	movwf	___awdiv@divisor
  1771  0005' 3000               	movlw	0
  1772  0006' 0095'              	movwf	___awdiv@divisor+1
  1773  0007' 0800'              	movf	_Hora,w
  1774  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  1775  0009' 1303               	bcf	3,6	;RP1=0, select bank1
  1776  000A' 0080'              	movwf	??_atualiza_remedio^(0+128)
  1777  000B' 0181'              	clrf	(??_atualiza_remedio^(0+128)+1)
  1778  000C' 0800'              	movf	??_atualiza_remedio^(0+128),w
  1779  000D' 1283               	bcf	3,5	;RP0=0, select bank0
  1780  000E' 1303               	bcf	3,6	;RP1=0, select bank0
  1781  000F' 0096'              	movwf	___awdiv@dividend
  1782  0010' 1683               	bsf	3,5	;RP0=1, select bank1
  1783  0011' 1303               	bcf	3,6	;RP1=0, select bank1
  1784  0012' 0800'              	movf	(??_atualiza_remedio+1)^(0+128),w
  1785  0013' 1283               	bcf	3,5	;RP0=0, select bank0
  1786  0014' 1303               	bcf	3,6	;RP1=0, select bank0
  1787  0015' 0097'              	movwf	___awdiv@dividend+1
  1788  0016' 2000'              	fcall	___awdiv
  1789  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  1790  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  1791  0019' 0814'              	movf	?___awdiv,w
  1792  001A' 1683               	bsf	3,5	;RP0=1, select bank1
  1793  001B' 1303               	bcf	3,6	;RP1=0, select bank1
  1794  001C' 0080'              	movwf	(??_atualiza_remedio+2)^(0+128)
  1795  001D' 1283               	bcf	3,5	;RP0=0, select bank0
  1796  001E' 1303               	bcf	3,6	;RP1=0, select bank0
  1797  001F' 0815'              	movf	?___awdiv+1,w
  1798  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  1799  0021' 1303               	bcf	3,6	;RP1=0, select bank1
  1800  0022' 0081'              	movwf	((??_atualiza_remedio+2)^(0+128)+1)
  1801  0023' 300A               	movlw	10
  1802  0024' 1283               	bcf	3,5	;RP0=0, select bank0
  1803  0025' 1303               	bcf	3,6	;RP1=0, select bank0
  1804  0026' 0094'              	movwf	___awdiv@divisor
  1805  0027' 3000               	movlw	0
  1806  0028' 0095'              	movwf	___awdiv@divisor+1
  1807  0029' 3005               	movlw	5
  1808  002A' 1683               	bsf	3,5	;RP0=1, select bank1
  1809  002B' 1303               	bcf	3,6	;RP1=0, select bank1
  1810  002C' 0080'              	movwf	(??_atualiza_remedio+4)^(0+128)
  1811  002D' 0800'              	movf	(??_atualiza_remedio+4)^(0+128),w
  1812  002E' 1283               	bcf	3,5	;RP0=0, select bank0
  1813  002F' 1303               	bcf	3,6	;RP1=0, select bank0
  1814  0030' 0090'              	movwf	___bmul@multiplicand
  1815  0031' 0824'              	movf	atualiza_remedio@count,w
  1816  0032' 2000'              	fcall	___bmul
  1817  0033' 3E04               	addlw	4
  1818  0034' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  1819  0035' 0084               	movwf	4
  1820  0036' 1383               	bcf	3,7	;select IRP bank1
  1821  0037' 0800               	movf	0,w
  1822  0038' 1683               	bsf	3,5	;RP0=1, select bank1
  1823  0039' 1303               	bcf	3,6	;RP1=0, select bank1
  1824  003A' 0080'              	movwf	(??_atualiza_remedio+5)^(0+128)
  1825  003B' 0181'              	clrf	((??_atualiza_remedio+5)^(0+128)+1)
  1826  003C' 0800'              	movf	(??_atualiza_remedio+5)^(0+128),w
  1827  003D' 1283               	bcf	3,5	;RP0=0, select bank0
  1828  003E' 1303               	bcf	3,6	;RP1=0, select bank0
  1829  003F' 0096'              	movwf	___awdiv@dividend
  1830  0040' 1683               	bsf	3,5	;RP0=1, select bank1
  1831  0041' 1303               	bcf	3,6	;RP1=0, select bank1
  1832  0042' 0800'              	movf	(??_atualiza_remedio+6)^(0+128),w
  1833  0043' 1283               	bcf	3,5	;RP0=0, select bank0
  1834  0044' 1303               	bcf	3,6	;RP1=0, select bank0
  1835  0045' 0097'              	movwf	___awdiv@dividend+1
  1836  0046' 2000'              	fcall	___awdiv
  1837  0047' 1283               	bcf	3,5	;RP0=0, select bank0
  1838  0048' 1303               	bcf	3,6	;RP1=0, select bank0
  1839  0049' 0814'              	movf	?___awdiv,w
  1840  004A' 1683               	bsf	3,5	;RP0=1, select bank1
  1841  004B' 1303               	bcf	3,6	;RP1=0, select bank1
  1842  004C' 0700'              	addwf	(??_atualiza_remedio+2)^(0+128),w
  1843  004D' 0080'              	movwf	(??_atualiza_remedio+7)^(0+128)
  1844  004E' 3005               	movlw	5
  1845  004F' 0080'              	movwf	(??_atualiza_remedio+8)^(0+128)
  1846  0050' 0800'              	movf	(??_atualiza_remedio+8)^(0+128),w
  1847  0051' 1283               	bcf	3,5	;RP0=0, select bank0
  1848  0052' 1303               	bcf	3,6	;RP1=0, select bank0
  1849  0053' 0090'              	movwf	___bmul@multiplicand
  1850  0054' 0824'              	movf	atualiza_remedio@count,w
  1851  0055' 2000'              	fcall	___bmul
  1852  0056' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  1853  0057' 0084               	movwf	4
  1854  0058' 1683               	bsf	3,5	;RP0=1, select bank1
  1855  0059' 1303               	bcf	3,6	;RP1=0, select bank1
  1856  005A' 0800'              	movf	(??_atualiza_remedio+7)^(0+128),w
  1857  005B' 1383               	bcf	3,7	;select IRP bank1
  1858  005C' 0080               	movwf	0
  1859                           
  1860                           ;logicSystem.c: 133: remedio[count].u_hora = (Hora%10 + (remedio[count].passo)%10);
  1861  005D' 300A               	movlw	10
  1862  005E' 1283               	bcf	3,5	;RP0=0, select bank0
  1863  005F' 1303               	bcf	3,6	;RP1=0, select bank0
  1864  0060' 0094'              	movwf	___awmod@divisor
  1865  0061' 3000               	movlw	0
  1866  0062' 0095'              	movwf	___awmod@divisor+1
  1867  0063' 0800'              	movf	_Hora,w
  1868  0064' 1683               	bsf	3,5	;RP0=1, select bank1
  1869  0065' 1303               	bcf	3,6	;RP1=0, select bank1
  1870  0066' 0080'              	movwf	??_atualiza_remedio^(0+128)
  1871  0067' 0181'              	clrf	(??_atualiza_remedio^(0+128)+1)
  1872  0068' 0800'              	movf	??_atualiza_remedio^(0+128),w
  1873  0069' 1283               	bcf	3,5	;RP0=0, select bank0
  1874  006A' 1303               	bcf	3,6	;RP1=0, select bank0
  1875  006B' 0096'              	movwf	___awmod@dividend
  1876  006C' 1683               	bsf	3,5	;RP0=1, select bank1
  1877  006D' 1303               	bcf	3,6	;RP1=0, select bank1
  1878  006E' 0800'              	movf	(??_atualiza_remedio+1)^(0+128),w
  1879  006F' 1283               	bcf	3,5	;RP0=0, select bank0
  1880  0070' 1303               	bcf	3,6	;RP1=0, select bank0
  1881  0071' 0097'              	movwf	___awmod@dividend+1
  1882  0072' 2000'              	fcall	___awmod
  1883  0073' 1283               	bcf	3,5	;RP0=0, select bank0
  1884  0074' 1303               	bcf	3,6	;RP1=0, select bank0
  1885  0075' 0814'              	movf	?___awmod,w
  1886  0076' 1683               	bsf	3,5	;RP0=1, select bank1
  1887  0077' 1303               	bcf	3,6	;RP1=0, select bank1
  1888  0078' 0080'              	movwf	(??_atualiza_remedio+2)^(0+128)
  1889  0079' 1283               	bcf	3,5	;RP0=0, select bank0
  1890  007A' 1303               	bcf	3,6	;RP1=0, select bank0
  1891  007B' 0815'              	movf	?___awmod+1,w
  1892  007C' 1683               	bsf	3,5	;RP0=1, select bank1
  1893  007D' 1303               	bcf	3,6	;RP1=0, select bank1
  1894  007E' 0081'              	movwf	((??_atualiza_remedio+2)^(0+128)+1)
  1895  007F' 300A               	movlw	10
  1896  0080' 1283               	bcf	3,5	;RP0=0, select bank0
  1897  0081' 1303               	bcf	3,6	;RP1=0, select bank0
  1898  0082' 0094'              	movwf	___awmod@divisor
  1899  0083' 3000               	movlw	0
  1900  0084' 0095'              	movwf	___awmod@divisor+1
  1901  0085' 3005               	movlw	5
  1902  0086' 1683               	bsf	3,5	;RP0=1, select bank1
  1903  0087' 1303               	bcf	3,6	;RP1=0, select bank1
  1904  0088' 0080'              	movwf	(??_atualiza_remedio+4)^(0+128)
  1905  0089' 0800'              	movf	(??_atualiza_remedio+4)^(0+128),w
  1906  008A' 1283               	bcf	3,5	;RP0=0, select bank0
  1907  008B' 1303               	bcf	3,6	;RP1=0, select bank0
  1908  008C' 0090'              	movwf	___bmul@multiplicand
  1909  008D' 0824'              	movf	atualiza_remedio@count,w
  1910  008E' 2000'              	fcall	___bmul
  1911  008F' 3E04               	addlw	4
  1912  0090' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  1913  0091' 0084               	movwf	4
  1914  0092' 1383               	bcf	3,7	;select IRP bank1
  1915  0093' 0800               	movf	0,w
  1916  0094' 1683               	bsf	3,5	;RP0=1, select bank1
  1917  0095' 1303               	bcf	3,6	;RP1=0, select bank1
  1918  0096' 0080'              	movwf	(??_atualiza_remedio+5)^(0+128)
  1919  0097' 0181'              	clrf	((??_atualiza_remedio+5)^(0+128)+1)
  1920  0098' 0800'              	movf	(??_atualiza_remedio+5)^(0+128),w
  1921  0099' 1283               	bcf	3,5	;RP0=0, select bank0
  1922  009A' 1303               	bcf	3,6	;RP1=0, select bank0
  1923  009B' 0096'              	movwf	___awmod@dividend
  1924  009C' 1683               	bsf	3,5	;RP0=1, select bank1
  1925  009D' 1303               	bcf	3,6	;RP1=0, select bank1
  1926  009E' 0800'              	movf	(??_atualiza_remedio+6)^(0+128),w
  1927  009F' 1283               	bcf	3,5	;RP0=0, select bank0
  1928  00A0' 1303               	bcf	3,6	;RP1=0, select bank0
  1929  00A1' 0097'              	movwf	___awmod@dividend+1
  1930  00A2' 2000'              	fcall	___awmod
  1931  00A3' 1283               	bcf	3,5	;RP0=0, select bank0
  1932  00A4' 1303               	bcf	3,6	;RP1=0, select bank0
  1933  00A5' 0814'              	movf	?___awmod,w
  1934  00A6' 1683               	bsf	3,5	;RP0=1, select bank1
  1935  00A7' 1303               	bcf	3,6	;RP1=0, select bank1
  1936  00A8' 0700'              	addwf	(??_atualiza_remedio+2)^(0+128),w
  1937  00A9' 0080'              	movwf	(??_atualiza_remedio+7)^(0+128)
  1938  00AA' 3005               	movlw	5
  1939  00AB' 0080'              	movwf	(??_atualiza_remedio+8)^(0+128)
  1940  00AC' 0800'              	movf	(??_atualiza_remedio+8)^(0+128),w
  1941  00AD' 1283               	bcf	3,5	;RP0=0, select bank0
  1942  00AE' 1303               	bcf	3,6	;RP1=0, select bank0
  1943  00AF' 0090'              	movwf	___bmul@multiplicand
  1944  00B0' 0824'              	movf	atualiza_remedio@count,w
  1945  00B1' 2000'              	fcall	___bmul
  1946  00B2' 3E01               	addlw	1
  1947  00B3' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  1948  00B4' 0084               	movwf	4
  1949  00B5' 1683               	bsf	3,5	;RP0=1, select bank1
  1950  00B6' 1303               	bcf	3,6	;RP1=0, select bank1
  1951  00B7' 0800'              	movf	(??_atualiza_remedio+7)^(0+128),w
  1952  00B8' 1383               	bcf	3,7	;select IRP bank1
  1953  00B9' 0080               	movwf	0
  1954                           
  1955                           ;logicSystem.c: 134: dados = (remedio[count].d_hora * 10 + remedio[count].u_hora);
  1956  00BA' 3005               	movlw	5
  1957  00BB' 0080'              	movwf	??_atualiza_remedio^(0+128)
  1958  00BC' 0800'              	movf	??_atualiza_remedio^(0+128),w
  1959  00BD' 1283               	bcf	3,5	;RP0=0, select bank0
  1960  00BE' 1303               	bcf	3,6	;RP1=0, select bank0
  1961  00BF' 0090'              	movwf	___bmul@multiplicand
  1962  00C0' 0824'              	movf	atualiza_remedio@count,w
  1963  00C1' 2000'              	fcall	___bmul
  1964  00C2' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  1965  00C3' 0084               	movwf	4
  1966  00C4' 1383               	bcf	3,7	;select IRP bank1
  1967  00C5' 0800               	movf	0,w
  1968  00C6' 1683               	bsf	3,5	;RP0=1, select bank1
  1969  00C7' 1303               	bcf	3,6	;RP1=0, select bank1
  1970  00C8' 0080'              	movwf	(??_atualiza_remedio+1)^(0+128)
  1971  00C9' 0800'              	movf	(??_atualiza_remedio+1)^(0+128),w
  1972  00CA' 1283               	bcf	3,5	;RP0=0, select bank0
  1973  00CB' 1303               	bcf	3,6	;RP1=0, select bank0
  1974  00CC' 00A2'              	movwf	_atualiza_remedio$761
  1975                           
  1976                           ;logicSystem.c: 134: dados = (remedio[count].d_hora * 10 + remedio[count].u_hora);
  1977  00CD' 3005               	movlw	5
  1978  00CE' 1683               	bsf	3,5	;RP0=1, select bank1
  1979  00CF' 1303               	bcf	3,6	;RP1=0, select bank1
  1980  00D0' 0080'              	movwf	??_atualiza_remedio^(0+128)
  1981  00D1' 0800'              	movf	??_atualiza_remedio^(0+128),w
  1982  00D2' 1283               	bcf	3,5	;RP0=0, select bank0
  1983  00D3' 1303               	bcf	3,6	;RP1=0, select bank0
  1984  00D4' 0090'              	movwf	___bmul@multiplicand
  1985  00D5' 0824'              	movf	atualiza_remedio@count,w
  1986  00D6' 2000'              	fcall	___bmul
  1987  00D7' 3E01               	addlw	1
  1988  00D8' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  1989  00D9' 0084               	movwf	4
  1990  00DA' 300A               	movlw	10
  1991  00DB' 1683               	bsf	3,5	;RP0=1, select bank1
  1992  00DC' 1303               	bcf	3,6	;RP1=0, select bank1
  1993  00DD' 0080'              	movwf	(??_atualiza_remedio+1)^(0+128)
  1994  00DE' 0800'              	movf	(??_atualiza_remedio+1)^(0+128),w
  1995  00DF' 1283               	bcf	3,5	;RP0=0, select bank0
  1996  00E0' 1303               	bcf	3,6	;RP1=0, select bank0
  1997  00E1' 0090'              	movwf	___bmul@multiplicand
  1998  00E2' 0822'              	movf	_atualiza_remedio$761,w
  1999  00E3' 2000'              	fcall	___bmul
  2000  00E4' 1383               	bcf	3,7	;select IRP bank1
  2001  00E5' 0700               	addwf	0,w
  2002  00E6' 1683               	bsf	3,5	;RP0=1, select bank1
  2003  00E7' 1303               	bcf	3,6	;RP1=0, select bank1
  2004  00E8' 0080'              	movwf	(??_atualiza_remedio+2)^(0+128)
  2005  00E9' 0800'              	movf	(??_atualiza_remedio+2)^(0+128),w
  2006  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
  2007  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
  2008  00EC' 00A3'              	movwf	atualiza_remedio@dados
  2009                           
  2010                           ;logicSystem.c: 135: if( dados > 23)
  2011  00ED' 3018               	movlw	24
  2012  00EE' 0223'              	subwf	atualiza_remedio@dados,w
  2013  00EF' 1C03               	skipc
  2014  00F0' 28FA'              	goto	l1996
  2015                           
  2016                           ;logicSystem.c: 136: {
  2017                           ;logicSystem.c: 137: dados = dados - 24;
  2018  00F1' 0823'              	movf	atualiza_remedio@dados,w
  2019  00F2' 3EE8               	addlw	232
  2020  00F3' 1683               	bsf	3,5	;RP0=1, select bank1
  2021  00F4' 1303               	bcf	3,6	;RP1=0, select bank1
  2022  00F5' 0080'              	movwf	??_atualiza_remedio^(0+128)
  2023  00F6' 0800'              	movf	??_atualiza_remedio^(0+128),w
  2024  00F7' 1283               	bcf	3,5	;RP0=0, select bank0
  2025  00F8' 1303               	bcf	3,6	;RP1=0, select bank0
  2026  00F9' 00A3'              	movwf	atualiza_remedio@dados
  2027  00FA'                    l1996:	
  2028                           
  2029                           ;logicSystem.c: 138: }
  2030                           ;logicSystem.c: 139: grava_eeprom(add_d_hora + count, dados/10);
  2031  00FA' 0809'              	movf	_add_d_hora,w
  2032  00FB' 0724'              	addwf	atualiza_remedio@count,w
  2033  00FC' 009D'              	movwf	grava_eeprom@address
  2034  00FD' 019E'              	clrf	grava_eeprom@address+1
  2035  00FE' 0D9E'              	rlf	grava_eeprom@address+1,f
  2036  00FF' 300A               	movlw	10
  2037  0100' 0094'              	movwf	___awdiv@divisor
  2038  0101' 3000               	movlw	0
  2039  0102' 0095'              	movwf	___awdiv@divisor+1
  2040  0103' 0823'              	movf	atualiza_remedio@dados,w
  2041  0104' 1683               	bsf	3,5	;RP0=1, select bank1
  2042  0105' 1303               	bcf	3,6	;RP1=0, select bank1
  2043  0106' 0080'              	movwf	??_atualiza_remedio^(0+128)
  2044  0107' 0181'              	clrf	(??_atualiza_remedio^(0+128)+1)
  2045  0108' 0800'              	movf	??_atualiza_remedio^(0+128),w
  2046  0109' 1283               	bcf	3,5	;RP0=0, select bank0
  2047  010A' 1303               	bcf	3,6	;RP1=0, select bank0
  2048  010B' 0096'              	movwf	___awdiv@dividend
  2049  010C' 1683               	bsf	3,5	;RP0=1, select bank1
  2050  010D' 1303               	bcf	3,6	;RP1=0, select bank1
  2051  010E' 0800'              	movf	(??_atualiza_remedio+1)^(0+128),w
  2052  010F' 1283               	bcf	3,5	;RP0=0, select bank0
  2053  0110' 1303               	bcf	3,6	;RP1=0, select bank0
  2054  0111' 0097'              	movwf	___awdiv@dividend+1
  2055  0112' 2000'              	fcall	___awdiv
  2056  0113' 1283               	bcf	3,5	;RP0=0, select bank0
  2057  0114' 1303               	bcf	3,6	;RP1=0, select bank0
  2058  0115' 0814'              	movf	?___awdiv,w
  2059  0116' 1683               	bsf	3,5	;RP0=1, select bank1
  2060  0117' 1303               	bcf	3,6	;RP1=0, select bank1
  2061  0118' 0080'              	movwf	(??_atualiza_remedio+2)^(0+128)
  2062  0119' 0800'              	movf	(??_atualiza_remedio+2)^(0+128),w
  2063  011A' 1283               	bcf	3,5	;RP0=0, select bank0
  2064  011B' 1303               	bcf	3,6	;RP1=0, select bank0
  2065  011C' 009F'              	movwf	grava_eeprom@data
  2066  011D' 2000'              	fcall	_grava_eeprom
  2067                           
  2068                           ;logicSystem.c: 140: grava_eeprom(add_u_hora + count, dados%10);
  2069  011E' 1283               	bcf	3,5	;RP0=0, select bank0
  2070  011F' 1303               	bcf	3,6	;RP1=0, select bank0
  2071  0120' 0803'              	movf	_add_u_hora,w
  2072  0121' 0724'              	addwf	atualiza_remedio@count,w
  2073  0122' 009D'              	movwf	grava_eeprom@address
  2074  0123' 019E'              	clrf	grava_eeprom@address+1
  2075  0124' 0D9E'              	rlf	grava_eeprom@address+1,f
  2076  0125' 300A               	movlw	10
  2077  0126' 0094'              	movwf	___awmod@divisor
  2078  0127' 3000               	movlw	0
  2079  0128' 0095'              	movwf	___awmod@divisor+1
  2080  0129' 0823'              	movf	atualiza_remedio@dados,w
  2081  012A' 1683               	bsf	3,5	;RP0=1, select bank1
  2082  012B' 1303               	bcf	3,6	;RP1=0, select bank1
  2083  012C' 0080'              	movwf	??_atualiza_remedio^(0+128)
  2084  012D' 0181'              	clrf	(??_atualiza_remedio^(0+128)+1)
  2085  012E' 0800'              	movf	??_atualiza_remedio^(0+128),w
  2086  012F' 1283               	bcf	3,5	;RP0=0, select bank0
  2087  0130' 1303               	bcf	3,6	;RP1=0, select bank0
  2088  0131' 0096'              	movwf	___awmod@dividend
  2089  0132' 1683               	bsf	3,5	;RP0=1, select bank1
  2090  0133' 1303               	bcf	3,6	;RP1=0, select bank1
  2091  0134' 0800'              	movf	(??_atualiza_remedio+1)^(0+128),w
  2092  0135' 1283               	bcf	3,5	;RP0=0, select bank0
  2093  0136' 1303               	bcf	3,6	;RP1=0, select bank0
  2094  0137' 0097'              	movwf	___awmod@dividend+1
  2095  0138' 2000'              	fcall	___awmod
  2096  0139' 1283               	bcf	3,5	;RP0=0, select bank0
  2097  013A' 1303               	bcf	3,6	;RP1=0, select bank0
  2098  013B' 0814'              	movf	?___awmod,w
  2099  013C' 1683               	bsf	3,5	;RP0=1, select bank1
  2100  013D' 1303               	bcf	3,6	;RP1=0, select bank1
  2101  013E' 0080'              	movwf	(??_atualiza_remedio+2)^(0+128)
  2102  013F' 0800'              	movf	(??_atualiza_remedio+2)^(0+128),w
  2103  0140' 1283               	bcf	3,5	;RP0=0, select bank0
  2104  0141' 1303               	bcf	3,6	;RP1=0, select bank0
  2105  0142' 009F'              	movwf	grava_eeprom@data
  2106  0143' 2000'              	fcall	_grava_eeprom
  2107                           
  2108                           ;logicSystem.c: 141: remedio[count].d_hora = dados/10;
  2109  0144' 300A               	movlw	10
  2110  0145' 1283               	bcf	3,5	;RP0=0, select bank0
  2111  0146' 1303               	bcf	3,6	;RP1=0, select bank0
  2112  0147' 0094'              	movwf	___awdiv@divisor
  2113  0148' 3000               	movlw	0
  2114  0149' 0095'              	movwf	___awdiv@divisor+1
  2115  014A' 0823'              	movf	atualiza_remedio@dados,w
  2116  014B' 1683               	bsf	3,5	;RP0=1, select bank1
  2117  014C' 1303               	bcf	3,6	;RP1=0, select bank1
  2118  014D' 0080'              	movwf	??_atualiza_remedio^(0+128)
  2119  014E' 0181'              	clrf	(??_atualiza_remedio^(0+128)+1)
  2120  014F' 0800'              	movf	??_atualiza_remedio^(0+128),w
  2121  0150' 1283               	bcf	3,5	;RP0=0, select bank0
  2122  0151' 1303               	bcf	3,6	;RP1=0, select bank0
  2123  0152' 0096'              	movwf	___awdiv@dividend
  2124  0153' 1683               	bsf	3,5	;RP0=1, select bank1
  2125  0154' 1303               	bcf	3,6	;RP1=0, select bank1
  2126  0155' 0800'              	movf	(??_atualiza_remedio+1)^(0+128),w
  2127  0156' 1283               	bcf	3,5	;RP0=0, select bank0
  2128  0157' 1303               	bcf	3,6	;RP1=0, select bank0
  2129  0158' 0097'              	movwf	___awdiv@dividend+1
  2130  0159' 2000'              	fcall	___awdiv
  2131  015A' 1283               	bcf	3,5	;RP0=0, select bank0
  2132  015B' 1303               	bcf	3,6	;RP1=0, select bank0
  2133  015C' 0814'              	movf	?___awdiv,w
  2134  015D' 1683               	bsf	3,5	;RP0=1, select bank1
  2135  015E' 1303               	bcf	3,6	;RP1=0, select bank1
  2136  015F' 0080'              	movwf	(??_atualiza_remedio+2)^(0+128)
  2137  0160' 3005               	movlw	5
  2138  0161' 0080'              	movwf	(??_atualiza_remedio+3)^(0+128)
  2139  0162' 0800'              	movf	(??_atualiza_remedio+3)^(0+128),w
  2140  0163' 1283               	bcf	3,5	;RP0=0, select bank0
  2141  0164' 1303               	bcf	3,6	;RP1=0, select bank0
  2142  0165' 0090'              	movwf	___bmul@multiplicand
  2143  0166' 0824'              	movf	atualiza_remedio@count,w
  2144  0167' 2000'              	fcall	___bmul
  2145  0168' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  2146  0169' 0084               	movwf	4
  2147  016A' 1683               	bsf	3,5	;RP0=1, select bank1
  2148  016B' 1303               	bcf	3,6	;RP1=0, select bank1
  2149  016C' 0800'              	movf	(??_atualiza_remedio+2)^(0+128),w
  2150  016D' 1383               	bcf	3,7	;select IRP bank1
  2151  016E' 0080               	movwf	0
  2152                           
  2153                           ;logicSystem.c: 142: remedio[count].u_hora = dados%10;
  2154  016F' 300A               	movlw	10
  2155  0170' 1283               	bcf	3,5	;RP0=0, select bank0
  2156  0171' 1303               	bcf	3,6	;RP1=0, select bank0
  2157  0172' 0094'              	movwf	___awmod@divisor
  2158  0173' 3000               	movlw	0
  2159  0174' 0095'              	movwf	___awmod@divisor+1
  2160  0175' 0823'              	movf	atualiza_remedio@dados,w
  2161  0176' 1683               	bsf	3,5	;RP0=1, select bank1
  2162  0177' 1303               	bcf	3,6	;RP1=0, select bank1
  2163  0178' 0080'              	movwf	??_atualiza_remedio^(0+128)
  2164  0179' 0181'              	clrf	(??_atualiza_remedio^(0+128)+1)
  2165  017A' 0800'              	movf	??_atualiza_remedio^(0+128),w
  2166  017B' 1283               	bcf	3,5	;RP0=0, select bank0
  2167  017C' 1303               	bcf	3,6	;RP1=0, select bank0
  2168  017D' 0096'              	movwf	___awmod@dividend
  2169  017E' 1683               	bsf	3,5	;RP0=1, select bank1
  2170  017F' 1303               	bcf	3,6	;RP1=0, select bank1
  2171  0180' 0800'              	movf	(??_atualiza_remedio+1)^(0+128),w
  2172  0181' 1283               	bcf	3,5	;RP0=0, select bank0
  2173  0182' 1303               	bcf	3,6	;RP1=0, select bank0
  2174  0183' 0097'              	movwf	___awmod@dividend+1
  2175  0184' 2000'              	fcall	___awmod
  2176  0185' 1283               	bcf	3,5	;RP0=0, select bank0
  2177  0186' 1303               	bcf	3,6	;RP1=0, select bank0
  2178  0187' 0814'              	movf	?___awmod,w
  2179  0188' 1683               	bsf	3,5	;RP0=1, select bank1
  2180  0189' 1303               	bcf	3,6	;RP1=0, select bank1
  2181  018A' 0080'              	movwf	(??_atualiza_remedio+2)^(0+128)
  2182  018B' 3005               	movlw	5
  2183  018C' 0080'              	movwf	(??_atualiza_remedio+3)^(0+128)
  2184  018D' 0800'              	movf	(??_atualiza_remedio+3)^(0+128),w
  2185  018E' 1283               	bcf	3,5	;RP0=0, select bank0
  2186  018F' 1303               	bcf	3,6	;RP1=0, select bank0
  2187  0190' 0090'              	movwf	___bmul@multiplicand
  2188  0191' 0824'              	movf	atualiza_remedio@count,w
  2189  0192' 2000'              	fcall	___bmul
  2190  0193' 3E01               	addlw	1
  2191  0194' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  2192  0195' 0084               	movwf	4
  2193  0196' 1683               	bsf	3,5	;RP0=1, select bank1
  2194  0197' 1303               	bcf	3,6	;RP1=0, select bank1
  2195  0198' 0800'              	movf	(??_atualiza_remedio+2)^(0+128),w
  2196  0199' 1383               	bcf	3,7	;select IRP bank1
  2197  019A' 0080               	movwf	0
  2198  019B' 0008               	return
  2199  019C'                    __end_of_atualiza_remedio:	
  2200                           
  2201                           	psect	text9
  2202  0000'                    __ptext9:	
  2203 ;; *************** function _grava_eeprom *****************
  2204 ;; Defined at:
  2205 ;;		line 3 in file "memory.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  address         2   29[BANK0 ] int 
  2208 ;;  data            1   31[BANK0 ] unsigned char 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		wreg
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2220 ;;      Params:         0       3       0       0
  2221 ;;      Locals:         0       0       0       0
  2222 ;;      Temps:          0       2       0       0
  2223 ;;      Totals:         0       5       0       0
  2224 ;;Total ram usage:        5 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    4
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_atualiza_remedio
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           
  2235                           ;psect for function _grava_eeprom
  2236  0000'                    _grava_eeprom:	
  2237                           
  2238                           ;memory.c: 5: EEADR = address;
  2239                           
  2240                           ;incstack = 0
  2241                           ; Regs used in _grava_eeprom: [wreg]
  2242  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2243  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2244  0002' 081D'              	movf	grava_eeprom@address,w
  2245  0003' 1683               	bsf	3,5	;RP0=1, select bank1
  2246  0004' 1303               	bcf	3,6	;RP1=0, select bank1
  2247  0005' 009B               	movwf	27	;volatile
  2248                           
  2249                           ;memory.c: 6: EEDATA = data;
  2250  0006' 1283               	bcf	3,5	;RP0=0, select bank0
  2251  0007' 1303               	bcf	3,6	;RP1=0, select bank0
  2252  0008' 081F'              	movf	grava_eeprom@data,w
  2253  0009' 1683               	bsf	3,5	;RP0=1, select bank1
  2254  000A' 1303               	bcf	3,6	;RP1=0, select bank1
  2255  000B' 009A               	movwf	26	;volatile
  2256                           
  2257                           ;memory.c: 7: WREN = 1;
  2258  000C' 151C               	bsf	28,2	;volsfr
  2259                           
  2260                           ;memory.c: 8: GIE = 0;
  2261  000D' 138B               	bcf	11,7	;volatile
  2262                           
  2263                           ;memory.c: 10: EECON2 = 0x55;
  2264  000E' 3055               	movlw	85
  2265  000F' 009D               	movwf	29	;volsfr
  2266                           
  2267                           ;memory.c: 11: EECON2 = 0xAA;
  2268  0010' 30AA               	movlw	170
  2269  0011' 009D               	movwf	29	;volsfr
  2270                           
  2271                           ;memory.c: 13: WR = 1;
  2272  0012' 149C               	bsf	28,1	;volsfr
  2273                           
  2274                           ;memory.c: 14: GIE = 1;
  2275  0013' 178B               	bsf	11,7	;volatile
  2276                           
  2277                           ;memory.c: 16: EEIF=0;
  2278  0014' 1283               	bcf	3,5	;RP0=0, select bank0
  2279  0015' 1303               	bcf	3,6	;RP1=0, select bank0
  2280  0016' 138C               	bcf	12,7	;volatile
  2281                           
  2282                           ;memory.c: 17: _delay((unsigned long)((10)*(4000000/4000.0)));
  2283  0017' 300D               	movlw	13
  2284  0018' 1283               	bcf	3,5	;RP0=0, select bank0
  2285  0019' 1303               	bcf	3,6	;RP1=0, select bank0
  2286  001A' 00A1'              	movwf	??_grava_eeprom+1
  2287  001B' 30FB               	movlw	251
  2288  001C' 00A0'              	movwf	??_grava_eeprom
  2289  001D'                    u1787:	
  2290  001D' 0BA0'              	decfsz	??_grava_eeprom,f
  2291  001E' 281D'              	goto	u1787
  2292  001F' 0BA1'              	decfsz	??_grava_eeprom+1,f
  2293  0020' 281D'              	goto	u1787
  2294  0021' 0000               	nop
  2295  0022' 0008               	return
  2296  0023'                    __end_of_grava_eeprom:	
  2297                           
  2298                           	psect	text10
  2299  0000'                    __ptext10:	
  2300 ;; *************** function ___bmul *****************
  2301 ;; Defined at:
  2302 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  multiplier      1    wreg     unsigned char 
  2305 ;;  multiplicand    1   16[BANK0 ] unsigned char 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  multiplier      1   19[BANK0 ] unsigned char 
  2308 ;;  product         1   18[BANK0 ] unsigned char 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      unsigned char 
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2318 ;;      Params:         0       1       0       0
  2319 ;;      Locals:         0       2       0       0
  2320 ;;      Temps:          0       1       0       0
  2321 ;;      Totals:         0       4       0       0
  2322 ;;Total ram usage:        4 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    4
  2325 ;; This function calls:
  2326 ;;		Nothing
  2327 ;; This function is called by:
  2328 ;;		_atualiza_variaveis
  2329 ;;		_atualiza_relogio
  2330 ;;		_atualiza_remedio
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function ___bmul
  2336  0000'                    ___bmul:	
  2337                           
  2338                           ;incstack = 0
  2339                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2340                           ;___bmul@multiplier stored from wreg
  2341  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2342  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2343  0002' 0093'              	movwf	___bmul@multiplier
  2344  0003' 0192'              	clrf	___bmul@product
  2345  0004'                    l1448:	
  2346  0004' 1C13'              	btfss	___bmul@multiplier,0
  2347  0005' 280A'              	goto	l1452
  2348  0006' 0810'              	movf	___bmul@multiplicand,w
  2349  0007' 0091'              	movwf	??___bmul
  2350  0008' 0811'              	movf	??___bmul,w
  2351  0009' 0792'              	addwf	___bmul@product,f
  2352  000A'                    l1452:	
  2353  000A' 1003               	clrc
  2354  000B' 0D90'              	rlf	___bmul@multiplicand,f
  2355  000C' 1003               	clrc
  2356  000D' 0C93'              	rrf	___bmul@multiplier,f
  2357  000E' 0813'              	movf	___bmul@multiplier,w
  2358  000F' 1D03               	btfss	3,2
  2359  0010' 2804'              	goto	l1448
  2360  0011' 0812'              	movf	___bmul@product,w
  2361  0012' 0008               	return
  2362  0013'                    __end_of___bmul:	
  2363                           
  2364                           	psect	text11
  2365  0000'                    __ptext11:	
  2366 ;; *************** function ___awmod *****************
  2367 ;; Defined at:
  2368 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  divisor         2   20[BANK0 ] int 
  2371 ;;  dividend        2   22[BANK0 ] int 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  sign            1   26[BANK0 ] unsigned char 
  2374 ;;  counter         1   25[BANK0 ] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  2   20[BANK0 ] int 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2384 ;;      Params:         0       4       0       0
  2385 ;;      Locals:         0       2       0       0
  2386 ;;      Temps:          0       1       0       0
  2387 ;;      Totals:         0       7       0       0
  2388 ;;Total ram usage:        7 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    4
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_atualiza_remedio
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function ___awmod
  2400  0000'                    ___awmod:	
  2401                           
  2402                           ;incstack = 0
  2403                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2404  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2405  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2406  0002' 019A'              	clrf	___awmod@sign
  2407  0003' 1F97'              	btfss	___awmod@dividend+1,7
  2408  0004' 280C'              	goto	l1512
  2409  0005' 0996'              	comf	___awmod@dividend,f
  2410  0006' 0997'              	comf	___awmod@dividend+1,f
  2411  0007' 0A96'              	incf	___awmod@dividend,f
  2412  0008' 1903               	skipnz
  2413  0009' 0A97'              	incf	___awmod@dividend+1,f
  2414  000A' 019A'              	clrf	___awmod@sign
  2415  000B' 0A9A'              	incf	___awmod@sign,f
  2416  000C'                    l1512:	
  2417  000C' 1F95'              	btfss	___awmod@divisor+1,7
  2418  000D' 2813'              	goto	l1516
  2419  000E' 0994'              	comf	___awmod@divisor,f
  2420  000F' 0995'              	comf	___awmod@divisor+1,f
  2421  0010' 0A94'              	incf	___awmod@divisor,f
  2422  0011' 1903               	skipnz
  2423  0012' 0A95'              	incf	___awmod@divisor+1,f
  2424  0013'                    l1516:	
  2425  0013' 0814'              	movf	___awmod@divisor,w
  2426  0014' 0415'              	iorwf	___awmod@divisor+1,w
  2427  0015' 1903               	btfsc	3,2
  2428  0016' 2840'              	goto	l1534
  2429  0017' 0199'              	clrf	___awmod@counter
  2430  0018' 0A99'              	incf	___awmod@counter,f
  2431  0019'                    l1524:	
  2432  0019' 1B95'              	btfsc	___awmod@divisor+1,7
  2433  001A' 2827'              	goto	l1526
  2434  001B' 3001               	movlw	1
  2435  001C'                    u985:	
  2436  001C' 1003               	clrc
  2437  001D' 0D94'              	rlf	___awmod@divisor,f
  2438  001E' 0D95'              	rlf	___awmod@divisor+1,f
  2439  001F' 3EFF               	addlw	-1
  2440  0020' 1D03               	skipz
  2441  0021' 281C'              	goto	u985
  2442  0022' 3001               	movlw	1
  2443  0023' 0098'              	movwf	??___awmod
  2444  0024' 0818'              	movf	??___awmod,w
  2445  0025' 0799'              	addwf	___awmod@counter,f
  2446  0026' 2819'              	goto	l1524
  2447  0027'                    l1526:	
  2448  0027' 0815'              	movf	___awmod@divisor+1,w
  2449  0028' 0217'              	subwf	___awmod@dividend+1,w
  2450  0029' 1D03               	skipz
  2451  002A' 282D'              	goto	u1005
  2452  002B' 0814'              	movf	___awmod@divisor,w
  2453  002C' 0216'              	subwf	___awmod@dividend,w
  2454  002D'                    u1005:	
  2455  002D' 1C03               	skipc
  2456  002E' 2835'              	goto	l1530
  2457  002F' 0814'              	movf	___awmod@divisor,w
  2458  0030' 0296'              	subwf	___awmod@dividend,f
  2459  0031' 0815'              	movf	___awmod@divisor+1,w
  2460  0032' 1C03               	skipc
  2461  0033' 0397'              	decf	___awmod@dividend+1,f
  2462  0034' 0297'              	subwf	___awmod@dividend+1,f
  2463  0035'                    l1530:	
  2464  0035' 3001               	movlw	1
  2465  0036'                    u1015:	
  2466  0036' 1003               	clrc
  2467  0037' 0C95'              	rrf	___awmod@divisor+1,f
  2468  0038' 0C94'              	rrf	___awmod@divisor,f
  2469  0039' 3EFF               	addlw	-1
  2470  003A' 1D03               	skipz
  2471  003B' 2836'              	goto	u1015
  2472  003C' 3001               	movlw	1
  2473  003D' 0299'              	subwf	___awmod@counter,f
  2474  003E' 1D03               	btfss	3,2
  2475  003F' 2827'              	goto	l1526
  2476  0040'                    l1534:	
  2477  0040' 081A'              	movf	___awmod@sign,w
  2478  0041' 1903               	btfsc	3,2
  2479  0042' 2848'              	goto	l1538
  2480  0043' 0996'              	comf	___awmod@dividend,f
  2481  0044' 0997'              	comf	___awmod@dividend+1,f
  2482  0045' 0A96'              	incf	___awmod@dividend,f
  2483  0046' 1903               	skipnz
  2484  0047' 0A97'              	incf	___awmod@dividend+1,f
  2485  0048'                    l1538:	
  2486  0048' 0817'              	movf	___awmod@dividend+1,w
  2487  0049' 0095'              	movwf	?___awmod+1
  2488  004A' 0816'              	movf	___awmod@dividend,w
  2489  004B' 0094'              	movwf	?___awmod
  2490  004C' 0008               	return
  2491  004D'                    __end_of___awmod:	
  2492                           
  2493                           	psect	text12
  2494  0000'                    __ptext12:	
  2495 ;; *************** function ___awdiv *****************
  2496 ;; Defined at:
  2497 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  divisor         2   20[BANK0 ] int 
  2500 ;;  dividend        2   22[BANK0 ] int 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  quotient        2   27[BANK0 ] int 
  2503 ;;  sign            1   26[BANK0 ] unsigned char 
  2504 ;;  counter         1   25[BANK0 ] unsigned char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  2   20[BANK0 ] int 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2514 ;;      Params:         0       4       0       0
  2515 ;;      Locals:         0       4       0       0
  2516 ;;      Temps:          0       1       0       0
  2517 ;;      Totals:         0       9       0       0
  2518 ;;Total ram usage:        9 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    4
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		_atualiza_remedio
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           
  2529                           ;psect for function ___awdiv
  2530  0000'                    ___awdiv:	
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2534  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2535  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2536  0002' 019A'              	clrf	___awdiv@sign
  2537  0003' 1F95'              	btfss	___awdiv@divisor+1,7
  2538  0004' 280C'              	goto	l1468
  2539  0005' 0994'              	comf	___awdiv@divisor,f
  2540  0006' 0995'              	comf	___awdiv@divisor+1,f
  2541  0007' 0A94'              	incf	___awdiv@divisor,f
  2542  0008' 1903               	skipnz
  2543  0009' 0A95'              	incf	___awdiv@divisor+1,f
  2544  000A' 019A'              	clrf	___awdiv@sign
  2545  000B' 0A9A'              	incf	___awdiv@sign,f
  2546  000C'                    l1468:	
  2547  000C' 1F97'              	btfss	___awdiv@dividend+1,7
  2548  000D' 2817'              	goto	l1474
  2549  000E' 0996'              	comf	___awdiv@dividend,f
  2550  000F' 0997'              	comf	___awdiv@dividend+1,f
  2551  0010' 0A96'              	incf	___awdiv@dividend,f
  2552  0011' 1903               	skipnz
  2553  0012' 0A97'              	incf	___awdiv@dividend+1,f
  2554  0013' 3001               	movlw	1
  2555  0014' 0098'              	movwf	??___awdiv
  2556  0015' 0818'              	movf	??___awdiv,w
  2557  0016' 069A'              	xorwf	___awdiv@sign,f
  2558  0017'                    l1474:	
  2559  0017' 019B'              	clrf	___awdiv@quotient
  2560  0018' 019C'              	clrf	___awdiv@quotient+1
  2561  0019' 0814'              	movf	___awdiv@divisor,w
  2562  001A' 0415'              	iorwf	___awdiv@divisor+1,w
  2563  001B' 1903               	btfsc	3,2
  2564  001C' 284E'              	goto	l1496
  2565  001D' 0199'              	clrf	___awdiv@counter
  2566  001E' 0A99'              	incf	___awdiv@counter,f
  2567  001F'                    l1484:	
  2568  001F' 1B95'              	btfsc	___awdiv@divisor+1,7
  2569  0020' 282D'              	goto	l1486
  2570  0021' 3001               	movlw	1
  2571  0022'                    u885:	
  2572  0022' 1003               	clrc
  2573  0023' 0D94'              	rlf	___awdiv@divisor,f
  2574  0024' 0D95'              	rlf	___awdiv@divisor+1,f
  2575  0025' 3EFF               	addlw	-1
  2576  0026' 1D03               	skipz
  2577  0027' 2822'              	goto	u885
  2578  0028' 3001               	movlw	1
  2579  0029' 0098'              	movwf	??___awdiv
  2580  002A' 0818'              	movf	??___awdiv,w
  2581  002B' 0799'              	addwf	___awdiv@counter,f
  2582  002C' 281F'              	goto	l1484
  2583  002D'                    l1486:	
  2584  002D' 3001               	movlw	1
  2585  002E'                    u905:	
  2586  002E' 1003               	clrc
  2587  002F' 0D9B'              	rlf	___awdiv@quotient,f
  2588  0030' 0D9C'              	rlf	___awdiv@quotient+1,f
  2589  0031' 3EFF               	addlw	-1
  2590  0032' 1D03               	skipz
  2591  0033' 282E'              	goto	u905
  2592  0034' 0815'              	movf	___awdiv@divisor+1,w
  2593  0035' 0217'              	subwf	___awdiv@dividend+1,w
  2594  0036' 1D03               	skipz
  2595  0037' 283A'              	goto	u915
  2596  0038' 0814'              	movf	___awdiv@divisor,w
  2597  0039' 0216'              	subwf	___awdiv@dividend,w
  2598  003A'                    u915:	
  2599  003A' 1C03               	skipc
  2600  003B' 2843'              	goto	l1492
  2601  003C' 0814'              	movf	___awdiv@divisor,w
  2602  003D' 0296'              	subwf	___awdiv@dividend,f
  2603  003E' 0815'              	movf	___awdiv@divisor+1,w
  2604  003F' 1C03               	skipc
  2605  0040' 0397'              	decf	___awdiv@dividend+1,f
  2606  0041' 0297'              	subwf	___awdiv@dividend+1,f
  2607  0042' 141B'              	bsf	___awdiv@quotient,0
  2608  0043'                    l1492:	
  2609  0043' 3001               	movlw	1
  2610  0044'                    u925:	
  2611  0044' 1003               	clrc
  2612  0045' 0C95'              	rrf	___awdiv@divisor+1,f
  2613  0046' 0C94'              	rrf	___awdiv@divisor,f
  2614  0047' 3EFF               	addlw	-1
  2615  0048' 1D03               	skipz
  2616  0049' 2844'              	goto	u925
  2617  004A' 3001               	movlw	1
  2618  004B' 0299'              	subwf	___awdiv@counter,f
  2619  004C' 1D03               	btfss	3,2
  2620  004D' 282D'              	goto	l1486
  2621  004E'                    l1496:	
  2622  004E' 081A'              	movf	___awdiv@sign,w
  2623  004F' 1903               	btfsc	3,2
  2624  0050' 2856'              	goto	l1500
  2625  0051' 099B'              	comf	___awdiv@quotient,f
  2626  0052' 099C'              	comf	___awdiv@quotient+1,f
  2627  0053' 0A9B'              	incf	___awdiv@quotient,f
  2628  0054' 1903               	skipnz
  2629  0055' 0A9C'              	incf	___awdiv@quotient+1,f
  2630  0056'                    l1500:	
  2631  0056' 081C'              	movf	___awdiv@quotient+1,w
  2632  0057' 0095'              	movwf	?___awdiv+1
  2633  0058' 081B'              	movf	___awdiv@quotient,w
  2634  0059' 0094'              	movwf	?___awdiv
  2635  005A' 0008               	return
  2636  005B'                    __end_of___awdiv:	
  2637                           
  2638                           	psect	text13
  2639  0000'                    __ptext13:	
  2640 ;; *************** function _serial *****************
  2641 ;; Defined at:
  2642 ;;		line 65 in file "comunication.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2656 ;;      Params:         0       0       0       0
  2657 ;;      Locals:         0       0       0       0
  2658 ;;      Temps:          0       5       0       0
  2659 ;;      Totals:         0       5       0       0
  2660 ;;Total ram usage:        5 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    3
  2663 ;; This function calls:
  2664 ;;		_cadastra_relogio
  2665 ;;		_comunica
  2666 ;;		_envia_teste
  2667 ;;		_incrementa_min
  2668 ;;		_verifica
  2669 ;; This function is called by:
  2670 ;;		Interrupt level 1
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           
  2675                           ;psect for function _serial
  2676  0000'                    _serial:	
  2677                           
  2678                           ;comunication.c: 67: if(INTF == 1)
  2679  0000' 1C8B               	btfss	11,1	;volatile
  2680  0001' 2812'              	goto	i1l1950
  2681                           
  2682                           ;comunication.c: 68: {
  2683                           ;comunication.c: 69: INTF = 0;
  2684  0002' 108B               	bcf	11,1	;volatile
  2685                           
  2686                           ;comunication.c: 70: if(botao == 0)
  2687  0003' 080B'              	movf	_botao,w
  2688  0004' 1D03               	btfss	3,2
  2689  0005' 2812'              	goto	i1l1950
  2690                           
  2691                           ;comunication.c: 71: {
  2692                           ;comunication.c: 72: if(libera)
  2693  0006' 080F'              	movf	_libera,w
  2694  0007' 1903               	btfsc	3,2
  2695  0008' 280E'              	goto	i1l1946
  2696                           
  2697                           ;comunication.c: 73: pendencia_remedio[in] = 0;
  2698  0009' 0810'              	movf	_in,w
  2699  000A' 3E00'              	addlw	(low (_pendencia_remedio| 0))& (0+255)
  2700  000B' 0084               	movwf	4
  2701  000C' 1383               	bcf	3,7	;select IRP bank0
  2702  000D' 0180               	clrf	0
  2703  000E'                    i1l1946:	
  2704                           
  2705                           ;comunication.c: 74: botao = 1;
  2706  000E' 018B'              	clrf	_botao
  2707  000F' 0A8B'              	incf	_botao,f
  2708                           
  2709                           ;comunication.c: 75: libera = 1;
  2710  0010' 018F'              	clrf	_libera
  2711  0011' 0A8F'              	incf	_libera,f
  2712  0012'                    i1l1950:	
  2713                           
  2714                           ;comunication.c: 76: }
  2715                           ;comunication.c: 78: }
  2716                           ;comunication.c: 80: if(TMR0IF == 1)
  2717  0012' 1D0B               	btfss	11,2	;volatile
  2718  0013' 2832'              	goto	i1l1976
  2719                           
  2720                           ;comunication.c: 81: {
  2721                           ;comunication.c: 82: TMR0 = 6;
  2722  0014' 3006               	movlw	6
  2723  0015' 0081               	movwf	1	;volatile
  2724                           
  2725                           ;comunication.c: 83: TMR0IF = 0;
  2726  0016' 110B               	bcf	11,2	;volatile
  2727                           
  2728                           ;comunication.c: 84: seg++;
  2729  0017' 3001               	movlw	1
  2730  0018' 0089'              	movwf	??_serial
  2731  0019' 0809'              	movf	??_serial,w
  2732  001A' 078A'              	addwf	_seg,f
  2733                           
  2734                           ;comunication.c: 85: if(RB0 == 1)
  2735  001B' 1806               	btfsc	6,0	;volatile
  2736                           
  2737                           ;comunication.c: 86: botao = 0;
  2738  001C' 018B'              	clrf	_botao
  2739                           
  2740                           ;comunication.c: 88: if(seg == 60)
  2741  001D' 303C               	movlw	60
  2742  001E' 060A'              	xorwf	_seg,w
  2743  001F' 1D03               	btfss	3,2
  2744  0020' 2826'              	goto	i1l1968
  2745                           
  2746                           ;comunication.c: 89: {
  2747                           ;comunication.c: 90: incrementa_min();
  2748  0021' 2000'              	fcall	_incrementa_min
  2749                           
  2750                           ;comunication.c: 91: cadastra_relogio();
  2751  0022' 2000'              	fcall	_cadastra_relogio
  2752                           
  2753                           ;comunication.c: 92: seg = 0;
  2754  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  2755  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  2756  0025' 018A'              	clrf	_seg
  2757  0026'                    i1l1968:	
  2758                           
  2759                           ;comunication.c: 93: }
  2760                           ;comunication.c: 94: if(seg == 0)
  2761  0026' 080A'              	movf	_seg,w
  2762  0027' 1D03               	btfss	3,2
  2763  0028' 282A'              	goto	i1l154
  2764                           
  2765                           ;comunication.c: 95: {
  2766                           ;comunication.c: 96: verifica();
  2767  0029' 2000'              	fcall	_verifica
  2768  002A'                    i1l154:	
  2769                           
  2770                           ;comunication.c: 97: }
  2771                           ;comunication.c: 98: envia_teste();
  2772  002A' 2000'              	fcall	_envia_teste
  2773                           
  2774                           ;comunication.c: 99: if(led == 1)
  2775  002B' 1283               	bcf	3,5	;RP0=0, select bank0
  2776  002C' 1303               	bcf	3,6	;RP1=0, select bank0
  2777  002D' 030C'              	decf	_led,w
  2778  002E' 1D03               	btfss	3,2
  2779  002F' 2832'              	goto	i1l1976
  2780                           
  2781                           ;comunication.c: 100: {
  2782                           ;comunication.c: 101: RA1 = ~RA1;
  2783  0030' 3002               	movlw	2
  2784  0031' 0685               	xorwf	5,f
  2785  0032'                    i1l1976:	
  2786                           
  2787                           ;comunication.c: 102: }
  2788                           ;comunication.c: 103: }
  2789                           ;comunication.c: 105: if(RCIF == 1)
  2790  0032' 1E8C               	btfss	12,5	;volatile
  2791  0033' 2847'              	goto	i1l158
  2792                           
  2793                           ;comunication.c: 106: {
  2794                           ;comunication.c: 107: RCIF = 0;
  2795  0034' 128C               	bcf	12,5	;volatile
  2796                           
  2797                           ;comunication.c: 108: string[flag] = RCREG;
  2798  0035' 081A               	movf	26,w	;volatile
  2799  0036' 0089'              	movwf	??_serial
  2800  0037' 080E'              	movf	_flag,w
  2801  0038' 3E00'              	addlw	(low (_string| 0))& (0+255)
  2802  0039' 0084               	movwf	4
  2803  003A' 0809'              	movf	??_serial,w
  2804  003B' 1383               	bcf	3,7	;select IRP bank0
  2805  003C' 0080               	movwf	0
  2806                           
  2807                           ;comunication.c: 109: flag++;
  2808  003D' 3001               	movlw	1
  2809  003E' 0089'              	movwf	??_serial
  2810  003F' 0809'              	movf	??_serial,w
  2811  0040' 078E'              	addwf	_flag,f
  2812                           
  2813                           ;comunication.c: 110: if(flag >= 5)
  2814  0041' 3005               	movlw	5
  2815  0042' 020E'              	subwf	_flag,w
  2816  0043' 1C03               	skipc
  2817  0044' 2847'              	goto	i1l158
  2818                           
  2819                           ;comunication.c: 111: {
  2820                           ;comunication.c: 112: flag = 0;
  2821  0045' 018E'              	clrf	_flag
  2822                           
  2823                           ;comunication.c: 113: comunica();
  2824  0046' 2000'              	fcall	_comunica
  2825  0047'                    i1l158:	
  2826  0047' 1283               	bcf	3,5	;RP0=0, select bank0
  2827  0048' 1303               	bcf	3,6	;RP1=0, select bank0
  2828  0049' 080D'              	movf	??_serial+4,w
  2829  004A' 00FF               	movwf	127
  2830  004B' 080C'              	movf	??_serial+3,w
  2831  004C' 008A               	movwf	10
  2832  004D' 080B'              	movf	??_serial+2,w
  2833  004E' 0084               	movwf	4
  2834  004F' 0E00'              	swapf	(??_serial+1)^0,w
  2835  0050' 0083               	movwf	3
  2836  0051' 0EFE               	swapf	126,f
  2837  0052' 0E7E               	swapf	126,w
  2838  0053' 0009               	retfie
  2839  0054'                    __end_of_serial:	
  2840                           
  2841                           	psect	intentry
  2842  0000'                    __pintentry:	
  2843                           ;incstack = 0
  2844                           ; Regs used in _serial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2845                           
  2846  0000'                    interrupt_function:	
  2847  007E                     saved_w	set	btemp
  2848  0000' 00FE               	movwf	btemp
  2849  0001' 0E03               	swapf	3,w
  2850  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  2851  0003' 1303               	bcf	3,6	;RP1=0, select bank0
  2852  0004' 008A'              	movwf	??_serial+1
  2853  0005' 0804               	movf	4,w
  2854  0006' 008B'              	movwf	??_serial+2
  2855  0007' 080A               	movf	10,w
  2856  0008' 008C'              	movwf	??_serial+3
  2857  0009' 087F               	movf	btemp+1,w
  2858  000A' 008D'              	movwf	??_serial+4
  2859  000B' 2800'              	ljmp	_serial
  2860                           
  2861                           	psect	text14
  2862  0000'                    __ptext14:	
  2863 ;; *************** function _verifica *****************
  2864 ;; Defined at:
  2865 ;;		line 46 in file "logicSystem.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  count           1    0[BANK0 ] unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2879 ;;      Params:         0       0       0       0
  2880 ;;      Locals:         0       1       0       0
  2881 ;;      Temps:          5       0       0       0
  2882 ;;      Totals:         5       1       0       0
  2883 ;;Total ram usage:        6 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    1
  2886 ;; This function calls:
  2887 ;;		i1___awdiv
  2888 ;;		i1___awmod
  2889 ;;		i1___bmul
  2890 ;; This function is called by:
  2891 ;;		_serial
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           
  2896                           ;psect for function _verifica
  2897  0000'                    _verifica:	
  2898                           
  2899                           ;logicSystem.c: 48: char count;
  2900                           ;logicSystem.c: 49: for(count = 0; count < 4; count++)
  2901                           
  2902                           ;incstack = 0
  2903                           ; Regs used in _verifica: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2904  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2905  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2906  0002' 0180'              	clrf	verifica@count
  2907  0003'                    L2:	
  2908  0003' 3004               	movlw	4
  2909  0004' 0200'              	subwf	verifica@count,w
  2910  0005' 1803               	btfsc	3,0
  2911  0006' 0008               	return
  2912                           
  2913                           ;logicSystem.c: 50: {
  2914                           ;logicSystem.c: 51: if((remedio[count].d_hora) == (Hora/10) && (remedio[count].u_hora) =
      +                          = (Hora%10))
  2915  0007' 3005               	movlw	5
  2916  0008' 0089'              	movwf	??_verifica
  2917  0009' 0809'              	movf	??_verifica,w
  2918  000A' 0082'              	movwf	i1___bmul@multiplicand
  2919  000B' 0800'              	movf	verifica@count,w
  2920  000C' 2000'              	fcall	i1___bmul
  2921  000D' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  2922  000E' 0084               	movwf	4
  2923  000F' 1383               	bcf	3,7	;select IRP bank1
  2924  0010' 0800               	movf	0,w
  2925  0011' 008A'              	movwf	??_verifica+1
  2926  0012' 018B'              	clrf	??_verifica+2
  2927  0013' 300A               	movlw	10
  2928  0014' 0080'              	movwf	i1___awdiv@divisor
  2929  0015' 3000               	movlw	0
  2930  0016' 0081'              	movwf	i1___awdiv@divisor+1
  2931  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  2932  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  2933  0019' 0800'              	movf	_Hora,w
  2934  001A' 008C'              	movwf	??_verifica+3
  2935  001B' 018D'              	clrf	??_verifica+4
  2936  001C' 080C'              	movf	??_verifica+3,w
  2937  001D' 0082'              	movwf	i1___awdiv@dividend
  2938  001E' 080D'              	movf	??_verifica+4,w
  2939  001F' 0083'              	movwf	i1___awdiv@dividend+1
  2940  0020' 2000'              	fcall	i1___awdiv
  2941  0021' 0801'              	movf	?i1___awdiv+1,w
  2942  0022' 060B'              	xorwf	??_verifica+2,w
  2943  0023' 1D03               	skipz
  2944  0024' 2827'              	goto	u146_25
  2945  0025' 0800'              	movf	?i1___awdiv,w
  2946  0026' 060A'              	xorwf	??_verifica+1,w
  2947  0027'                    u146_25:	
  2948  0027' 1D03               	skipz
  2949  0028' 28A2'              	goto	i1l1922
  2950  0029' 3005               	movlw	5
  2951  002A' 0089'              	movwf	??_verifica
  2952  002B' 0809'              	movf	??_verifica,w
  2953  002C' 0082'              	movwf	i1___bmul@multiplicand
  2954  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  2955  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  2956  002F' 0800'              	movf	verifica@count,w
  2957  0030' 2000'              	fcall	i1___bmul
  2958  0031' 3E01               	addlw	1
  2959  0032' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  2960  0033' 0084               	movwf	4
  2961  0034' 1383               	bcf	3,7	;select IRP bank1
  2962  0035' 0800               	movf	0,w
  2963  0036' 008A'              	movwf	??_verifica+1
  2964  0037' 018B'              	clrf	??_verifica+2
  2965  0038' 300A               	movlw	10
  2966  0039' 0080'              	movwf	i1___awmod@divisor
  2967  003A' 3000               	movlw	0
  2968  003B' 0081'              	movwf	i1___awmod@divisor+1
  2969  003C' 1283               	bcf	3,5	;RP0=0, select bank0
  2970  003D' 1303               	bcf	3,6	;RP1=0, select bank0
  2971  003E' 0800'              	movf	_Hora,w
  2972  003F' 008C'              	movwf	??_verifica+3
  2973  0040' 018D'              	clrf	??_verifica+4
  2974  0041' 080C'              	movf	??_verifica+3,w
  2975  0042' 0082'              	movwf	i1___awmod@dividend
  2976  0043' 080D'              	movf	??_verifica+4,w
  2977  0044' 0083'              	movwf	i1___awmod@dividend+1
  2978  0045' 2000'              	fcall	i1___awmod
  2979  0046' 0801'              	movf	?i1___awmod+1,w
  2980  0047' 060B'              	xorwf	??_verifica+2,w
  2981  0048' 1D03               	skipz
  2982  0049' 284C'              	goto	u147_25
  2983  004A' 0800'              	movf	?i1___awmod,w
  2984  004B' 060A'              	xorwf	??_verifica+1,w
  2985  004C'                    u147_25:	
  2986  004C' 1D03               	skipz
  2987  004D' 28A2'              	goto	i1l1922
  2988                           
  2989                           ;logicSystem.c: 52: {
  2990                           ;logicSystem.c: 53: if((remedio[count].d_minuto) == (Min/10) && (remedio[count].u_minuto
      +                          ) == (Min%10 ))
  2991  004E' 3005               	movlw	5
  2992  004F' 0089'              	movwf	??_verifica
  2993  0050' 0809'              	movf	??_verifica,w
  2994  0051' 0082'              	movwf	i1___bmul@multiplicand
  2995  0052' 1283               	bcf	3,5	;RP0=0, select bank0
  2996  0053' 1303               	bcf	3,6	;RP1=0, select bank0
  2997  0054' 0800'              	movf	verifica@count,w
  2998  0055' 2000'              	fcall	i1___bmul
  2999  0056' 3E02               	addlw	2
  3000  0057' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3001  0058' 0084               	movwf	4
  3002  0059' 1383               	bcf	3,7	;select IRP bank1
  3003  005A' 0800               	movf	0,w
  3004  005B' 008A'              	movwf	??_verifica+1
  3005  005C' 018B'              	clrf	??_verifica+2
  3006  005D' 300A               	movlw	10
  3007  005E' 0080'              	movwf	i1___awdiv@divisor
  3008  005F' 3000               	movlw	0
  3009  0060' 0081'              	movwf	i1___awdiv@divisor+1
  3010  0061' 1283               	bcf	3,5	;RP0=0, select bank0
  3011  0062' 1303               	bcf	3,6	;RP1=0, select bank0
  3012  0063' 0801'              	movf	_Min,w
  3013  0064' 008C'              	movwf	??_verifica+3
  3014  0065' 018D'              	clrf	??_verifica+4
  3015  0066' 080C'              	movf	??_verifica+3,w
  3016  0067' 0082'              	movwf	i1___awdiv@dividend
  3017  0068' 080D'              	movf	??_verifica+4,w
  3018  0069' 0083'              	movwf	i1___awdiv@dividend+1
  3019  006A' 2000'              	fcall	i1___awdiv
  3020  006B' 0801'              	movf	?i1___awdiv+1,w
  3021  006C' 060B'              	xorwf	??_verifica+2,w
  3022  006D' 1D03               	skipz
  3023  006E' 2871'              	goto	u148_25
  3024  006F' 0800'              	movf	?i1___awdiv,w
  3025  0070' 060A'              	xorwf	??_verifica+1,w
  3026  0071'                    u148_25:	
  3027  0071' 1D03               	skipz
  3028  0072' 28A2'              	goto	i1l1922
  3029  0073' 3005               	movlw	5
  3030  0074' 0089'              	movwf	??_verifica
  3031  0075' 0809'              	movf	??_verifica,w
  3032  0076' 0082'              	movwf	i1___bmul@multiplicand
  3033  0077' 1283               	bcf	3,5	;RP0=0, select bank0
  3034  0078' 1303               	bcf	3,6	;RP1=0, select bank0
  3035  0079' 0800'              	movf	verifica@count,w
  3036  007A' 2000'              	fcall	i1___bmul
  3037  007B' 3E03               	addlw	3
  3038  007C' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3039  007D' 0084               	movwf	4
  3040  007E' 1383               	bcf	3,7	;select IRP bank1
  3041  007F' 0800               	movf	0,w
  3042  0080' 008A'              	movwf	??_verifica+1
  3043  0081' 018B'              	clrf	??_verifica+2
  3044  0082' 300A               	movlw	10
  3045  0083' 0080'              	movwf	i1___awmod@divisor
  3046  0084' 3000               	movlw	0
  3047  0085' 0081'              	movwf	i1___awmod@divisor+1
  3048  0086' 1283               	bcf	3,5	;RP0=0, select bank0
  3049  0087' 1303               	bcf	3,6	;RP1=0, select bank0
  3050  0088' 0801'              	movf	_Min,w
  3051  0089' 008C'              	movwf	??_verifica+3
  3052  008A' 018D'              	clrf	??_verifica+4
  3053  008B' 080C'              	movf	??_verifica+3,w
  3054  008C' 0082'              	movwf	i1___awmod@dividend
  3055  008D' 080D'              	movf	??_verifica+4,w
  3056  008E' 0083'              	movwf	i1___awmod@dividend+1
  3057  008F' 2000'              	fcall	i1___awmod
  3058  0090' 0801'              	movf	?i1___awmod+1,w
  3059  0091' 060B'              	xorwf	??_verifica+2,w
  3060  0092' 1D03               	skipz
  3061  0093' 2896'              	goto	u149_25
  3062  0094' 0800'              	movf	?i1___awmod,w
  3063  0095' 060A'              	xorwf	??_verifica+1,w
  3064  0096'                    u149_25:	
  3065  0096' 1D03               	skipz
  3066  0097' 28A2'              	goto	i1l1922
  3067                           
  3068                           ;logicSystem.c: 54: {
  3069                           ;logicSystem.c: 55: pendencia_remedio[count] = 1;
  3070  0098' 1283               	bcf	3,5	;RP0=0, select bank0
  3071  0099' 1303               	bcf	3,6	;RP1=0, select bank0
  3072  009A' 0800'              	movf	verifica@count,w
  3073  009B' 3E00'              	addlw	(low (_pendencia_remedio| 0))& (0+255)
  3074  009C' 0084               	movwf	4
  3075  009D' 1383               	bcf	3,7	;select IRP bank0
  3076  009E' 0180               	clrf	0
  3077  009F' 0A80               	incf	0,f
  3078                           
  3079                           ;logicSystem.c: 56: led = 1;
  3080  00A0' 018C'              	clrf	_led
  3081  00A1' 0A8C'              	incf	_led,f
  3082  00A2'                    i1l1922:	
  3083  00A2' 3001               	movlw	1
  3084  00A3' 0089'              	movwf	??_verifica
  3085  00A4' 0809'              	movf	??_verifica,w
  3086  00A5' 1283               	bcf	3,5	;RP0=0, select bank0
  3087  00A6' 1303               	bcf	3,6	;RP1=0, select bank0
  3088  00A7' 0780'              	addwf	verifica@count,f
  3089  00A8' 2803'              	goto	L2
  3090  00A9'                    __end_of_verifica:	
  3091                           
  3092                           	psect	text15
  3093  0000'                    __ptext15:	
  3094 ;; *************** function _incrementa_min *****************
  3095 ;; Defined at:
  3096 ;;		line 3 in file "logicSystem.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3110 ;;      Params:         0       0       0       0
  3111 ;;      Locals:         0       0       0       0
  3112 ;;      Temps:          1       0       0       0
  3113 ;;      Totals:         1       0       0       0
  3114 ;;Total ram usage:        1 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		_serial
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           
  3124                           ;psect for function _incrementa_min
  3125  0000'                    _incrementa_min:	
  3126                           
  3127                           ;logicSystem.c: 5: Min++;
  3128                           
  3129                           ;incstack = 0
  3130                           ; Regs used in _incrementa_min: [wreg+status,2+status,0]
  3131  0000' 3001               	movlw	1
  3132  0001' 0080'              	movwf	??_incrementa_min
  3133  0002' 0800'              	movf	??_incrementa_min,w
  3134  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  3135  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  3136  0005' 0781'              	addwf	_Min,f
  3137                           
  3138                           ;logicSystem.c: 6: if(Min == 60)
  3139  0006' 303C               	movlw	60
  3140  0007' 0601'              	xorwf	_Min,w
  3141  0008' 1D03               	btfss	3,2
  3142  0009' 0008               	return
  3143                           
  3144                           ;logicSystem.c: 7: {
  3145                           ;logicSystem.c: 8: Hora++;
  3146  000A' 3001               	movlw	1
  3147  000B' 0080'              	movwf	??_incrementa_min
  3148  000C' 0800'              	movf	??_incrementa_min,w
  3149  000D' 0780'              	addwf	_Hora,f
  3150                           
  3151                           ;logicSystem.c: 9: Min = 0;
  3152  000E' 0181'              	clrf	_Min
  3153                           
  3154                           ;logicSystem.c: 10: if(Hora == 24)
  3155  000F' 3018               	movlw	24
  3156  0010' 0600'              	xorwf	_Hora,w
  3157  0011' 1D03               	btfss	3,2
  3158  0012' 0008               	return
  3159                           
  3160                           ;logicSystem.c: 11: Hora = 0;
  3161  0013' 0180'              	clrf	_Hora
  3162  0014' 0008               	return
  3163  0015'                    __end_of_incrementa_min:	
  3164                           
  3165                           	psect	text16
  3166  0000'                    __ptext16:	
  3167 ;; *************** function _envia_teste *****************
  3168 ;; Defined at:
  3169 ;;		line 16 in file "comunication.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3183 ;;      Params:         0       0       0       0
  3184 ;;      Locals:         0       0       0       0
  3185 ;;      Temps:          2       0       0       0
  3186 ;;      Totals:         2       0       0       0
  3187 ;;Total ram usage:        2 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    2
  3190 ;; This function calls:
  3191 ;;		_enviaDados
  3192 ;;		_envia_dados_da_memoria
  3193 ;;		i1___awdiv
  3194 ;;		i1___awmod
  3195 ;; This function is called by:
  3196 ;;		_serial
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function _envia_teste
  3202  0000'                    _envia_teste:	
  3203                           
  3204                           ;comunication.c: 18: envia_dados_da_memoria();
  3205                           
  3206                           ;incstack = 0
  3207                           ; Regs used in _envia_teste: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3208  0000' 2000'              	fcall	_envia_dados_da_memoria
  3209                           
  3210                           ;comunication.c: 19: enviaDados('-');
  3211  0001' 302D               	movlw	45
  3212  0002' 2000'              	fcall	_enviaDados
  3213                           
  3214                           ;comunication.c: 20: enviaDados(' ');
  3215  0003' 3020               	movlw	32
  3216  0004' 2000'              	fcall	_enviaDados
  3217                           
  3218                           ;comunication.c: 21: enviaDados(((Hora/10) + 48));
  3219  0005' 300A               	movlw	10
  3220  0006' 0080'              	movwf	i1___awdiv@divisor
  3221  0007' 3000               	movlw	0
  3222  0008' 0081'              	movwf	i1___awdiv@divisor+1
  3223  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  3224  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  3225  000B' 0800'              	movf	_Hora,w
  3226  000C' 0089'              	movwf	??_envia_teste
  3227  000D' 018A'              	clrf	??_envia_teste+1
  3228  000E' 0809'              	movf	??_envia_teste,w
  3229  000F' 0082'              	movwf	i1___awdiv@dividend
  3230  0010' 080A'              	movf	??_envia_teste+1,w
  3231  0011' 0083'              	movwf	i1___awdiv@dividend+1
  3232  0012' 2000'              	fcall	i1___awdiv
  3233  0013' 0800'              	movf	?i1___awdiv,w
  3234  0014' 3E30               	addlw	48
  3235  0015' 2000'              	fcall	_enviaDados
  3236                           
  3237                           ;comunication.c: 22: enviaDados(((Hora%10) + 48));
  3238  0016' 300A               	movlw	10
  3239  0017' 0080'              	movwf	i1___awmod@divisor
  3240  0018' 3000               	movlw	0
  3241  0019' 0081'              	movwf	i1___awmod@divisor+1
  3242  001A' 1283               	bcf	3,5	;RP0=0, select bank0
  3243  001B' 1303               	bcf	3,6	;RP1=0, select bank0
  3244  001C' 0800'              	movf	_Hora,w
  3245  001D' 0089'              	movwf	??_envia_teste
  3246  001E' 018A'              	clrf	??_envia_teste+1
  3247  001F' 0809'              	movf	??_envia_teste,w
  3248  0020' 0082'              	movwf	i1___awmod@dividend
  3249  0021' 080A'              	movf	??_envia_teste+1,w
  3250  0022' 0083'              	movwf	i1___awmod@dividend+1
  3251  0023' 2000'              	fcall	i1___awmod
  3252  0024' 0800'              	movf	?i1___awmod,w
  3253  0025' 3E30               	addlw	48
  3254  0026' 2000'              	fcall	_enviaDados
  3255                           
  3256                           ;comunication.c: 23: enviaDados(':');
  3257  0027' 303A               	movlw	58
  3258  0028' 2000'              	fcall	_enviaDados
  3259                           
  3260                           ;comunication.c: 24: enviaDados(((Min/10) + 48));
  3261  0029' 300A               	movlw	10
  3262  002A' 0080'              	movwf	i1___awdiv@divisor
  3263  002B' 3000               	movlw	0
  3264  002C' 0081'              	movwf	i1___awdiv@divisor+1
  3265  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  3266  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  3267  002F' 0801'              	movf	_Min,w
  3268  0030' 0089'              	movwf	??_envia_teste
  3269  0031' 018A'              	clrf	??_envia_teste+1
  3270  0032' 0809'              	movf	??_envia_teste,w
  3271  0033' 0082'              	movwf	i1___awdiv@dividend
  3272  0034' 080A'              	movf	??_envia_teste+1,w
  3273  0035' 0083'              	movwf	i1___awdiv@dividend+1
  3274  0036' 2000'              	fcall	i1___awdiv
  3275  0037' 0800'              	movf	?i1___awdiv,w
  3276  0038' 3E30               	addlw	48
  3277  0039' 2000'              	fcall	_enviaDados
  3278                           
  3279                           ;comunication.c: 25: enviaDados(((Min%10) + 48));
  3280  003A' 300A               	movlw	10
  3281  003B' 0080'              	movwf	i1___awmod@divisor
  3282  003C' 3000               	movlw	0
  3283  003D' 0081'              	movwf	i1___awmod@divisor+1
  3284  003E' 1283               	bcf	3,5	;RP0=0, select bank0
  3285  003F' 1303               	bcf	3,6	;RP1=0, select bank0
  3286  0040' 0801'              	movf	_Min,w
  3287  0041' 0089'              	movwf	??_envia_teste
  3288  0042' 018A'              	clrf	??_envia_teste+1
  3289  0043' 0809'              	movf	??_envia_teste,w
  3290  0044' 0082'              	movwf	i1___awmod@dividend
  3291  0045' 080A'              	movf	??_envia_teste+1,w
  3292  0046' 0083'              	movwf	i1___awmod@dividend+1
  3293  0047' 2000'              	fcall	i1___awmod
  3294  0048' 0800'              	movf	?i1___awmod,w
  3295  0049' 3E30               	addlw	48
  3296  004A' 2000'              	fcall	_enviaDados
  3297                           
  3298                           ;comunication.c: 26: enviaDados(':');
  3299  004B' 303A               	movlw	58
  3300  004C' 2000'              	fcall	_enviaDados
  3301                           
  3302                           ;comunication.c: 27: enviaDados(((seg/10) + 48));
  3303  004D' 300A               	movlw	10
  3304  004E' 0080'              	movwf	i1___awdiv@divisor
  3305  004F' 3000               	movlw	0
  3306  0050' 0081'              	movwf	i1___awdiv@divisor+1
  3307  0051' 1283               	bcf	3,5	;RP0=0, select bank0
  3308  0052' 1303               	bcf	3,6	;RP1=0, select bank0
  3309  0053' 080A'              	movf	_seg,w
  3310  0054' 0089'              	movwf	??_envia_teste
  3311  0055' 018A'              	clrf	??_envia_teste+1
  3312  0056' 0809'              	movf	??_envia_teste,w
  3313  0057' 0082'              	movwf	i1___awdiv@dividend
  3314  0058' 080A'              	movf	??_envia_teste+1,w
  3315  0059' 0083'              	movwf	i1___awdiv@dividend+1
  3316  005A' 2000'              	fcall	i1___awdiv
  3317  005B' 0800'              	movf	?i1___awdiv,w
  3318  005C' 3E30               	addlw	48
  3319  005D' 2000'              	fcall	_enviaDados
  3320                           
  3321                           ;comunication.c: 28: enviaDados(((seg%10) + 48));
  3322  005E' 300A               	movlw	10
  3323  005F' 0080'              	movwf	i1___awmod@divisor
  3324  0060' 3000               	movlw	0
  3325  0061' 0081'              	movwf	i1___awmod@divisor+1
  3326  0062' 1283               	bcf	3,5	;RP0=0, select bank0
  3327  0063' 1303               	bcf	3,6	;RP1=0, select bank0
  3328  0064' 080A'              	movf	_seg,w
  3329  0065' 0089'              	movwf	??_envia_teste
  3330  0066' 018A'              	clrf	??_envia_teste+1
  3331  0067' 0809'              	movf	??_envia_teste,w
  3332  0068' 0082'              	movwf	i1___awmod@dividend
  3333  0069' 080A'              	movf	??_envia_teste+1,w
  3334  006A' 0083'              	movwf	i1___awmod@dividend+1
  3335  006B' 2000'              	fcall	i1___awmod
  3336  006C' 0800'              	movf	?i1___awmod,w
  3337  006D' 3E30               	addlw	48
  3338  006E' 2000'              	fcall	_enviaDados
  3339                           
  3340                           ;comunication.c: 29: enviaDados('\n');
  3341  006F' 300A               	movlw	10
  3342  0070' 2000'              	fcall	_enviaDados
  3343  0071' 0008               	return
  3344  0072'                    __end_of_envia_teste:	
  3345                           
  3346                           	psect	text17
  3347  0000'                    __ptext17:	
  3348 ;; *************** function _envia_dados_da_memoria *****************
  3349 ;; Defined at:
  3350 ;;		line 119 in file "comunication.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  indice          1    7[COMMON] unsigned char 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3364 ;;      Params:         0       0       0       0
  3365 ;;      Locals:         1       0       0       0
  3366 ;;      Temps:          1       0       0       0
  3367 ;;      Totals:         2       0       0       0
  3368 ;;Total ram usage:        2 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    1
  3371 ;; This function calls:
  3372 ;;		_enviaDados
  3373 ;;		i1___bmul
  3374 ;; This function is called by:
  3375 ;;		_envia_teste
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           
  3380                           ;psect for function _envia_dados_da_memoria
  3381  0000'                    _envia_dados_da_memoria:	
  3382                           
  3383                           ;comunication.c: 121: char indice;
  3384                           ;comunication.c: 122: for(indice = 0; indice < 4; indice++)
  3385                           
  3386                           ;incstack = 0
  3387                           ; Regs used in _envia_dados_da_memoria: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3388  0000' 0187'              	clrf	envia_dados_da_memoria@indice
  3389  0001'                    L3:	
  3390  0001' 3004               	movlw	4
  3391  0002' 0207'              	subwf	envia_dados_da_memoria@indice,w
  3392  0003' 1803               	btfsc	3,0
  3393  0004' 0008               	return
  3394                           
  3395                           ;comunication.c: 123: {
  3396                           ;comunication.c: 124: enviaDados(remedio[indice].d_hora + 48);
  3397  0005' 3005               	movlw	5
  3398  0006' 0086'              	movwf	??_envia_dados_da_memoria
  3399  0007' 0806'              	movf	??_envia_dados_da_memoria,w
  3400  0008' 0082'              	movwf	i1___bmul@multiplicand
  3401  0009' 0807'              	movf	envia_dados_da_memoria@indice,w
  3402  000A' 2000'              	fcall	i1___bmul
  3403  000B' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3404  000C' 0084               	movwf	4
  3405  000D' 1383               	bcf	3,7	;select IRP bank1
  3406  000E' 0800               	movf	0,w
  3407  000F' 3E30               	addlw	48
  3408  0010' 2000'              	fcall	_enviaDados
  3409                           
  3410                           ;comunication.c: 125: enviaDados(remedio[indice].u_hora + 48);
  3411  0011' 3005               	movlw	5
  3412  0012' 0086'              	movwf	??_envia_dados_da_memoria
  3413  0013' 0806'              	movf	??_envia_dados_da_memoria,w
  3414  0014' 0082'              	movwf	i1___bmul@multiplicand
  3415  0015' 0807'              	movf	envia_dados_da_memoria@indice,w
  3416  0016' 2000'              	fcall	i1___bmul
  3417  0017' 3E01               	addlw	1
  3418  0018' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3419  0019' 0084               	movwf	4
  3420  001A' 1383               	bcf	3,7	;select IRP bank1
  3421  001B' 0800               	movf	0,w
  3422  001C' 3E30               	addlw	48
  3423  001D' 2000'              	fcall	_enviaDados
  3424                           
  3425                           ;comunication.c: 126: enviaDados(':');
  3426  001E' 303A               	movlw	58
  3427  001F' 2000'              	fcall	_enviaDados
  3428                           
  3429                           ;comunication.c: 127: enviaDados(remedio[indice].d_minuto + 48);
  3430  0020' 3005               	movlw	5
  3431  0021' 0086'              	movwf	??_envia_dados_da_memoria
  3432  0022' 0806'              	movf	??_envia_dados_da_memoria,w
  3433  0023' 0082'              	movwf	i1___bmul@multiplicand
  3434  0024' 0807'              	movf	envia_dados_da_memoria@indice,w
  3435  0025' 2000'              	fcall	i1___bmul
  3436  0026' 3E02               	addlw	2
  3437  0027' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3438  0028' 0084               	movwf	4
  3439  0029' 1383               	bcf	3,7	;select IRP bank1
  3440  002A' 0800               	movf	0,w
  3441  002B' 3E30               	addlw	48
  3442  002C' 2000'              	fcall	_enviaDados
  3443                           
  3444                           ;comunication.c: 128: enviaDados(remedio[indice].u_minuto + 48);
  3445  002D' 3005               	movlw	5
  3446  002E' 0086'              	movwf	??_envia_dados_da_memoria
  3447  002F' 0806'              	movf	??_envia_dados_da_memoria,w
  3448  0030' 0082'              	movwf	i1___bmul@multiplicand
  3449  0031' 0807'              	movf	envia_dados_da_memoria@indice,w
  3450  0032' 2000'              	fcall	i1___bmul
  3451  0033' 3E03               	addlw	3
  3452  0034' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3453  0035' 0084               	movwf	4
  3454  0036' 1383               	bcf	3,7	;select IRP bank1
  3455  0037' 0800               	movf	0,w
  3456  0038' 3E30               	addlw	48
  3457  0039' 2000'              	fcall	_enviaDados
  3458                           
  3459                           ;comunication.c: 129: enviaDados('\t');
  3460  003A' 3009               	movlw	9
  3461  003B' 2000'              	fcall	_enviaDados
  3462  003C' 3001               	movlw	1
  3463  003D' 0086'              	movwf	??_envia_dados_da_memoria
  3464  003E' 0806'              	movf	??_envia_dados_da_memoria,w
  3465  003F' 0787'              	addwf	envia_dados_da_memoria@indice,f
  3466  0040' 2801'              	goto	L3
  3467  0041'                    __end_of_envia_dados_da_memoria:	
  3468                           
  3469                           	psect	text18
  3470  0000'                    __ptext18:	
  3471 ;; *************** function _enviaDados *****************
  3472 ;; Defined at:
  3473 ;;		line 4 in file "comunication.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  dados           1    wreg     unsigned char 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  dados           1    0[COMMON] unsigned char 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3487 ;;      Params:         0       0       0       0
  3488 ;;      Locals:         1       0       0       0
  3489 ;;      Temps:          0       0       0       0
  3490 ;;      Totals:         1       0       0       0
  3491 ;;Total ram usage:        1 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_envia_teste
  3497 ;;		_envia_dados_da_memoria
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           
  3502                           ;psect for function _enviaDados
  3503  0000'                    _enviaDados:	
  3504                           
  3505                           ;incstack = 0
  3506                           ; Regs used in _enviaDados: [wreg]
  3507                           ;enviaDados@dados stored from wreg
  3508  0000' 0080'              	movwf	enviaDados@dados
  3509  0001'                    i1l126:	
  3510                           ;comunication.c: 6: while(!TXIF);
  3511                           
  3512  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  3513  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  3514  0003' 1E0C               	btfss	12,4	;volatile
  3515  0004' 2801'              	goto	i1l126
  3516                           
  3517                           ;comunication.c: 7: TXREG = dados;
  3518  0005' 0800'              	movf	enviaDados@dados,w
  3519  0006' 0099               	movwf	25	;volatile
  3520  0007' 0008               	return
  3521  0008'                    __end_of_enviaDados:	
  3522                           
  3523                           	psect	text19
  3524  0000'                    __ptext19:	
  3525 ;; *************** function _comunica *****************
  3526 ;; Defined at:
  3527 ;;		line 32 in file "comunication.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;		None
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;		None
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      void 
  3534 ;; Registers used:
  3535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3541 ;;      Params:         0       0       0       0
  3542 ;;      Locals:         0       1       0       0
  3543 ;;      Temps:          0       4       0       0
  3544 ;;      Totals:         0       5       0       0
  3545 ;;Total ram usage:        5 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    2
  3548 ;; This function calls:
  3549 ;;		_atualiza_relogio_blue
  3550 ;;		i1___awdiv
  3551 ;;		i1___awmod
  3552 ;;		i1___bmul
  3553 ;;		i1_grava_eeprom
  3554 ;; This function is called by:
  3555 ;;		_serial
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           
  3560                           ;psect for function _comunica
  3561  0000'                    _comunica:	
  3562                           
  3563                           ;comunication.c: 34: if(string[0] == 'R')
  3564                           
  3565                           ;incstack = 0
  3566                           ; Regs used in _comunica: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3567  0000' 3052               	movlw	82
  3568  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  3569  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  3570  0003' 0600'              	xorwf	_string,w
  3571  0004' 1D03               	btfss	3,2
  3572  0005' 2808'              	goto	i1l1854
  3573                           
  3574                           ;comunication.c: 35: {
  3575                           ;comunication.c: 36: atualiza_relogio_blue();
  3576  0006' 2000'              	fcall	_atualiza_relogio_blue
  3577                           
  3578                           ;comunication.c: 37: return;
  3579  0007' 0008               	return
  3580  0008'                    i1l1854:	
  3581                           
  3582                           ;comunication.c: 38: }
  3583                           ;comunication.c: 41: i = string[0] - 48;
  3584  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  3585  0009' 1303               	bcf	3,6	;RP1=0, select bank0
  3586  000A' 0800'              	movf	_string,w
  3587  000B' 3ED0               	addlw	208
  3588  000C' 0084'              	movwf	??_comunica
  3589  000D' 0804'              	movf	??_comunica,w
  3590  000E' 0091'              	movwf	_i
  3591                           
  3592                           ;comunication.c: 44: remedio[i].d_hora = (string[1] - 48);
  3593  000F' 0801'              	movf	_string+1,w
  3594  0010' 3ED0               	addlw	208
  3595  0011' 0084'              	movwf	??_comunica
  3596  0012' 3005               	movlw	5
  3597  0013' 0085'              	movwf	??_comunica+1
  3598  0014' 0805'              	movf	??_comunica+1,w
  3599  0015' 0082'              	movwf	i1___bmul@multiplicand
  3600  0016' 0811'              	movf	_i,w
  3601  0017' 2000'              	fcall	i1___bmul
  3602  0018' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3603  0019' 0084               	movwf	4
  3604  001A' 1283               	bcf	3,5	;RP0=0, select bank0
  3605  001B' 1303               	bcf	3,6	;RP1=0, select bank0
  3606  001C' 0804'              	movf	??_comunica,w
  3607  001D' 1383               	bcf	3,7	;select IRP bank1
  3608  001E' 0080               	movwf	0
  3609                           
  3610                           ;comunication.c: 45: remedio[i].u_hora = (string[2] - 48);
  3611  001F' 0802'              	movf	_string+2,w
  3612  0020' 3ED0               	addlw	208
  3613  0021' 0084'              	movwf	??_comunica
  3614  0022' 3005               	movlw	5
  3615  0023' 0085'              	movwf	??_comunica+1
  3616  0024' 0805'              	movf	??_comunica+1,w
  3617  0025' 0082'              	movwf	i1___bmul@multiplicand
  3618  0026' 0811'              	movf	_i,w
  3619  0027' 2000'              	fcall	i1___bmul
  3620  0028' 3E01               	addlw	1
  3621  0029' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3622  002A' 0084               	movwf	4
  3623  002B' 1283               	bcf	3,5	;RP0=0, select bank0
  3624  002C' 1303               	bcf	3,6	;RP1=0, select bank0
  3625  002D' 0804'              	movf	??_comunica,w
  3626  002E' 1383               	bcf	3,7	;select IRP bank1
  3627  002F' 0080               	movwf	0
  3628                           
  3629                           ;comunication.c: 46: remedio[i].passo = ((remedio[i].d_hora * 10) + remedio[i].u_hora);
  3630  0030' 3005               	movlw	5
  3631  0031' 0084'              	movwf	??_comunica
  3632  0032' 0804'              	movf	??_comunica,w
  3633  0033' 0082'              	movwf	i1___bmul@multiplicand
  3634  0034' 0811'              	movf	_i,w
  3635  0035' 2000'              	fcall	i1___bmul
  3636  0036' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3637  0037' 0084               	movwf	4
  3638  0038' 1383               	bcf	3,7	;select IRP bank1
  3639  0039' 0800               	movf	0,w
  3640  003A' 1283               	bcf	3,5	;RP0=0, select bank0
  3641  003B' 1303               	bcf	3,6	;RP1=0, select bank0
  3642  003C' 0085'              	movwf	??_comunica+1
  3643  003D' 0805'              	movf	??_comunica+1,w
  3644  003E' 0088'              	movwf	_comunica$760
  3645                           
  3646                           ;comunication.c: 46: remedio[i].passo = ((remedio[i].d_hora * 10) + remedio[i].u_hora);
  3647  003F' 3005               	movlw	5
  3648  0040' 0084'              	movwf	??_comunica
  3649  0041' 0804'              	movf	??_comunica,w
  3650  0042' 0082'              	movwf	i1___bmul@multiplicand
  3651  0043' 0811'              	movf	_i,w
  3652  0044' 2000'              	fcall	i1___bmul
  3653  0045' 3E01               	addlw	1
  3654  0046' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3655  0047' 0084               	movwf	4
  3656  0048' 300A               	movlw	10
  3657  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  3658  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  3659  004B' 0085'              	movwf	??_comunica+1
  3660  004C' 0805'              	movf	??_comunica+1,w
  3661  004D' 0082'              	movwf	i1___bmul@multiplicand
  3662  004E' 0808'              	movf	_comunica$760,w
  3663  004F' 2000'              	fcall	i1___bmul
  3664  0050' 1383               	bcf	3,7	;select IRP bank1
  3665  0051' 0700               	addwf	0,w
  3666  0052' 1283               	bcf	3,5	;RP0=0, select bank0
  3667  0053' 1303               	bcf	3,6	;RP1=0, select bank0
  3668  0054' 0086'              	movwf	??_comunica+2
  3669  0055' 3005               	movlw	5
  3670  0056' 0087'              	movwf	??_comunica+3
  3671  0057' 0807'              	movf	??_comunica+3,w
  3672  0058' 0082'              	movwf	i1___bmul@multiplicand
  3673  0059' 0811'              	movf	_i,w
  3674  005A' 2000'              	fcall	i1___bmul
  3675  005B' 3E04               	addlw	4
  3676  005C' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3677  005D' 0084               	movwf	4
  3678  005E' 1283               	bcf	3,5	;RP0=0, select bank0
  3679  005F' 1303               	bcf	3,6	;RP1=0, select bank0
  3680  0060' 0806'              	movf	??_comunica+2,w
  3681  0061' 1383               	bcf	3,7	;select IRP bank1
  3682  0062' 0080               	movwf	0
  3683                           
  3684                           ;comunication.c: 47: grava_eeprom(add_passo + i, remedio[i].passo);
  3685  0063' 0800'              	movf	_add_passo,w
  3686  0064' 0711'              	addwf	_i,w
  3687  0065' 0089'              	movwf	i1grava_eeprom@address
  3688  0066' 018A'              	clrf	i1grava_eeprom@address+1
  3689  0067' 0D8A'              	rlf	i1grava_eeprom@address+1,f
  3690  0068' 3005               	movlw	5
  3691  0069' 0084'              	movwf	??_comunica
  3692  006A' 0804'              	movf	??_comunica,w
  3693  006B' 0082'              	movwf	i1___bmul@multiplicand
  3694  006C' 0811'              	movf	_i,w
  3695  006D' 2000'              	fcall	i1___bmul
  3696  006E' 3E04               	addlw	4
  3697  006F' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3698  0070' 0084               	movwf	4
  3699  0071' 1383               	bcf	3,7	;select IRP bank1
  3700  0072' 0800               	movf	0,w
  3701  0073' 1283               	bcf	3,5	;RP0=0, select bank0
  3702  0074' 1303               	bcf	3,6	;RP1=0, select bank0
  3703  0075' 0085'              	movwf	??_comunica+1
  3704  0076' 0805'              	movf	??_comunica+1,w
  3705  0077' 008B'              	movwf	i1grava_eeprom@data
  3706  0078' 2000'              	fcall	i1_grava_eeprom
  3707                           
  3708                           ;comunication.c: 48: dado = remedio[i].passo + Hora;
  3709  0079' 3005               	movlw	5
  3710  007A' 1283               	bcf	3,5	;RP0=0, select bank0
  3711  007B' 1303               	bcf	3,6	;RP1=0, select bank0
  3712  007C' 0084'              	movwf	??_comunica
  3713  007D' 0804'              	movf	??_comunica,w
  3714  007E' 0082'              	movwf	i1___bmul@multiplicand
  3715  007F' 0811'              	movf	_i,w
  3716  0080' 2000'              	fcall	i1___bmul
  3717  0081' 3E04               	addlw	4
  3718  0082' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3719  0083' 0084               	movwf	4
  3720  0084' 1283               	bcf	3,5	;RP0=0, select bank0
  3721  0085' 1303               	bcf	3,6	;RP1=0, select bank0
  3722  0086' 0800'              	movf	_Hora,w
  3723  0087' 1383               	bcf	3,7	;select IRP bank1
  3724  0088' 0700               	addwf	0,w
  3725  0089' 0085'              	movwf	??_comunica+1
  3726  008A' 0805'              	movf	??_comunica+1,w
  3727  008B' 008D'              	movwf	_dado
  3728                           
  3729                           ;comunication.c: 49: if( dado > 23)
  3730  008C' 3018               	movlw	24
  3731  008D' 020D'              	subwf	_dado,w
  3732  008E' 1C03               	skipc
  3733  008F' 2895'              	goto	i1l1872
  3734                           
  3735                           ;comunication.c: 50: {
  3736                           ;comunication.c: 51: dado = dado - 24;
  3737  0090' 080D'              	movf	_dado,w
  3738  0091' 3EE8               	addlw	232
  3739  0092' 0084'              	movwf	??_comunica
  3740  0093' 0804'              	movf	??_comunica,w
  3741  0094' 008D'              	movwf	_dado
  3742  0095'                    i1l1872:	
  3743                           
  3744                           ;comunication.c: 52: }
  3745                           ;comunication.c: 53: grava_eeprom((add_d_hora + i), dado/10);
  3746  0095' 0809'              	movf	_add_d_hora,w
  3747  0096' 0711'              	addwf	_i,w
  3748  0097' 0089'              	movwf	i1grava_eeprom@address
  3749  0098' 018A'              	clrf	i1grava_eeprom@address+1
  3750  0099' 0D8A'              	rlf	i1grava_eeprom@address+1,f
  3751  009A' 300A               	movlw	10
  3752  009B' 0080'              	movwf	i1___awdiv@divisor
  3753  009C' 3000               	movlw	0
  3754  009D' 0081'              	movwf	i1___awdiv@divisor+1
  3755  009E' 080D'              	movf	_dado,w
  3756  009F' 0084'              	movwf	??_comunica
  3757  00A0' 0185'              	clrf	??_comunica+1
  3758  00A1' 0804'              	movf	??_comunica,w
  3759  00A2' 0082'              	movwf	i1___awdiv@dividend
  3760  00A3' 0805'              	movf	??_comunica+1,w
  3761  00A4' 0083'              	movwf	i1___awdiv@dividend+1
  3762  00A5' 2000'              	fcall	i1___awdiv
  3763  00A6' 0800'              	movf	?i1___awdiv,w
  3764  00A7' 1283               	bcf	3,5	;RP0=0, select bank0
  3765  00A8' 1303               	bcf	3,6	;RP1=0, select bank0
  3766  00A9' 0086'              	movwf	??_comunica+2
  3767  00AA' 0806'              	movf	??_comunica+2,w
  3768  00AB' 008B'              	movwf	i1grava_eeprom@data
  3769  00AC' 2000'              	fcall	i1_grava_eeprom
  3770                           
  3771                           ;comunication.c: 54: grava_eeprom((add_u_hora + i), dado%10);
  3772  00AD' 1283               	bcf	3,5	;RP0=0, select bank0
  3773  00AE' 1303               	bcf	3,6	;RP1=0, select bank0
  3774  00AF' 0803'              	movf	_add_u_hora,w
  3775  00B0' 0711'              	addwf	_i,w
  3776  00B1' 0089'              	movwf	i1grava_eeprom@address
  3777  00B2' 018A'              	clrf	i1grava_eeprom@address+1
  3778  00B3' 0D8A'              	rlf	i1grava_eeprom@address+1,f
  3779  00B4' 300A               	movlw	10
  3780  00B5' 0080'              	movwf	i1___awmod@divisor
  3781  00B6' 3000               	movlw	0
  3782  00B7' 0081'              	movwf	i1___awmod@divisor+1
  3783  00B8' 080D'              	movf	_dado,w
  3784  00B9' 0084'              	movwf	??_comunica
  3785  00BA' 0185'              	clrf	??_comunica+1
  3786  00BB' 0804'              	movf	??_comunica,w
  3787  00BC' 0082'              	movwf	i1___awmod@dividend
  3788  00BD' 0805'              	movf	??_comunica+1,w
  3789  00BE' 0083'              	movwf	i1___awmod@dividend+1
  3790  00BF' 2000'              	fcall	i1___awmod
  3791  00C0' 0800'              	movf	?i1___awmod,w
  3792  00C1' 1283               	bcf	3,5	;RP0=0, select bank0
  3793  00C2' 1303               	bcf	3,6	;RP1=0, select bank0
  3794  00C3' 0086'              	movwf	??_comunica+2
  3795  00C4' 0806'              	movf	??_comunica+2,w
  3796  00C5' 008B'              	movwf	i1grava_eeprom@data
  3797  00C6' 2000'              	fcall	i1_grava_eeprom
  3798                           
  3799                           ;comunication.c: 55: remedio[i].d_hora = dado/10;
  3800  00C7' 300A               	movlw	10
  3801  00C8' 0080'              	movwf	i1___awdiv@divisor
  3802  00C9' 3000               	movlw	0
  3803  00CA' 0081'              	movwf	i1___awdiv@divisor+1
  3804  00CB' 1283               	bcf	3,5	;RP0=0, select bank0
  3805  00CC' 1303               	bcf	3,6	;RP1=0, select bank0
  3806  00CD' 080D'              	movf	_dado,w
  3807  00CE' 0084'              	movwf	??_comunica
  3808  00CF' 0185'              	clrf	??_comunica+1
  3809  00D0' 0804'              	movf	??_comunica,w
  3810  00D1' 0082'              	movwf	i1___awdiv@dividend
  3811  00D2' 0805'              	movf	??_comunica+1,w
  3812  00D3' 0083'              	movwf	i1___awdiv@dividend+1
  3813  00D4' 2000'              	fcall	i1___awdiv
  3814  00D5' 0800'              	movf	?i1___awdiv,w
  3815  00D6' 1283               	bcf	3,5	;RP0=0, select bank0
  3816  00D7' 1303               	bcf	3,6	;RP1=0, select bank0
  3817  00D8' 0086'              	movwf	??_comunica+2
  3818  00D9' 3005               	movlw	5
  3819  00DA' 0087'              	movwf	??_comunica+3
  3820  00DB' 0807'              	movf	??_comunica+3,w
  3821  00DC' 0082'              	movwf	i1___bmul@multiplicand
  3822  00DD' 0811'              	movf	_i,w
  3823  00DE' 2000'              	fcall	i1___bmul
  3824  00DF' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3825  00E0' 0084               	movwf	4
  3826  00E1' 1283               	bcf	3,5	;RP0=0, select bank0
  3827  00E2' 1303               	bcf	3,6	;RP1=0, select bank0
  3828  00E3' 0806'              	movf	??_comunica+2,w
  3829  00E4' 1383               	bcf	3,7	;select IRP bank1
  3830  00E5' 0080               	movwf	0
  3831                           
  3832                           ;comunication.c: 56: remedio[i].u_hora = dado%10;
  3833  00E6' 300A               	movlw	10
  3834  00E7' 0080'              	movwf	i1___awmod@divisor
  3835  00E8' 3000               	movlw	0
  3836  00E9' 0081'              	movwf	i1___awmod@divisor+1
  3837  00EA' 080D'              	movf	_dado,w
  3838  00EB' 0084'              	movwf	??_comunica
  3839  00EC' 0185'              	clrf	??_comunica+1
  3840  00ED' 0804'              	movf	??_comunica,w
  3841  00EE' 0082'              	movwf	i1___awmod@dividend
  3842  00EF' 0805'              	movf	??_comunica+1,w
  3843  00F0' 0083'              	movwf	i1___awmod@dividend+1
  3844  00F1' 2000'              	fcall	i1___awmod
  3845  00F2' 0800'              	movf	?i1___awmod,w
  3846  00F3' 1283               	bcf	3,5	;RP0=0, select bank0
  3847  00F4' 1303               	bcf	3,6	;RP1=0, select bank0
  3848  00F5' 0086'              	movwf	??_comunica+2
  3849  00F6' 3005               	movlw	5
  3850  00F7' 0087'              	movwf	??_comunica+3
  3851  00F8' 0807'              	movf	??_comunica+3,w
  3852  00F9' 0082'              	movwf	i1___bmul@multiplicand
  3853  00FA' 0811'              	movf	_i,w
  3854  00FB' 2000'              	fcall	i1___bmul
  3855  00FC' 3E01               	addlw	1
  3856  00FD' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3857  00FE' 0084               	movwf	4
  3858  00FF' 1283               	bcf	3,5	;RP0=0, select bank0
  3859  0100' 1303               	bcf	3,6	;RP1=0, select bank0
  3860  0101' 0806'              	movf	??_comunica+2,w
  3861  0102' 1383               	bcf	3,7	;select IRP bank1
  3862  0103' 0080               	movwf	0
  3863                           
  3864                           ;comunication.c: 57: grava_eeprom((add_d_minuto + i), Min/10);
  3865  0104' 0802'              	movf	_add_d_minuto,w
  3866  0105' 0711'              	addwf	_i,w
  3867  0106' 0089'              	movwf	i1grava_eeprom@address
  3868  0107' 018A'              	clrf	i1grava_eeprom@address+1
  3869  0108' 0D8A'              	rlf	i1grava_eeprom@address+1,f
  3870  0109' 300A               	movlw	10
  3871  010A' 0080'              	movwf	i1___awdiv@divisor
  3872  010B' 3000               	movlw	0
  3873  010C' 0081'              	movwf	i1___awdiv@divisor+1
  3874  010D' 0801'              	movf	_Min,w
  3875  010E' 0084'              	movwf	??_comunica
  3876  010F' 0185'              	clrf	??_comunica+1
  3877  0110' 0804'              	movf	??_comunica,w
  3878  0111' 0082'              	movwf	i1___awdiv@dividend
  3879  0112' 0805'              	movf	??_comunica+1,w
  3880  0113' 0083'              	movwf	i1___awdiv@dividend+1
  3881  0114' 2000'              	fcall	i1___awdiv
  3882  0115' 0800'              	movf	?i1___awdiv,w
  3883  0116' 1283               	bcf	3,5	;RP0=0, select bank0
  3884  0117' 1303               	bcf	3,6	;RP1=0, select bank0
  3885  0118' 0086'              	movwf	??_comunica+2
  3886  0119' 0806'              	movf	??_comunica+2,w
  3887  011A' 008B'              	movwf	i1grava_eeprom@data
  3888  011B' 2000'              	fcall	i1_grava_eeprom
  3889                           
  3890                           ;comunication.c: 58: grava_eeprom((add_u_minuto + i), Min%10);
  3891  011C' 1283               	bcf	3,5	;RP0=0, select bank0
  3892  011D' 1303               	bcf	3,6	;RP1=0, select bank0
  3893  011E' 0801'              	movf	_add_u_minuto,w
  3894  011F' 0711'              	addwf	_i,w
  3895  0120' 0089'              	movwf	i1grava_eeprom@address
  3896  0121' 018A'              	clrf	i1grava_eeprom@address+1
  3897  0122' 0D8A'              	rlf	i1grava_eeprom@address+1,f
  3898  0123' 300A               	movlw	10
  3899  0124' 0080'              	movwf	i1___awmod@divisor
  3900  0125' 3000               	movlw	0
  3901  0126' 0081'              	movwf	i1___awmod@divisor+1
  3902  0127' 0801'              	movf	_Min,w
  3903  0128' 0084'              	movwf	??_comunica
  3904  0129' 0185'              	clrf	??_comunica+1
  3905  012A' 0804'              	movf	??_comunica,w
  3906  012B' 0082'              	movwf	i1___awmod@dividend
  3907  012C' 0805'              	movf	??_comunica+1,w
  3908  012D' 0083'              	movwf	i1___awmod@dividend+1
  3909  012E' 2000'              	fcall	i1___awmod
  3910  012F' 0800'              	movf	?i1___awmod,w
  3911  0130' 1283               	bcf	3,5	;RP0=0, select bank0
  3912  0131' 1303               	bcf	3,6	;RP1=0, select bank0
  3913  0132' 0086'              	movwf	??_comunica+2
  3914  0133' 0806'              	movf	??_comunica+2,w
  3915  0134' 008B'              	movwf	i1grava_eeprom@data
  3916  0135' 2000'              	fcall	i1_grava_eeprom
  3917                           
  3918                           ;comunication.c: 59: remedio[i].d_minuto = Min/10;
  3919  0136' 300A               	movlw	10
  3920  0137' 0080'              	movwf	i1___awdiv@divisor
  3921  0138' 3000               	movlw	0
  3922  0139' 0081'              	movwf	i1___awdiv@divisor+1
  3923  013A' 1283               	bcf	3,5	;RP0=0, select bank0
  3924  013B' 1303               	bcf	3,6	;RP1=0, select bank0
  3925  013C' 0801'              	movf	_Min,w
  3926  013D' 0084'              	movwf	??_comunica
  3927  013E' 0185'              	clrf	??_comunica+1
  3928  013F' 0804'              	movf	??_comunica,w
  3929  0140' 0082'              	movwf	i1___awdiv@dividend
  3930  0141' 0805'              	movf	??_comunica+1,w
  3931  0142' 0083'              	movwf	i1___awdiv@dividend+1
  3932  0143' 2000'              	fcall	i1___awdiv
  3933  0144' 0800'              	movf	?i1___awdiv,w
  3934  0145' 1283               	bcf	3,5	;RP0=0, select bank0
  3935  0146' 1303               	bcf	3,6	;RP1=0, select bank0
  3936  0147' 0086'              	movwf	??_comunica+2
  3937  0148' 3005               	movlw	5
  3938  0149' 0087'              	movwf	??_comunica+3
  3939  014A' 0807'              	movf	??_comunica+3,w
  3940  014B' 0082'              	movwf	i1___bmul@multiplicand
  3941  014C' 0811'              	movf	_i,w
  3942  014D' 2000'              	fcall	i1___bmul
  3943  014E' 3E02               	addlw	2
  3944  014F' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3945  0150' 0084               	movwf	4
  3946  0151' 1283               	bcf	3,5	;RP0=0, select bank0
  3947  0152' 1303               	bcf	3,6	;RP1=0, select bank0
  3948  0153' 0806'              	movf	??_comunica+2,w
  3949  0154' 1383               	bcf	3,7	;select IRP bank1
  3950  0155' 0080               	movwf	0
  3951                           
  3952                           ;comunication.c: 60: remedio[i].u_minuto = Min%10;
  3953  0156' 300A               	movlw	10
  3954  0157' 0080'              	movwf	i1___awmod@divisor
  3955  0158' 3000               	movlw	0
  3956  0159' 0081'              	movwf	i1___awmod@divisor+1
  3957  015A' 0801'              	movf	_Min,w
  3958  015B' 0084'              	movwf	??_comunica
  3959  015C' 0185'              	clrf	??_comunica+1
  3960  015D' 0804'              	movf	??_comunica,w
  3961  015E' 0082'              	movwf	i1___awmod@dividend
  3962  015F' 0805'              	movf	??_comunica+1,w
  3963  0160' 0083'              	movwf	i1___awmod@dividend+1
  3964  0161' 2000'              	fcall	i1___awmod
  3965  0162' 0800'              	movf	?i1___awmod,w
  3966  0163' 1283               	bcf	3,5	;RP0=0, select bank0
  3967  0164' 1303               	bcf	3,6	;RP1=0, select bank0
  3968  0165' 0086'              	movwf	??_comunica+2
  3969  0166' 3005               	movlw	5
  3970  0167' 0087'              	movwf	??_comunica+3
  3971  0168' 0807'              	movf	??_comunica+3,w
  3972  0169' 0082'              	movwf	i1___bmul@multiplicand
  3973  016A' 0811'              	movf	_i,w
  3974  016B' 2000'              	fcall	i1___bmul
  3975  016C' 3E03               	addlw	3
  3976  016D' 3E00'              	addlw	(low (_remedio| 0))& (0+255)
  3977  016E' 0084               	movwf	4
  3978  016F' 1283               	bcf	3,5	;RP0=0, select bank0
  3979  0170' 1303               	bcf	3,6	;RP1=0, select bank0
  3980  0171' 0806'              	movf	??_comunica+2,w
  3981  0172' 1383               	bcf	3,7	;select IRP bank1
  3982  0173' 0080               	movwf	0
  3983                           
  3984                           ;comunication.c: 61: pendencia_remedio[i] = 1;
  3985  0174' 0811'              	movf	_i,w
  3986  0175' 3E00'              	addlw	(low (_pendencia_remedio| 0))& (0+255)
  3987  0176' 0084               	movwf	4
  3988  0177' 0180               	clrf	0
  3989  0178' 0A80               	incf	0,f
  3990                           
  3991                           ;comunication.c: 62: libera = 1;
  3992  0179' 018F'              	clrf	_libera
  3993  017A' 0A8F'              	incf	_libera,f
  3994  017B' 0008               	return
  3995  017C'                    __end_of_comunica:	
  3996                           
  3997                           	psect	text20
  3998  0000'                    __ptext20:	
  3999 ;; *************** function _atualiza_relogio_blue *****************
  4000 ;; Defined at:
  4001 ;;		line 108 in file "logicSystem.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;		None
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  i               1    3[BANK0 ] unsigned char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      void 
  4008 ;; Registers used:
  4009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4015 ;;      Params:         0       0       0       0
  4016 ;;      Locals:         0       1       0       0
  4017 ;;      Temps:          0       3       0       0
  4018 ;;      Totals:         0       4       0       0
  4019 ;;Total ram usage:        4 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    1
  4022 ;; This function calls:
  4023 ;;		i1___bmul
  4024 ;;		i1_grava_eeprom
  4025 ;;		i1_le_eeprom
  4026 ;; This function is called by:
  4027 ;;		_comunica
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           
  4032                           ;psect for function _atualiza_relogio_blue
  4033  0000'                    _atualiza_relogio_blue:	
  4034                           
  4035                           ;logicSystem.c: 110: char i;
  4036                           ;logicSystem.c: 111: for(i = 1; i < 5; i++)
  4037                           
  4038                           ;incstack = 0
  4039                           ; Regs used in _atualiza_relogio_blue: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4040  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4041  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4042  0002' 0183'              	clrf	atualiza_relogio_blue@i
  4043  0003' 0A83'              	incf	atualiza_relogio_blue@i,f
  4044  0004' 3005               	movlw	5
  4045  0005' 0203'              	subwf	atualiza_relogio_blue@i,w
  4046  0006' 1803               	btfsc	3,0
  4047  0007' 2829'              	goto	i1l1648
  4048  0008'                    i1l1642:	
  4049                           
  4050                           ;logicSystem.c: 112: {
  4051                           ;logicSystem.c: 113: grava_eeprom(add_d_hora + 20 + i - 1, (string[i] - 48));
  4052  0008' 0809'              	movf	_add_d_hora,w
  4053  0009' 0703'              	addwf	atualiza_relogio_blue@i,w
  4054  000A' 0080'              	movwf	??_atualiza_relogio_blue
  4055  000B' 0181'              	clrf	??_atualiza_relogio_blue+1
  4056  000C' 0D81'              	rlf	??_atualiza_relogio_blue+1,f
  4057  000D' 0800'              	movf	??_atualiza_relogio_blue,w
  4058  000E' 3E13               	addlw	19
  4059  000F' 0089'              	movwf	i1grava_eeprom@address
  4060  0010' 0801'              	movf	??_atualiza_relogio_blue+1,w
  4061  0011' 1803               	skipnc
  4062  0012' 3E01               	addlw	1
  4063  0013' 3E00               	addlw	0
  4064  0014' 008A'              	movwf	i1grava_eeprom@address+1
  4065  0015' 0803'              	movf	atualiza_relogio_blue@i,w
  4066  0016' 3E00'              	addlw	(low (_string| 0))& (0+255)
  4067  0017' 0084               	movwf	4
  4068  0018' 1383               	bcf	3,7	;select IRP bank0
  4069  0019' 0800               	movf	0,w
  4070  001A' 3ED0               	addlw	208
  4071  001B' 0082'              	movwf	??_atualiza_relogio_blue+2
  4072  001C' 0802'              	movf	??_atualiza_relogio_blue+2,w
  4073  001D' 008B'              	movwf	i1grava_eeprom@data
  4074  001E' 2000'              	fcall	i1_grava_eeprom
  4075  001F' 3001               	movlw	1
  4076  0020' 1283               	bcf	3,5	;RP0=0, select bank0
  4077  0021' 1303               	bcf	3,6	;RP1=0, select bank0
  4078  0022' 0080'              	movwf	??_atualiza_relogio_blue
  4079  0023' 0800'              	movf	??_atualiza_relogio_blue,w
  4080  0024' 0783'              	addwf	atualiza_relogio_blue@i,f
  4081  0025' 3005               	movlw	5
  4082  0026' 0203'              	subwf	atualiza_relogio_blue@i,w
  4083  0027' 1C03               	skipc
  4084  0028' 2808'              	goto	i1l1642
  4085  0029'                    i1l1648:	
  4086                           
  4087                           ;logicSystem.c: 114: }
  4088                           ;logicSystem.c: 115: Hora = le_eeprom(add_d_hora + 20) * 10;
  4089  0029' 300A               	movlw	10
  4090  002A' 0080'              	movwf	??_atualiza_relogio_blue
  4091  002B' 0800'              	movf	??_atualiza_relogio_blue,w
  4092  002C' 0082'              	movwf	i1___bmul@multiplicand
  4093  002D' 0809'              	movf	_add_d_hora,w
  4094  002E' 3E14               	addlw	20
  4095  002F' 0080'              	movwf	i1le_eeprom@address
  4096  0030' 3000               	movlw	0
  4097  0031' 1803               	skipnc
  4098  0032' 3001               	movlw	1
  4099  0033' 0081'              	movwf	i1le_eeprom@address+1
  4100  0034' 2000'              	fcall	i1_le_eeprom
  4101  0035' 2000'              	fcall	i1___bmul
  4102  0036' 1283               	bcf	3,5	;RP0=0, select bank0
  4103  0037' 1303               	bcf	3,6	;RP1=0, select bank0
  4104  0038' 0081'              	movwf	??_atualiza_relogio_blue+1
  4105  0039' 0801'              	movf	??_atualiza_relogio_blue+1,w
  4106  003A' 0080'              	movwf	_Hora
  4107                           
  4108                           ;logicSystem.c: 116: Hora += le_eeprom(add_d_hora + 21);
  4109  003B' 0809'              	movf	_add_d_hora,w
  4110  003C' 3E15               	addlw	21
  4111  003D' 0080'              	movwf	i1le_eeprom@address
  4112  003E' 3000               	movlw	0
  4113  003F' 1803               	skipnc
  4114  0040' 3001               	movlw	1
  4115  0041' 0081'              	movwf	i1le_eeprom@address+1
  4116  0042' 2000'              	fcall	i1_le_eeprom
  4117  0043' 1283               	bcf	3,5	;RP0=0, select bank0
  4118  0044' 1303               	bcf	3,6	;RP1=0, select bank0
  4119  0045' 0080'              	movwf	??_atualiza_relogio_blue
  4120  0046' 0800'              	movf	??_atualiza_relogio_blue,w
  4121  0047' 0780'              	addwf	_Hora,f
  4122                           
  4123                           ;logicSystem.c: 117: Min = le_eeprom(add_d_hora + 22) * 10;
  4124  0048' 300A               	movlw	10
  4125  0049' 0080'              	movwf	??_atualiza_relogio_blue
  4126  004A' 0800'              	movf	??_atualiza_relogio_blue,w
  4127  004B' 0082'              	movwf	i1___bmul@multiplicand
  4128  004C' 0809'              	movf	_add_d_hora,w
  4129  004D' 3E16               	addlw	22
  4130  004E' 0080'              	movwf	i1le_eeprom@address
  4131  004F' 3000               	movlw	0
  4132  0050' 1803               	skipnc
  4133  0051' 3001               	movlw	1
  4134  0052' 0081'              	movwf	i1le_eeprom@address+1
  4135  0053' 2000'              	fcall	i1_le_eeprom
  4136  0054' 2000'              	fcall	i1___bmul
  4137  0055' 1283               	bcf	3,5	;RP0=0, select bank0
  4138  0056' 1303               	bcf	3,6	;RP1=0, select bank0
  4139  0057' 0081'              	movwf	??_atualiza_relogio_blue+1
  4140  0058' 0801'              	movf	??_atualiza_relogio_blue+1,w
  4141  0059' 0081'              	movwf	_Min
  4142                           
  4143                           ;logicSystem.c: 118: Min += le_eeprom(add_d_hora + 23);
  4144  005A' 0809'              	movf	_add_d_hora,w
  4145  005B' 3E17               	addlw	23
  4146  005C' 0080'              	movwf	i1le_eeprom@address
  4147  005D' 3000               	movlw	0
  4148  005E' 1803               	skipnc
  4149  005F' 3001               	movlw	1
  4150  0060' 0081'              	movwf	i1le_eeprom@address+1
  4151  0061' 2000'              	fcall	i1_le_eeprom
  4152  0062' 1283               	bcf	3,5	;RP0=0, select bank0
  4153  0063' 1303               	bcf	3,6	;RP1=0, select bank0
  4154  0064' 0080'              	movwf	??_atualiza_relogio_blue
  4155  0065' 0800'              	movf	??_atualiza_relogio_blue,w
  4156  0066' 0781'              	addwf	_Min,f
  4157  0067' 0008               	return
  4158  0068'                    __end_of_atualiza_relogio_blue:	
  4159                           
  4160                           	psect	text21
  4161  0000'                    __ptext21:	
  4162 ;; *************** function i1_le_eeprom *****************
  4163 ;; Defined at:
  4164 ;;		line 20 in file "memory.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  address         2    0[COMMON] int 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      unsigned char 
  4171 ;; Registers used:
  4172 ;;		wreg
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4178 ;;      Params:         2       0       0       0
  4179 ;;      Locals:         0       0       0       0
  4180 ;;      Temps:          0       0       0       0
  4181 ;;      Totals:         2       0       0       0
  4182 ;;Total ram usage:        2 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; This function calls:
  4185 ;;		Nothing
  4186 ;; This function is called by:
  4187 ;;		_atualiza_relogio_blue
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           
  4192                           ;psect for function i1_le_eeprom
  4193  0000'                    i1_le_eeprom:	
  4194                           
  4195                           ;memory.c: 22: EEADR = address;
  4196                           
  4197                           ;incstack = 0
  4198                           ; Regs used in i1_le_eeprom: [wreg]
  4199  0000' 0800'              	movf	i1le_eeprom@address,w
  4200  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  4201  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  4202  0003' 009B               	movwf	27	;volatile
  4203                           
  4204                           ;memory.c: 23: WREN = 0;
  4205  0004' 111C               	bcf	28,2	;volsfr
  4206                           
  4207                           ;memory.c: 24: RD = 1;
  4208  0005' 141C               	bsf	28,0	;volsfr
  4209                           
  4210                           ;memory.c: 25: return(EEDATA);
  4211  0006' 081A               	movf	26,w	;volatile
  4212  0007' 0008               	return
  4213  0008'                    __end_ofi1_le_eeprom:	
  4214                           
  4215                           	psect	text22
  4216  0000'                    __ptext22:	
  4217 ;; *************** function i1___bmul *****************
  4218 ;; Defined at:
  4219 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  multiplier      1    wreg     unsigned char 
  4222 ;;  multiplicand    1    2[COMMON] unsigned char 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  multiplier      1    5[COMMON] unsigned char 
  4225 ;;  __bmul          1    4[COMMON] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      unsigned char 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4235 ;;      Params:         1       0       0       0
  4236 ;;      Locals:         2       0       0       0
  4237 ;;      Temps:          1       0       0       0
  4238 ;;      Totals:         4       0       0       0
  4239 ;;Total ram usage:        4 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; This function calls:
  4242 ;;		Nothing
  4243 ;; This function is called by:
  4244 ;;		_comunica
  4245 ;;		_envia_dados_da_memoria
  4246 ;;		_verifica
  4247 ;;		_atualiza_relogio_blue
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           
  4252                           ;psect for function i1___bmul
  4253  0000'                    i1___bmul:	
  4254                           
  4255                           ;incstack = 0
  4256                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  4257                           ;i1___bmul@multiplier stored from wreg
  4258  0000' 0085'              	movwf	i1___bmul@multiplier
  4259  0001' 0184'              	clrf	i1___bmul@product
  4260  0002'                    i1l1564:	
  4261  0002' 1C05'              	btfss	i1___bmul@multiplier,0
  4262  0003' 2808'              	goto	i1l1568
  4263  0004' 0802'              	movf	i1___bmul@multiplicand,w
  4264  0005' 0083'              	movwf	??i1___bmul
  4265  0006' 0803'              	movf	??i1___bmul,w
  4266  0007' 0784'              	addwf	i1___bmul@product,f
  4267  0008'                    i1l1568:	
  4268  0008' 1003               	clrc
  4269  0009' 0D82'              	rlf	i1___bmul@multiplicand,f
  4270  000A' 1003               	clrc
  4271  000B' 0C85'              	rrf	i1___bmul@multiplier,f
  4272  000C' 0805'              	movf	i1___bmul@multiplier,w
  4273  000D' 1D03               	btfss	3,2
  4274  000E' 2802'              	goto	i1l1564
  4275  000F' 0804'              	movf	i1___bmul@product,w
  4276  0010' 0008               	return
  4277  0011'                    __end_ofi1___bmul:	
  4278                           
  4279                           	psect	text23
  4280  0000'                    __ptext23:	
  4281 ;; *************** function _cadastra_relogio *****************
  4282 ;; Defined at:
  4283 ;;		line 121 in file "logicSystem.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;		None
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0, pclath, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4297 ;;      Params:         0       0       0       0
  4298 ;;      Locals:         0       0       0       0
  4299 ;;      Temps:          0       3       0       0
  4300 ;;      Totals:         0       3       0       0
  4301 ;;Total ram usage:        3 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    1
  4304 ;; This function calls:
  4305 ;;		i1___awdiv
  4306 ;;		i1___awmod
  4307 ;;		i1_grava_eeprom
  4308 ;; This function is called by:
  4309 ;;		_serial
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           
  4314                           ;psect for function _cadastra_relogio
  4315  0000'                    _cadastra_relogio:	
  4316                           
  4317                           ;logicSystem.c: 123: grava_eeprom(add_d_hora + 20, Hora/10);
  4318                           
  4319                           ;incstack = 0
  4320                           ; Regs used in _cadastra_relogio: [wreg+status,2+status,0+pclath+cstack]
  4321  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4322  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4323  0002' 0809'              	movf	_add_d_hora,w
  4324  0003' 3E14               	addlw	20
  4325  0004' 0089'              	movwf	i1grava_eeprom@address
  4326  0005' 3000               	movlw	0
  4327  0006' 1803               	skipnc
  4328  0007' 3001               	movlw	1
  4329  0008' 008A'              	movwf	i1grava_eeprom@address+1
  4330  0009' 300A               	movlw	10
  4331  000A' 0080'              	movwf	i1___awdiv@divisor
  4332  000B' 3000               	movlw	0
  4333  000C' 0081'              	movwf	i1___awdiv@divisor+1
  4334  000D' 0800'              	movf	_Hora,w
  4335  000E' 0080'              	movwf	??_cadastra_relogio
  4336  000F' 0181'              	clrf	??_cadastra_relogio+1
  4337  0010' 0800'              	movf	??_cadastra_relogio,w
  4338  0011' 0082'              	movwf	i1___awdiv@dividend
  4339  0012' 0801'              	movf	??_cadastra_relogio+1,w
  4340  0013' 0083'              	movwf	i1___awdiv@dividend+1
  4341  0014' 2000'              	fcall	i1___awdiv
  4342  0015' 0800'              	movf	?i1___awdiv,w
  4343  0016' 1283               	bcf	3,5	;RP0=0, select bank0
  4344  0017' 1303               	bcf	3,6	;RP1=0, select bank0
  4345  0018' 0082'              	movwf	??_cadastra_relogio+2
  4346  0019' 0802'              	movf	??_cadastra_relogio+2,w
  4347  001A' 008B'              	movwf	i1grava_eeprom@data
  4348  001B' 2000'              	fcall	i1_grava_eeprom
  4349                           
  4350                           ;logicSystem.c: 124: grava_eeprom(add_d_hora + 21, Hora%10);
  4351  001C' 1283               	bcf	3,5	;RP0=0, select bank0
  4352  001D' 1303               	bcf	3,6	;RP1=0, select bank0
  4353  001E' 0809'              	movf	_add_d_hora,w
  4354  001F' 3E15               	addlw	21
  4355  0020' 0089'              	movwf	i1grava_eeprom@address
  4356  0021' 3000               	movlw	0
  4357  0022' 1803               	skipnc
  4358  0023' 3001               	movlw	1
  4359  0024' 008A'              	movwf	i1grava_eeprom@address+1
  4360  0025' 300A               	movlw	10
  4361  0026' 0080'              	movwf	i1___awmod@divisor
  4362  0027' 3000               	movlw	0
  4363  0028' 0081'              	movwf	i1___awmod@divisor+1
  4364  0029' 0800'              	movf	_Hora,w
  4365  002A' 0080'              	movwf	??_cadastra_relogio
  4366  002B' 0181'              	clrf	??_cadastra_relogio+1
  4367  002C' 0800'              	movf	??_cadastra_relogio,w
  4368  002D' 0082'              	movwf	i1___awmod@dividend
  4369  002E' 0801'              	movf	??_cadastra_relogio+1,w
  4370  002F' 0083'              	movwf	i1___awmod@dividend+1
  4371  0030' 2000'              	fcall	i1___awmod
  4372  0031' 0800'              	movf	?i1___awmod,w
  4373  0032' 1283               	bcf	3,5	;RP0=0, select bank0
  4374  0033' 1303               	bcf	3,6	;RP1=0, select bank0
  4375  0034' 0082'              	movwf	??_cadastra_relogio+2
  4376  0035' 0802'              	movf	??_cadastra_relogio+2,w
  4377  0036' 008B'              	movwf	i1grava_eeprom@data
  4378  0037' 2000'              	fcall	i1_grava_eeprom
  4379                           
  4380                           ;logicSystem.c: 125: grava_eeprom(add_d_hora + 22, Min/10);
  4381  0038' 1283               	bcf	3,5	;RP0=0, select bank0
  4382  0039' 1303               	bcf	3,6	;RP1=0, select bank0
  4383  003A' 0809'              	movf	_add_d_hora,w
  4384  003B' 3E16               	addlw	22
  4385  003C' 0089'              	movwf	i1grava_eeprom@address
  4386  003D' 3000               	movlw	0
  4387  003E' 1803               	skipnc
  4388  003F' 3001               	movlw	1
  4389  0040' 008A'              	movwf	i1grava_eeprom@address+1
  4390  0041' 300A               	movlw	10
  4391  0042' 0080'              	movwf	i1___awdiv@divisor
  4392  0043' 3000               	movlw	0
  4393  0044' 0081'              	movwf	i1___awdiv@divisor+1
  4394  0045' 0801'              	movf	_Min,w
  4395  0046' 0080'              	movwf	??_cadastra_relogio
  4396  0047' 0181'              	clrf	??_cadastra_relogio+1
  4397  0048' 0800'              	movf	??_cadastra_relogio,w
  4398  0049' 0082'              	movwf	i1___awdiv@dividend
  4399  004A' 0801'              	movf	??_cadastra_relogio+1,w
  4400  004B' 0083'              	movwf	i1___awdiv@dividend+1
  4401  004C' 2000'              	fcall	i1___awdiv
  4402  004D' 0800'              	movf	?i1___awdiv,w
  4403  004E' 1283               	bcf	3,5	;RP0=0, select bank0
  4404  004F' 1303               	bcf	3,6	;RP1=0, select bank0
  4405  0050' 0082'              	movwf	??_cadastra_relogio+2
  4406  0051' 0802'              	movf	??_cadastra_relogio+2,w
  4407  0052' 008B'              	movwf	i1grava_eeprom@data
  4408  0053' 2000'              	fcall	i1_grava_eeprom
  4409                           
  4410                           ;logicSystem.c: 126: grava_eeprom(add_d_hora + 23, Min%10);
  4411  0054' 1283               	bcf	3,5	;RP0=0, select bank0
  4412  0055' 1303               	bcf	3,6	;RP1=0, select bank0
  4413  0056' 0809'              	movf	_add_d_hora,w
  4414  0057' 3E17               	addlw	23
  4415  0058' 0089'              	movwf	i1grava_eeprom@address
  4416  0059' 3000               	movlw	0
  4417  005A' 1803               	skipnc
  4418  005B' 3001               	movlw	1
  4419  005C' 008A'              	movwf	i1grava_eeprom@address+1
  4420  005D' 300A               	movlw	10
  4421  005E' 0080'              	movwf	i1___awmod@divisor
  4422  005F' 3000               	movlw	0
  4423  0060' 0081'              	movwf	i1___awmod@divisor+1
  4424  0061' 0801'              	movf	_Min,w
  4425  0062' 0080'              	movwf	??_cadastra_relogio
  4426  0063' 0181'              	clrf	??_cadastra_relogio+1
  4427  0064' 0800'              	movf	??_cadastra_relogio,w
  4428  0065' 0082'              	movwf	i1___awmod@dividend
  4429  0066' 0801'              	movf	??_cadastra_relogio+1,w
  4430  0067' 0083'              	movwf	i1___awmod@dividend+1
  4431  0068' 2000'              	fcall	i1___awmod
  4432  0069' 0800'              	movf	?i1___awmod,w
  4433  006A' 1283               	bcf	3,5	;RP0=0, select bank0
  4434  006B' 1303               	bcf	3,6	;RP1=0, select bank0
  4435  006C' 0082'              	movwf	??_cadastra_relogio+2
  4436  006D' 0802'              	movf	??_cadastra_relogio+2,w
  4437  006E' 008B'              	movwf	i1grava_eeprom@data
  4438  006F' 2000'              	fcall	i1_grava_eeprom
  4439  0070' 0008               	return
  4440  0071'                    __end_of_cadastra_relogio:	
  4441                           
  4442                           	psect	text24
  4443  0000'                    __ptext24:	
  4444 ;; *************** function i1_grava_eeprom *****************
  4445 ;; Defined at:
  4446 ;;		line 3 in file "memory.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  address         2    9[COMMON] int 
  4449 ;;  data            1   11[COMMON] unsigned char 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4461 ;;      Params:         3       0       0       0
  4462 ;;      Locals:         0       0       0       0
  4463 ;;      Temps:          2       0       0       0
  4464 ;;      Totals:         5       0       0       0
  4465 ;;Total ram usage:        5 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_comunica
  4471 ;;		_atualiza_relogio_blue
  4472 ;;		_cadastra_relogio
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function i1_grava_eeprom
  4478  0000'                    i1_grava_eeprom:	
  4479                           
  4480                           ;memory.c: 5: EEADR = address;
  4481                           
  4482                           ;incstack = 0
  4483                           ; Regs used in i1_grava_eeprom: [wreg]
  4484  0000' 0809'              	movf	i1grava_eeprom@address,w
  4485  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  4486  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  4487  0003' 009B               	movwf	27	;volatile
  4488                           
  4489                           ;memory.c: 6: EEDATA = data;
  4490  0004' 080B'              	movf	i1grava_eeprom@data,w
  4491  0005' 009A               	movwf	26	;volatile
  4492                           
  4493                           ;memory.c: 7: WREN = 1;
  4494  0006' 151C               	bsf	28,2	;volsfr
  4495                           
  4496                           ;memory.c: 8: GIE = 0;
  4497  0007' 138B               	bcf	11,7	;volatile
  4498                           
  4499                           ;memory.c: 10: EECON2 = 0x55;
  4500  0008' 3055               	movlw	85
  4501  0009' 009D               	movwf	29	;volsfr
  4502                           
  4503                           ;memory.c: 11: EECON2 = 0xAA;
  4504  000A' 30AA               	movlw	170
  4505  000B' 009D               	movwf	29	;volsfr
  4506                           
  4507                           ;memory.c: 13: WR = 1;
  4508  000C' 149C               	bsf	28,1	;volsfr
  4509                           
  4510                           ;memory.c: 14: GIE = 1;
  4511  000D' 178B               	bsf	11,7	;volatile
  4512                           
  4513                           ;memory.c: 16: EEIF=0;
  4514  000E' 1283               	bcf	3,5	;RP0=0, select bank0
  4515  000F' 1303               	bcf	3,6	;RP1=0, select bank0
  4516  0010' 138C               	bcf	12,7	;volatile
  4517                           
  4518                           ;memory.c: 17: _delay((unsigned long)((10)*(4000000/4000.0)));
  4519  0011' 300D               	movlw	13
  4520  0012' 008D'              	movwf	??i1_grava_eeprom+1
  4521  0013' 30FB               	movlw	251
  4522  0014' 008C'              	movwf	??i1_grava_eeprom
  4523  0015'                    u179_27:	
  4524  0015' 0B8C'              	decfsz	??i1_grava_eeprom,f
  4525  0016' 2815'              	goto	u179_27
  4526  0017' 0B8D'              	decfsz	??i1_grava_eeprom+1,f
  4527  0018' 2815'              	goto	u179_27
  4528  0019' 281A'              	nop2
  4529  001A' 0008               	return
  4530  001B'                    __end_ofi1_grava_eeprom:	
  4531                           
  4532                           	psect	text25
  4533  0000'                    __ptext25:	
  4534 ;; *************** function i1___awmod *****************
  4535 ;; Defined at:
  4536 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  divisor         2    0[COMMON] int 
  4539 ;;  dividend        2    2[COMMON] int 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  __awmod         1    6[COMMON] unsigned char 
  4542 ;;  __awmod         1    5[COMMON] unsigned char 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  2    0[COMMON] int 
  4545 ;; Registers used:
  4546 ;;		wreg, status,2, status,0
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4552 ;;      Params:         4       0       0       0
  4553 ;;      Locals:         2       0       0       0
  4554 ;;      Temps:          1       0       0       0
  4555 ;;      Totals:         7       0       0       0
  4556 ;;Total ram usage:        7 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_envia_teste
  4562 ;;		_comunica
  4563 ;;		_verifica
  4564 ;;		_cadastra_relogio
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           
  4569                           ;psect for function i1___awmod
  4570  0000'                    i1___awmod:	
  4571                           
  4572                           ;incstack = 0
  4573                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  4574  0000' 0186'              	clrf	i1___awmod@sign
  4575  0001' 1F83'              	btfss	i1___awmod@dividend+1,7
  4576  0002' 280A'              	goto	i1l1724
  4577  0003' 0982'              	comf	i1___awmod@dividend,f
  4578  0004' 0983'              	comf	i1___awmod@dividend+1,f
  4579  0005' 0A82'              	incf	i1___awmod@dividend,f
  4580  0006' 1903               	skipnz
  4581  0007' 0A83'              	incf	i1___awmod@dividend+1,f
  4582  0008' 0186'              	clrf	i1___awmod@sign
  4583  0009' 0A86'              	incf	i1___awmod@sign,f
  4584  000A'                    i1l1724:	
  4585  000A' 1F81'              	btfss	i1___awmod@divisor+1,7
  4586  000B' 2811'              	goto	i1l1728
  4587  000C' 0980'              	comf	i1___awmod@divisor,f
  4588  000D' 0981'              	comf	i1___awmod@divisor+1,f
  4589  000E' 0A80'              	incf	i1___awmod@divisor,f
  4590  000F' 1903               	skipnz
  4591  0010' 0A81'              	incf	i1___awmod@divisor+1,f
  4592  0011'                    i1l1728:	
  4593  0011' 0800'              	movf	i1___awmod@divisor,w
  4594  0012' 0401'              	iorwf	i1___awmod@divisor+1,w
  4595  0013' 1903               	btfsc	3,2
  4596  0014' 283E'              	goto	i1l1746
  4597  0015' 0185'              	clrf	i1___awmod@counter
  4598  0016' 0A85'              	incf	i1___awmod@counter,f
  4599  0017'                    i1l1736:	
  4600  0017' 1B81'              	btfsc	i1___awmod@divisor+1,7
  4601  0018' 2825'              	goto	i1l1738
  4602  0019' 3001               	movlw	1
  4603  001A'                    u129_25:	
  4604  001A' 1003               	clrc
  4605  001B' 0D80'              	rlf	i1___awmod@divisor,f
  4606  001C' 0D81'              	rlf	i1___awmod@divisor+1,f
  4607  001D' 3EFF               	addlw	-1
  4608  001E' 1D03               	skipz
  4609  001F' 281A'              	goto	u129_25
  4610  0020' 3001               	movlw	1
  4611  0021' 0084'              	movwf	??i1___awmod
  4612  0022' 0804'              	movf	??i1___awmod,w
  4613  0023' 0785'              	addwf	i1___awmod@counter,f
  4614  0024' 2817'              	goto	i1l1736
  4615  0025'                    i1l1738:	
  4616  0025' 0801'              	movf	i1___awmod@divisor+1,w
  4617  0026' 0203'              	subwf	i1___awmod@dividend+1,w
  4618  0027' 1D03               	skipz
  4619  0028' 282B'              	goto	u131_25
  4620  0029' 0800'              	movf	i1___awmod@divisor,w
  4621  002A' 0202'              	subwf	i1___awmod@dividend,w
  4622  002B'                    u131_25:	
  4623  002B' 1C03               	skipc
  4624  002C' 2833'              	goto	i1l1742
  4625  002D' 0800'              	movf	i1___awmod@divisor,w
  4626  002E' 0282'              	subwf	i1___awmod@dividend,f
  4627  002F' 0801'              	movf	i1___awmod@divisor+1,w
  4628  0030' 1C03               	skipc
  4629  0031' 0383'              	decf	i1___awmod@dividend+1,f
  4630  0032' 0283'              	subwf	i1___awmod@dividend+1,f
  4631  0033'                    i1l1742:	
  4632  0033' 3001               	movlw	1
  4633  0034'                    u132_25:	
  4634  0034' 1003               	clrc
  4635  0035' 0C81'              	rrf	i1___awmod@divisor+1,f
  4636  0036' 0C80'              	rrf	i1___awmod@divisor,f
  4637  0037' 3EFF               	addlw	-1
  4638  0038' 1D03               	skipz
  4639  0039' 2834'              	goto	u132_25
  4640  003A' 3001               	movlw	1
  4641  003B' 0285'              	subwf	i1___awmod@counter,f
  4642  003C' 1D03               	btfss	3,2
  4643  003D' 2825'              	goto	i1l1738
  4644  003E'                    i1l1746:	
  4645  003E' 0806'              	movf	i1___awmod@sign,w
  4646  003F' 1903               	btfsc	3,2
  4647  0040' 2846'              	goto	i1l1750
  4648  0041' 0982'              	comf	i1___awmod@dividend,f
  4649  0042' 0983'              	comf	i1___awmod@dividend+1,f
  4650  0043' 0A82'              	incf	i1___awmod@dividend,f
  4651  0044' 1903               	skipnz
  4652  0045' 0A83'              	incf	i1___awmod@dividend+1,f
  4653  0046'                    i1l1750:	
  4654  0046' 0803'              	movf	i1___awmod@dividend+1,w
  4655  0047' 0081'              	movwf	?i1___awmod+1
  4656  0048' 0802'              	movf	i1___awmod@dividend,w
  4657  0049' 0080'              	movwf	?i1___awmod
  4658  004A' 0008               	return
  4659  004B'                    __end_ofi1___awmod:	
  4660                           
  4661                           	psect	text26
  4662  0000'                    __ptext26:	
  4663 ;; *************** function i1___awdiv *****************
  4664 ;; Defined at:
  4665 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  divisor         2    0[COMMON] int 
  4668 ;;  dividend        2    2[COMMON] int 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  __awdiv         2    7[COMMON] int 
  4671 ;;  __awdiv         1    6[COMMON] unsigned char 
  4672 ;;  __awdiv         1    5[COMMON] unsigned char 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  2    0[COMMON] int 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4682 ;;      Params:         4       0       0       0
  4683 ;;      Locals:         4       0       0       0
  4684 ;;      Temps:          1       0       0       0
  4685 ;;      Totals:         9       0       0       0
  4686 ;;Total ram usage:        9 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_envia_teste
  4692 ;;		_comunica
  4693 ;;		_verifica
  4694 ;;		_cadastra_relogio
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           
  4699                           ;psect for function i1___awdiv
  4700  0000'                    i1___awdiv:	
  4701                           
  4702                           ;incstack = 0
  4703                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  4704  0000' 0186'              	clrf	i1___awdiv@sign
  4705  0001' 1F81'              	btfss	i1___awdiv@divisor+1,7
  4706  0002' 280A'              	goto	i1l1680
  4707  0003' 0980'              	comf	i1___awdiv@divisor,f
  4708  0004' 0981'              	comf	i1___awdiv@divisor+1,f
  4709  0005' 0A80'              	incf	i1___awdiv@divisor,f
  4710  0006' 1903               	skipnz
  4711  0007' 0A81'              	incf	i1___awdiv@divisor+1,f
  4712  0008' 0186'              	clrf	i1___awdiv@sign
  4713  0009' 0A86'              	incf	i1___awdiv@sign,f
  4714  000A'                    i1l1680:	
  4715  000A' 1F83'              	btfss	i1___awdiv@dividend+1,7
  4716  000B' 2815'              	goto	i1l1686
  4717  000C' 0982'              	comf	i1___awdiv@dividend,f
  4718  000D' 0983'              	comf	i1___awdiv@dividend+1,f
  4719  000E' 0A82'              	incf	i1___awdiv@dividend,f
  4720  000F' 1903               	skipnz
  4721  0010' 0A83'              	incf	i1___awdiv@dividend+1,f
  4722  0011' 3001               	movlw	1
  4723  0012' 0084'              	movwf	??i1___awdiv
  4724  0013' 0804'              	movf	??i1___awdiv,w
  4725  0014' 0686'              	xorwf	i1___awdiv@sign,f
  4726  0015'                    i1l1686:	
  4727  0015' 0187'              	clrf	i1___awdiv@quotient
  4728  0016' 0188'              	clrf	i1___awdiv@quotient+1
  4729  0017' 0800'              	movf	i1___awdiv@divisor,w
  4730  0018' 0401'              	iorwf	i1___awdiv@divisor+1,w
  4731  0019' 1903               	btfsc	3,2
  4732  001A' 284C'              	goto	i1l1708
  4733  001B' 0185'              	clrf	i1___awdiv@counter
  4734  001C' 0A85'              	incf	i1___awdiv@counter,f
  4735  001D'                    i1l1696:	
  4736  001D' 1B81'              	btfsc	i1___awdiv@divisor+1,7
  4737  001E' 282B'              	goto	i1l1698
  4738  001F' 3001               	movlw	1
  4739  0020'                    u119_25:	
  4740  0020' 1003               	clrc
  4741  0021' 0D80'              	rlf	i1___awdiv@divisor,f
  4742  0022' 0D81'              	rlf	i1___awdiv@divisor+1,f
  4743  0023' 3EFF               	addlw	-1
  4744  0024' 1D03               	skipz
  4745  0025' 2820'              	goto	u119_25
  4746  0026' 3001               	movlw	1
  4747  0027' 0084'              	movwf	??i1___awdiv
  4748  0028' 0804'              	movf	??i1___awdiv,w
  4749  0029' 0785'              	addwf	i1___awdiv@counter,f
  4750  002A' 281D'              	goto	i1l1696
  4751  002B'                    i1l1698:	
  4752  002B' 3001               	movlw	1
  4753  002C'                    u121_25:	
  4754  002C' 1003               	clrc
  4755  002D' 0D87'              	rlf	i1___awdiv@quotient,f
  4756  002E' 0D88'              	rlf	i1___awdiv@quotient+1,f
  4757  002F' 3EFF               	addlw	-1
  4758  0030' 1D03               	skipz
  4759  0031' 282C'              	goto	u121_25
  4760  0032' 0801'              	movf	i1___awdiv@divisor+1,w
  4761  0033' 0203'              	subwf	i1___awdiv@dividend+1,w
  4762  0034' 1D03               	skipz
  4763  0035' 2838'              	goto	u122_25
  4764  0036' 0800'              	movf	i1___awdiv@divisor,w
  4765  0037' 0202'              	subwf	i1___awdiv@dividend,w
  4766  0038'                    u122_25:	
  4767  0038' 1C03               	skipc
  4768  0039' 2841'              	goto	i1l1704
  4769  003A' 0800'              	movf	i1___awdiv@divisor,w
  4770  003B' 0282'              	subwf	i1___awdiv@dividend,f
  4771  003C' 0801'              	movf	i1___awdiv@divisor+1,w
  4772  003D' 1C03               	skipc
  4773  003E' 0383'              	decf	i1___awdiv@dividend+1,f
  4774  003F' 0283'              	subwf	i1___awdiv@dividend+1,f
  4775  0040' 1407'              	bsf	i1___awdiv@quotient,0
  4776  0041'                    i1l1704:	
  4777  0041' 3001               	movlw	1
  4778  0042'                    u123_25:	
  4779  0042' 1003               	clrc
  4780  0043' 0C81'              	rrf	i1___awdiv@divisor+1,f
  4781  0044' 0C80'              	rrf	i1___awdiv@divisor,f
  4782  0045' 3EFF               	addlw	-1
  4783  0046' 1D03               	skipz
  4784  0047' 2842'              	goto	u123_25
  4785  0048' 3001               	movlw	1
  4786  0049' 0285'              	subwf	i1___awdiv@counter,f
  4787  004A' 1D03               	btfss	3,2
  4788  004B' 282B'              	goto	i1l1698
  4789  004C'                    i1l1708:	
  4790  004C' 0806'              	movf	i1___awdiv@sign,w
  4791  004D' 1903               	btfsc	3,2
  4792  004E' 2854'              	goto	i1l1712
  4793  004F' 0987'              	comf	i1___awdiv@quotient,f
  4794  0050' 0988'              	comf	i1___awdiv@quotient+1,f
  4795  0051' 0A87'              	incf	i1___awdiv@quotient,f
  4796  0052' 1903               	skipnz
  4797  0053' 0A88'              	incf	i1___awdiv@quotient+1,f
  4798  0054'                    i1l1712:	
  4799  0054' 0808'              	movf	i1___awdiv@quotient+1,w
  4800  0055' 0081'              	movwf	?i1___awdiv+1
  4801  0056' 0807'              	movf	i1___awdiv@quotient,w
  4802  0057' 0080'              	movwf	?i1___awdiv
  4803  0058' 0008               	return
  4804  0059'                    __end_ofi1___awdiv:	
  4805  007E                     btemp	set	126	;btemp
  4806  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         38
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      62
    BANK1            80      9      29
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _serial in COMMON

    _serial->_verifica
    _verifica->i1___awdiv
    _envia_teste->i1___awdiv
    _envia_dados_da_memoria->i1___bmul
    _comunica->i1_grava_eeprom
    _atualiza_relogio_blue->i1_grava_eeprom
    i1___bmul->i1_le_eeprom
    _cadastra_relogio->i1_grava_eeprom
    i1_grava_eeprom->i1___awdiv

Critical Paths under _main in BANK0

    _main->_aciona
    _atualiza_variaveis->___bmul
    _atualiza_relogio->___bmul
    _aciona->_atualiza_remedio
    _atualiza_remedio->_grava_eeprom
    _grava_eeprom->___awdiv
    ___bmul->_le_eeprom
    ___awmod->___bmul
    ___awdiv->___bmul

Critical Paths under _serial in BANK0

    _serial->_comunica
    _comunica->_atualiza_relogio_blue

Critical Paths under _main in BANK1

    _aciona->_atualiza_remedio

Critical Paths under _serial in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _serial in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7674
                             _aciona
                   _atualiza_relogio
                 _atualiza_variaveis
                      _configura_pic
                     _configura_uart
                     _controle_servo
 ---------------------------------------------------------------------------------
 (1) _configura_uart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configura_pic                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atualiza_variaveis                                   3     3      0    1543
                                             20 BANK0      3     3      0
                             ___bmul
                          _le_eeprom
 ---------------------------------------------------------------------------------
 (1) _atualiza_relogio                                     2     2      0    1277
                                             20 BANK0      2     2      0
                             ___bmul
                          _le_eeprom
 ---------------------------------------------------------------------------------
 (2) _le_eeprom                                            2     0      2     607
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _aciona                                               1     1      0    4744
                                             37 BANK0      1     1      0
                   _atualiza_remedio
                     _controle_servo
 ---------------------------------------------------------------------------------
 (1) _controle_servo                                       3     3      0     110
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _atualiza_remedio                                    12    12      0    4634
                                             34 BANK0      3     3      0
                                              0 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                             ___bmul
                       _grava_eeprom
 ---------------------------------------------------------------------------------
 (3) _grava_eeprom                                         5     2      3     796
                                             29 BANK0      5     2      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     670
                                             16 BANK0      4     3      1
                          _le_eeprom (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1314
                                             20 BANK0      7     3      4
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1318
                                             20 BANK0      9     5      4
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _serial                                               5     5      0   11881
                                              9 BANK0      5     5      0
                   _cadastra_relogio
                           _comunica
                        _envia_teste
                     _incrementa_min
                           _verifica
 ---------------------------------------------------------------------------------
 (5) _verifica                                             6     6      0    2560
                                              9 COMMON     5     5      0
                                              0 BANK0      1     1      0
                          i1___awdiv
                          i1___awmod
                           i1___bmul
 ---------------------------------------------------------------------------------
 (5) _incrementa_min                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _envia_teste                                          2     2      0    2582
                                              9 COMMON     2     2      0
                         _enviaDados
             _envia_dados_da_memoria
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) _envia_dados_da_memoria                               2     2      0     820
                                              6 COMMON     2     2      0
                         _enviaDados
                           i1___bmul
 ---------------------------------------------------------------------------------
 (7) _enviaDados                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _comunica                                             5     5      0    4435
                                              4 BANK0      5     5      0
              _atualiza_relogio_blue
                          i1___awdiv
                          i1___awmod
                           i1___bmul
                     i1_grava_eeprom
 ---------------------------------------------------------------------------------
 (6) _atualiza_relogio_blue                                4     4      0    1444
                                              0 BANK0      4     4      0
                           i1___bmul
                     i1_grava_eeprom
                        i1_le_eeprom
 ---------------------------------------------------------------------------------
 (7) i1_le_eeprom                                          2     0      2     126
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) i1___bmul                                             4     3      1     664
                                              2 COMMON     4     3      1
                        i1_le_eeprom (ARG)
 ---------------------------------------------------------------------------------
 (5) _cadastra_relogio                                     3     3      0    2304
                                              0 BANK0      3     3      0
                          i1___awdiv
                          i1___awmod
                     i1_grava_eeprom
 ---------------------------------------------------------------------------------
 (6) i1_grava_eeprom                                       5     2      3     564
                                              9 COMMON     5     2      3
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                           i1___bmul (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     868
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     872
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _aciona
     _atualiza_remedio
       ___awdiv
         ___bmul (ARG)
           _le_eeprom (ARG)
       ___awmod
         ___bmul (ARG)
           _le_eeprom (ARG)
       ___bmul
         _le_eeprom (ARG)
       _grava_eeprom
         ___awdiv (ARG)
           ___bmul (ARG)
             _le_eeprom (ARG)
         ___awmod (ARG)
           ___bmul (ARG)
             _le_eeprom (ARG)
     _controle_servo
   _atualiza_relogio
     ___bmul
       _le_eeprom (ARG)
     _le_eeprom
   _atualiza_variaveis
     ___bmul
       _le_eeprom (ARG)
     _le_eeprom
   _configura_pic
   _configura_uart
   _controle_servo

 _serial (ROOT)
   _cadastra_relogio
     i1___awdiv
     i1___awmod
     i1_grava_eeprom
       i1___awdiv (ARG)
       i1___awmod (ARG)
       i1___bmul (ARG)
         i1_le_eeprom (ARG)
   _comunica
     _atualiza_relogio_blue
       i1___bmul
         i1_le_eeprom (ARG)
       i1_grava_eeprom
         i1___awdiv (ARG)
         i1___awmod (ARG)
         i1___bmul (ARG)
           i1_le_eeprom (ARG)
       i1_le_eeprom
     i1___awdiv
     i1___awmod
     i1___bmul
       i1_le_eeprom (ARG)
     i1_grava_eeprom
       i1___awdiv (ARG)
       i1___awmod (ARG)
       i1___bmul (ARG)
         i1_le_eeprom (ARG)
   _envia_teste
     _enviaDados
     _envia_dados_da_memoria
       _enviaDados
       i1___bmul
         i1_le_eeprom (ARG)
     i1___awdiv
     i1___awmod
   _incrementa_min
   _verifica
     i1___awdiv
     i1___awmod
     i1___bmul
       i1_le_eeprom (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      9      1D       7       36.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      3E       3       77.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      69      10        0.0%
ABS                  0      0      69       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr 20 11:21:37 2019

                              _i 0011                   ___bmul@product 0012                      __CFG_CP$OFF 0000  
                             _RD 04E0                               _WR 04E1                     ___awdiv@sign 001A  
                             _in 0010                   ?_configura_pic 0000                               fsr 0004  
        __size_of_controle_servo 009A                              _GIE 005F                              _RA1 0029  
                            _RB0 0030                     __CFG_CPD$OFF 0000                              u905 002E  
                            u915 003A                              u925 0044                              u885 0022  
                            u985 001C                              _Min 0001                              _led 000C  
                            _seg 000A                              fsr0 0004                  ?_configura_uart 0000  
                            indf 0000                     ___awmod@sign 001A                 ??i1_grava_eeprom 000C  
                   __CFG_LVP$OFF 0000                             l2010 0007                             l2022 0027  
                           l2030 0004                             l2016 0010                             l2018 001F  
                           l1500 0056                             l1512 000C                             l1600 005A  
                           l1530 0035                             l1524 0019                             l1516 0013  
                           l1452 000A                             l1526 0027                             l1534 0040  
                           l1448 0004                             l1608 007B                             l1474 0017  
                           l1538 0048                             l1492 0043                             l1484 001F  
                           l1468 000C                             l1486 002D                             l1496 004E  
                           l1592 003A                             l1584 001C                             l1996 00FA  
                           _EEIF 0067                             _T0IE 005D                             _T0IF 005A  
                           u1005 002D                             u1015 0036                             u1707 0026  
                           u1717 0034                             u1727 0045                             u1737 0055  
                           u1747 0067                             u1757 0075                             u1767 0088  
                           u1687 000B                             u1777 0095                             u1697 0016  
                           u1787 001D                             _PEIE 005E                             _INTE 005C  
                           _INTF 0059                             _RCIE 0465                             _RCIF 0065  
                           _TMR0 0001                             _WREN 04E2                             _TXIF 0064  
                           _Hora 0000                             _dado 000D                             _flag 000E  
                           _main 0000                             btemp 007E               i1grava_eeprom@data 000B  
                   ?_envia_teste 0000                             start 0000*               ___bmul@multiplier 0013  
                    i1_le_eeprom 0000                     _add_d_minuto 0002                            ?_main 0000  
                 i1___awdiv@sign 0006                  __end_of___awdiv 005B                            _EEADR 009B  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 004D                            _CMCON 001F  
                ___awdiv@divisor 0014                            i1l126 0001                            i1l154 002A  
                          i1l158 0047                  ___awdiv@counter 0019                            _RCREG 001A  
                          _RCSTA 0018                            _SPBRG 0099                            _PORTA 0005  
   envia_dados_da_memoria@indice 0007                            _TXREG 0019                            _TXSTA 0098  
              ?_cadastra_relogio 0000                   i1___awmod@sign 0006               ??_cadastra_relogio 0000  
              ?_atualiza_remedio 0000                            _botao 000B                ?_atualiza_relogio 0000  
               __end_ofi1___bmul 0011               ??_atualiza_remedio 0000                   __CFG_BOREN$OFF 0000  
                          pclath 000A               ??_atualiza_relogio 0014                    ?_grava_eeprom 001D  
                          status 0003                            wtemp0 007E                     _add_u_minuto 0001  
             __size_ofi1___awdiv 0059               __size_ofi1___awmod 004B       __end_of_atualiza_variaveis 007E  
                 __CFG_MCLRE$OFF 0000                  __initialization 0000                     __end_of_main 000D  
                ??_configura_pic 000E                           ??_main 0026                    verifica@count 0000  
                         _EEDATA 009A                           _EECON2 009D                 ___awdiv@dividend 0016  
                 ??_grava_eeprom 0020                           i1l1712 0054                           i1l1704 0041  
                         i1l1642 0008                           i1l1708 004C                           i1l1724 000A  
                         i1l1564 0002                           u121_25 002C                           i1l1750 0046  
                         i1l1742 0033                           i1l1680 000A                           i1l1736 0017  
                         i1l1728 0011                           i1l1568 0008                           i1l1648 0029  
                         i1l1738 0025                           i1l1746 003E                           i1l1922 00A2  
                         u122_25 0038                           i1l1686 0015                           i1l1854 0008  
                         i1l1950 0012                           i1l1696 001D                           i1l1872 0095  
                         i1l1698 002B                           i1l1946 000E                           u123_25 0042  
                         u131_25 002B                           i1l1968 0026                           i1l1976 0032  
                         u132_25 0034                           _INTEDG 040E                           u119_25 0020  
                         u129_25 001A                           u146_25 0027                           u147_25 004C  
                         u148_25 0071                           u149_25 0096                           u179_27 0015  
                         _TMR0IF 005A                           _TRISA1 0429                           _TRISB0 0430  
                         _TRISB2 0432                           _TRISB7 0437                _pendencia_remedio 0005  
                 __CFG_PWRTE$OFF 0000                           ___bmul 0000                 __end_of_comunica 017C  
                         _aciona 0000                        ??___awdiv 0018                        ??___awmod 0018  
                         _libera 000F                 ___awdiv@quotient 001B                  ___awmod@divisor 0014  
                         _serial 0000                  ___awmod@counter 0019                   _controle_servo 0000  
                         _string 0000                __end_ofi1___awdiv 0059                __end_ofi1___awmod 004B  
                         saved_w 007E                 __end_of_verifica 00A9          __size_of_incrementa_min 0015  
          _atualiza_relogio_blue 0000          __end_of__initialization 0011          atualiza_variaveis@count 0016  
            ___bmul@multiplicand 0010             __size_of_envia_teste 0072           atualiza_relogio_blue@i 0003  
                 __pcstackCOMMON 0000         ??_envia_dados_da_memoria 0006                       _add_d_hora 0009  
                   __pidataBANK0 0000           __end_of_controle_servo 009A                 ??_configura_uart 000E  
                     _add_u_hora 0003                        ?i1___bmul 0002               __size_of_le_eeprom 000A  
               i1___bmul@product 0004                       __pbssBANK0 0000                       __pbssBANK1 0000  
                     __pmaintext 0000                     ?i1_le_eeprom 0000                          ?___bmul 0010  
                        ?_aciona 0000                       __pintentry 0000                  ?_controle_servo 0000  
           __end_of_grava_eeprom 0023                          ?_serial 0000                       ??i1___bmul 0003  
             i1___awdiv@dividend 0002           ?_atualiza_relogio_blue 0000                        ?_comunica 0000  
                     _enviaDados 0000        __size_of_cadastra_relogio 0071               i1___awdiv@quotient 0007  
      __size_of_atualiza_remedio 019C        __size_of_atualiza_relogio 0041                __end_of_le_eeprom 000A  
                __size_of___bmul 0013  __size_of_envia_dados_da_memoria 0041                        ?_verifica 0000  
                        ___awdiv 0000                          ___awmod 0000                  __size_of_aciona 002B  
             _atualiza_variaveis 0000                          __ptext1 0000                          __ptext2 0000  
                __size_of_serial 0054                          __ptext3 0000                          __ptext4 0000  
                        __ptext5 0000                          __ptext6 0000                          __ptext7 0000  
                        __ptext8 0000                          __ptext9 0000                 le_eeprom@address 000E  
               ___awmod@dividend 0016                          _remedio 0000              i1___bmul@multiplier 0005  
            ?_atualiza_variaveis 0000                   _incrementa_min 0000            i1grava_eeprom@address 0009  
                        clrloop0 0001             end_of_initialization 0011                       ??_comunica 0004  
        __size_ofi1_grava_eeprom 001B             ??_atualiza_variaveis 0014                       ??_verifica 0009  
          __end_of_configura_pic 001C                        _PORTBbits 0006           __end_of_incrementa_min 0015  
                      i1___awdiv 0000                        i1___awmod 0000           _envia_dados_da_memoria 0000  
                   _comunica$760 0008                      ?_enviaDados 0000            __size_of_grava_eeprom 0023  
          atualiza_remedio@dados 0023            atualiza_remedio@count 0024                   __end_of___bmul 0013  
           __size_ofi1_le_eeprom 0008                   __end_of_aciona 002B                   __end_of_serial 0054  
              __size_ofi1___bmul 0011              start_initialization 0000                  ?_incrementa_min 0000  
                     ?i1___awdiv 0000                       ?i1___awmod 0000                     _grava_eeprom 0000  
                  ??_envia_teste 0009             _atualiza_remedio$761 0022                 _cadastra_relogio 0000  
               ??_controle_servo 000E                 _atualiza_remedio 0000                 _atualiza_relogio 0000  
                       ??___bmul 0011                         ??_aciona 0025                      __pdataBANK0 0000  
             i1le_eeprom@address 0000               i1___awmod@dividend 0002                         ??_serial 0009  
            __size_of_enviaDados 0008          ??_atualiza_relogio_blue 0000                        ___latbits 0000  
                  __pcstackBANK0 0000                    __pcstackBANK1 0000                        _add_passo 0000  
              __size_of_comunica 017C                        __pnvBANK0 0000                   i1_grava_eeprom 0000  
            __end_of_envia_teste 0072                         ?___awdiv 0014                         ?___awmod 0014  
              i1___awdiv@divisor 0000                i1___awdiv@counter 0005                __size_of_verifica 00A9  
                      _le_eeprom 0000                      ??i1___awdiv 0004                      ??i1___awmod 0004  
        __size_of_configura_uart 0014                  enviaDados@dados 0000           __end_ofi1_grava_eeprom 001B  
              interrupt_function 0000                        clear_ram0 0000            i1___bmul@multiplicand 0002  
                     ?_le_eeprom 000E                         i1___bmul 0000          ?_envia_dados_da_memoria 0000  
                   ??_enviaDados 0000                  ?i1_grava_eeprom 0009                      _envia_teste 0000  
    __size_of_atualiza_variaveis 007E                i1___awmod@divisor 0000                i1___awmod@counter 0005  
               __size_of___awdiv 005B                 __size_of___awmod 004D                 ??_incrementa_min 0000  
 __end_of_envia_dados_da_memoria 0041         __end_of_cadastra_relogio 0071               __end_of_enviaDados 0008  
       __end_of_atualiza_remedio 019C         __end_of_atualiza_relogio 0041                         __ptext10 0000  
                       __ptext11 0000                         __ptext20 0000                         __ptext12 0000  
                       __ptext21 0000                         __ptext13 0000                         __ptext22 0000  
                       __ptext14 0000                         __ptext23 0000                         __ptext15 0000  
                       __ptext24 0000                         __ptext16 0000                         __ptext25 0000  
                       __ptext17 0000                         __ptext26 0000                         __ptext18 0000  
                       __ptext19 0000                         _comunica 0000           __size_of_configura_pic 001C  
                  __size_of_main 000D                    ??i1_le_eeprom 0002                 grava_eeprom@data 001F  
                       _verifica 0000                      ??_le_eeprom 0010                   _configura_uart 0000  
 __size_of_atualiza_relogio_blue 0068    __end_of_atualiza_relogio_blue 0068                         intlevel1 0000* 
                  _configura_pic 0000              __end_ofi1_le_eeprom 0008                       _OPTION_REG 0081  
controle_servo@numero_do_remedio 0010           __end_of_configura_uart 0014              grava_eeprom@address 001D  
             __CFG_FOSC$INTOSCIO 0000  
